!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("HWWidgets",[],t):"object"==typeof exports?exports.HWWidgets=t():e.HWWidgets=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var a=n[r]={exports:{},id:r,loaded:!1};return e[r].call(a.exports,a,a.exports,t),a.loaded=!0,a.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}t.__esModule=!0;var a=n(1),i=r(a),o=n(21),s=r(o),l=n(31),u=r(l),f=n(42),c=r(f);(0,c["default"])(u["default"]),t["default"]={Sdk:i["default"],transferMethods:{configure:function(e){return new s["default"](e)}},init:function(){s["default"].internalAutoConfig()}},e.exports=t["default"]},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}t.__esModule=!0;var a=n(2),i=r(a),o=n(4),s=r(o),l=n(11),u=r(l);t["default"]={transferMethods:i["default"],translate:function(e){return this.translation[e]},xRegExp:u["default"],initTranslation:function(e){this.translation=e},init:function(e,t){s["default"].init(e,t)}},e.exports=t["default"]},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=e.currency,n=e.country,r=e.type,a=e.profileType,i=u;return"undefined"!=typeof n&&(i=i.filter(function(e){return-1!==e.countries.indexOf(n)})),"undefined"!=typeof t&&(i=i.filter(function(e){return-1!==e.currencies.indexOf(t)})),"undefined"!=typeof r&&(i=i.filter(function(e){return e.accountType===r})),"undefined"!=typeof a&&(i=i.filter(function(e){return e.profileType===a})),i}function o(e,t){var n=arguments.length<=2||void 0===arguments[2]?!1:arguments[2],r=[];for(var a in e)if(!(n&&p.indexOf(a)>-1)){var i=e[a];for(var o in i){var l=i[o],u=s(l,t[l.key],t);u.isValid||r.push({key:l.key,value:t[l.key],errors:u.errors})}}return r}function s(e,t,n){var r=!0,a=[];if("undefined"==typeof e.validate)return{isValid:r};var i=e.validate(t,n);return Array.isArray(i)?a=i:"string"==typeof i&&a.push(i),r=0===a.length,{isValid:r,errors:a}}function l(e,t,n,r){var a=o(e.fields,t,n);return a.length>0?void r(a):void h["default"].store(t,r)}t.__esModule=!0;var u,f=n(3),c=r(f),d=n(4),h=r(d),p=["PROFILE","ADDRESS"],m=function(){function e(){a(this,e)}return e.currencies=function t(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=e.country,r=e.type,a=e.profileType,t=i({country:n,type:r,profileType:a});return c["default"].sortArray(c["default"].flatMapUnique(t,function(e){return e.currencies}))},e.countries=function n(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=e.currency,r=e.type,a=e.profileType,n=i({currency:t,type:r,profileType:a});return c["default"].sortArray(c["default"].flatMapUnique(n,function(e){return e.countries}))},e.types=function r(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=e.currency,n=e.country,a=e.profileType,r=i({currency:t,country:n,profileType:a});return c["default"].sortArray(c["default"].unique(r.map(function(e){return e.accountType})))},e.profileTypes=function s(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=e.country,n=e.currency,r=e.type,s=i({country:t,currency:n,type:r});return c["default"].unique(s.map(function(e){return e.profileType}))},e.configurations=function(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],t=e.country,n=e.currency,r=e.type,a=e.profileType;return i({country:t,currency:n,type:r,profileType:a})},e.validate=function(e,t){var n=arguments.length<=2||void 0===arguments[2]?!1:arguments[2];return o(e.fields,t,n)},e.validateFields=function(e,t){var n=arguments.length<=2||void 0===arguments[2]?!1:arguments[2];return o(e,t,n)},e.profileGroups=function(){return p},e.store=function(e,t,n,r){if("undefined"==typeof e)throw new Error("transferMethodConfiguration is not defined");if("undefined"==typeof e.fields)throw new Error("transferMethodConfiguration.fields is not defined");if("undefined"==typeof t)throw new Error("data is not defined");return"undefined"==typeof r?new Promise(function(r,a){l(e,t,n,function(e,t){e?a(e):r(t)})}):void l(e,t,n,r)},e.initConfigurations=function(e){u=e},e}();t["default"]=m,e.exports=t["default"]},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var r=function(){function e(){n(this,e)}return e.sortArray=function(e){return e.sort(),e},e.flatMapUnique=function(e,t){return this.unique(this.flatMap(e,t))},e.flatMap=function(e,t){var n=e.map(t);return 0===n.length?n:n.reduce(function(e,t){return e.concat(t)})},e.unique=function(e){for(var t={},n=[],r=e.length,a=0,i=0;r>i;i++){var o=e[i];1!==t[o]&&(t[o]=1,n[a++]=o)}return n},e}();t["default"]=r,e.exports=t["default"]},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var i,o,s=n(5),l=r(s),u=function(){function e(){a(this,e)}return e.store=function(e,t){l["default"].post(o+"/rest/v3/json-caches").query({programToken:i}).send(e).end(function(e,n){e&&!n?t(e):"application/json"!==n.type?t(new Error("Response type is not application/json it is "+n.type)):n.ok?"undefined"==typeof n.body.token?t(new Error("Response does not contain field token")):t(null,n.body):t(n.body)})},e.init=function(e,t){o=e,i=t},e}();t["default"]=u,e.exports=t["default"]},function(e,t,n){"use strict";function r(){}function a(e){var t={}.toString.call(e);switch(t){case"[object File]":case"[object Blob]":case"[object FormData]":return!0;default:return!1}}function i(e){if(!v(e))return e;var t=[];for(var n in e)null!=e[n]&&o(t,n,e[n]);return t.join("&")}function o(e,t,n){return Array.isArray(n)?n.forEach(function(n){o(e,t,n)}):void e.push(encodeURIComponent(t)+"="+encodeURIComponent(n))}function s(e){for(var t,n,r={},a=e.split("&"),i=0,o=a.length;o>i;++i)n=a[i],t=n.split("="),r[decodeURIComponent(t[0])]=decodeURIComponent(t[1]);return r}function l(e){var t,n,r,a,i=e.split(/\r?\n/),o={};i.pop();for(var s=0,l=i.length;l>s;++s)n=i[s],t=n.indexOf(":"),r=n.slice(0,t).toLowerCase(),a=w(n.slice(t+1)),o[r]=a;return o}function u(e){return/[\/+]json\b/.test(e)}function f(e){return e.split(/ *; */).shift()}function c(e){return g(e.split(/ *; */),function(e,t){var n=t.split(/ *= */),r=n.shift(),a=n.shift();return r&&a&&(e[r]=a),e},{})}function d(e,t){t=t||{},this.req=e,this.xhr=this.req.xhr,this.text="HEAD"!=this.req.method&&(""===this.xhr.responseType||"text"===this.xhr.responseType)||"undefined"==typeof this.xhr.responseType?this.xhr.responseText:null,this.statusText=this.req.xhr.statusText,this.setStatusProperties(this.xhr.status),this.header=this.headers=l(this.xhr.getAllResponseHeaders()),this.header["content-type"]=this.xhr.getResponseHeader("content-type"),this.setHeaderProperties(this.header),this.body="HEAD"!=this.req.method?this.parseBody(this.text?this.text:this.xhr.response):null}function h(e,t){var n=this;this._query=this._query||[],this.method=e,this.url=t,this.header={},this._header={},this.on("end",function(){var e=null,t=null;try{t=new d(n)}catch(r){return e=new Error("Parser is unable to parse the response"),e.parse=!0,e.original=r,e.rawResponse=n.xhr&&n.xhr.responseText?n.xhr.responseText:null,e.statusCode=n.xhr&&n.xhr.status?n.xhr.status:null,n.callback(e)}if(n.emit("response",t),e)return n.callback(e,t);if(t.status>=200&&t.status<300)return n.callback(e,t);var a=new Error(t.statusText||"Unsuccessful HTTP response");a.original=e,a.response=t,a.status=t.status,n.callback(a,t)})}function p(e,t){var n=_("DELETE",e);return t&&n.end(t),n}var m,y=n(6),g=n(7),b=n(8),v=n(9);m="undefined"!=typeof window?window:"undefined"!=typeof self?self:void 0;var _=e.exports=n(10).bind(null,h);_.getXHR=function(){if(!(!m.XMLHttpRequest||m.location&&"file:"==m.location.protocol&&m.ActiveXObject))return new XMLHttpRequest;try{return new ActiveXObject("Microsoft.XMLHTTP")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.6.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP.3.0")}catch(e){}try{return new ActiveXObject("Msxml2.XMLHTTP")}catch(e){}return!1};var w="".trim?function(e){return e.trim()}:function(e){return e.replace(/(^\s*|\s*$)/g,"")};_.serializeObject=i,_.parseString=s,_.types={html:"text/html",json:"application/json",xml:"application/xml",urlencoded:"application/x-www-form-urlencoded",form:"application/x-www-form-urlencoded","form-data":"application/x-www-form-urlencoded"},_.serialize={"application/x-www-form-urlencoded":i,"application/json":JSON.stringify},_.parse={"application/x-www-form-urlencoded":s,"application/json":JSON.parse},d.prototype.get=function(e){return this.header[e.toLowerCase()]},d.prototype.setHeaderProperties=function(e){var t=this.header["content-type"]||"";this.type=f(t);var n=c(t);for(var r in n)this[r]=n[r]},d.prototype.parseBody=function(e){var t=_.parse[this.type];return!t&&u(this.type)&&(t=_.parse["application/json"]),t&&e&&(e.length||e instanceof Object)?t(e):null},d.prototype.setStatusProperties=function(e){1223===e&&(e=204);var t=e/100|0;this.status=this.statusCode=e,this.statusType=t,this.info=1==t,this.ok=2==t,this.clientError=4==t,this.serverError=5==t,this.error=4==t||5==t?this.toError():!1,this.accepted=202==e,this.noContent=204==e,this.badRequest=400==e,this.unauthorized=401==e,this.notAcceptable=406==e,this.notFound=404==e,this.forbidden=403==e},d.prototype.toError=function(){var e=this.req,t=e.method,n=e.url,r="cannot "+t+" "+n+" ("+this.status+")",a=new Error(r);return a.status=this.status,a.method=t,a.url=n,a},_.Response=d,y(h.prototype);for(var E in b)h.prototype[E]=b[E];h.prototype.abort=function(){return this.aborted?void 0:(this.aborted=!0,this.xhr.abort(),this.clearTimeout(),this.emit("abort"),this)},h.prototype.type=function(e){return this.set("Content-Type",_.types[e]||e),this},h.prototype.responseType=function(e){return this._responseType=e,this},h.prototype.accept=function(e){return this.set("Accept",_.types[e]||e),this},h.prototype.auth=function(e,t,n){switch(n||(n={type:"basic"}),n.type){case"basic":var r=btoa(e+":"+t);this.set("Authorization","Basic "+r);break;case"auto":this.username=e,this.password=t}return this},h.prototype.query=function(e){return"string"!=typeof e&&(e=i(e)),e&&this._query.push(e),this},h.prototype.attach=function(e,t,n){return this._getFormData().append(e,t,n||t.name),this},h.prototype._getFormData=function(){return this._formData||(this._formData=new m.FormData),this._formData},h.prototype.send=function(e){var t=v(e),n=this._header["content-type"];if(t&&v(this._data))for(var r in e)this._data[r]=e[r];else"string"==typeof e?(n||this.type("form"),n=this._header["content-type"],"application/x-www-form-urlencoded"==n?this._data=this._data?this._data+"&"+e:e:this._data=(this._data||"")+e):this._data=e;return!t||a(e)?this:(n||this.type("json"),this)},d.prototype.parse=function(e){return m.console&&console.warn("Client-side parse() method has been renamed to serialize(). This method is not compatible with superagent v2.0"),this.serialize(e),this},d.prototype.serialize=function(e){return this._parser=e,this},h.prototype.callback=function(e,t){var n=this._callback;this.clearTimeout(),n(e,t)},h.prototype.crossDomainError=function(){var e=new Error("Request has been terminated\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.");e.crossDomain=!0,e.status=this.status,e.method=this.method,e.url=this.url,this.callback(e)},h.prototype.timeoutError=function(){var e=this._timeout,t=new Error("timeout of "+e+"ms exceeded");t.timeout=e,this.callback(t)},h.prototype.withCredentials=function(){return this._withCredentials=!0,this},h.prototype.end=function(e){var t=this,n=this.xhr=_.getXHR(),i=this._query.join("&"),o=this._timeout,s=this._formData||this._data;this._callback=e||r,n.onreadystatechange=function(){if(4==n.readyState){var e;try{e=n.status}catch(r){e=0}if(0==e){if(t.timedout)return t.timeoutError();if(t.aborted)return;return t.crossDomainError()}t.emit("end")}};var l=function(e){e.total>0&&(e.percent=e.loaded/e.total*100),e.direction="download",t.emit("progress",e)};this.hasListeners("progress")&&(n.onprogress=l);try{n.upload&&this.hasListeners("progress")&&(n.upload.onprogress=l)}catch(f){}if(o&&!this._timer&&(this._timer=setTimeout(function(){t.timedout=!0,t.abort()},o)),i&&(i=_.serializeObject(i),this.url+=~this.url.indexOf("?")?"&"+i:"?"+i),this.username&&this.password?n.open(this.method,this.url,!0,this.username,this.password):n.open(this.method,this.url,!0),this._withCredentials&&(n.withCredentials=!0),"GET"!=this.method&&"HEAD"!=this.method&&"string"!=typeof s&&!a(s)){var c=this._header["content-type"],d=this._parser||_.serialize[c?c.split(";")[0]:""];!d&&u(c)&&(d=_.serialize["application/json"]),d&&(s=d(s))}for(var h in this.header)null!=this.header[h]&&n.setRequestHeader(h,this.header[h]);return this._responseType&&(n.responseType=this._responseType),this.emit("request",this),n.send("undefined"!=typeof s?s:null),this},_.Request=h,_.get=function(e,t,n){var r=_("GET",e);return"function"==typeof t&&(n=t,t=null),t&&r.query(t),n&&r.end(n),r},_.head=function(e,t,n){var r=_("HEAD",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},_.del=p,_["delete"]=p,_.patch=function(e,t,n){var r=_("PATCH",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},_.post=function(e,t,n){var r=_("POST",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r},_.put=function(e,t,n){var r=_("PUT",e);return"function"==typeof t&&(n=t,t=null),t&&r.send(t),n&&r.end(n),r}},function(e,t,n){"use strict";function r(e){return e?a(e):void 0}function a(e){for(var t in r.prototype)e[t]=r.prototype[t];return e}e.exports=r,r.prototype.on=r.prototype.addEventListener=function(e,t){return this._callbacks=this._callbacks||{},(this._callbacks["$"+e]=this._callbacks["$"+e]||[]).push(t),this},r.prototype.once=function(e,t){function n(){this.off(e,n),t.apply(this,arguments)}return n.fn=t,this.on(e,n),this},r.prototype.off=r.prototype.removeListener=r.prototype.removeAllListeners=r.prototype.removeEventListener=function(e,t){if(this._callbacks=this._callbacks||{},0==arguments.length)return this._callbacks={},this;var n=this._callbacks["$"+e];if(!n)return this;if(1==arguments.length)return delete this._callbacks["$"+e],this;for(var r,a=0;a<n.length;a++)if(r=n[a],r===t||r.fn===t){n.splice(a,1);break}return this},r.prototype.emit=function(e){this._callbacks=this._callbacks||{};var t=[].slice.call(arguments,1),n=this._callbacks["$"+e];if(n){n=n.slice(0);for(var r=0,a=n.length;a>r;++r)n[r].apply(this,t)}return this},r.prototype.listeners=function(e){return this._callbacks=this._callbacks||{},this._callbacks["$"+e]||[]},r.prototype.hasListeners=function(e){return!!this.listeners(e).length}},function(e,t){"use strict";e.exports=function(e,t,n){for(var r=0,a=e.length,i=3==arguments.length?n:e[r++];a>r;)i=t.call(null,i,e[r],++r,e);return i}},function(e,t,n){"use strict";var r=n(9);t.clearTimeout=function(){return this._timeout=0,clearTimeout(this._timer),this},t.parse=function(e){return this._parser=e,this},t.timeout=function(e){return this._timeout=e,this},t.then=function(e,t){return this.end(function(n,r){n?t(n):e(r)})},t.use=function(e){return e(this),this},t.get=function(e){return this._header[e.toLowerCase()]},t.getHeader=t.get,t.set=function(e,t){if(r(e)){for(var n in e)this.set(n,e[n]);return this}return this._header[e.toLowerCase()]=t,this.header[e]=t,this},t.unset=function(e){return delete this._header[e.toLowerCase()],delete this.header[e],this},t.field=function(e,t){return this._getFormData().append(e,t),this}},function(e,t){"use strict";function n(e){return null!=e&&"object"==("undefined"==typeof e?"undefined":r(e))}var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e};e.exports=n},function(e,t){"use strict";function n(e,t,n){return"function"==typeof n?new e("GET",t).end(n):2==arguments.length?new e("GET",t):new e(t,n)}e.exports=n},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}t.__esModule=!0;var a=n(12),i=r(a),o={};t["default"]={doMatchRegex:function(e,t){var n=o[e];"undefined"==typeof n&&(n=new i["default"](e),o[e]=n);try{return i["default"].test(t,n)}catch(r){return!0}}},e.exports=t["default"]},function(e,t,n){"use strict";var r=n(13);n(14)(r),n(15)(r),n(16)(r),n(17)(r),n(18)(r),n(19)(r),n(20)(r),e.exports=r},function(e,t){"use strict";function n(e){var t=!0;try{new RegExp("",e)}catch(n){t=!1}return t&&"y"===e?new RegExp("aa|.","y").test("b"):t}function r(e,t,n,r,a){var i;if(e[E]={captureNames:t},a)return e;if(e.__proto__)e.__proto__=w.prototype;else for(i in w.prototype)e[i]=w.prototype[i];return e[E].source=n,e[E].flags=r?r.split("").sort().join(""):r,e}function a(e){return x.replace.call(e,/([\s\S])(?=[\s\S]*\1)/g,"")}function i(e,t){if(!w.isRegExp(e))throw new TypeError("Type RegExp expected");var n=e[E]||{},i=s(e),o="",u="",f=null,c=null;return t=t||{},t.removeG&&(u+="g"),t.removeY&&(u+="y"),u&&(i=x.replace.call(i,new RegExp("["+u+"]+","g"),"")),t.addG&&(o+="g"),t.addY&&(o+="y"),o&&(i=a(i+o)),t.isInternalOnly||(void 0!==n.source&&(f=n.source),null!=n.flags&&(c=o?a(n.flags+o):n.flags)),e=r(new RegExp(e.source,i),l(e)?n.captureNames.slice(0):null,f,c,t.isInternalOnly)}function o(e){return parseInt(e,16)}function s(e){return O?e.flags:x.exec.call(/\/([a-z]*)$/i,RegExp.prototype.toString.call(e))[1]}function l(e){return!(!e[E]||!e[E].captureNames)}function u(e){return parseInt(e,10).toString(16)}function f(e,t){var n,r=e.length;for(n=0;r>n;++n)if(e[n]===t)return n;return-1}function c(e,t){return L.call(e)==="[object "+t+"]"}function d(e,t,n){return x.test.call(n.indexOf("x")>-1?/^(?:\s|#[^#\n]*|\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/:/^(?:\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/,e.slice(t))}function h(e){for(;e.length<4;)e="0"+e;return e}function p(e,t){var n;if(a(t)!==t)throw new SyntaxError("Invalid duplicate regex flag "+t);for(e=x.replace.call(e,/^\(\?([\w$]+)\)/,function(e,n){if(x.test.call(/[gy]/,n))throw new SyntaxError("Cannot use flag g or y in mode modifier "+e);return t=a(t+n),""}),n=0;n<t.length;++n)if(!D[t.charAt(n)])throw new SyntaxError("Unknown regex flag "+t.charAt(n));return{pattern:e,flags:t}}function m(e){var t={};return c(e,"String")?(w.forEach(e,/[^\s,]+/,function(e){t[e]=!0}),t):e}function y(e){if(!/^[\w$]$/.test(e))throw new Error("Flag must be a single character A-Za-z0-9_$");D[e]=!0}function g(e,t,n,r,a){for(var i,o,s=k.length,l=e.charAt(n),u=null;s--;)if(o=k[s],!(o.leadChar&&o.leadChar!==l||o.scope!==r&&"all"!==o.scope||o.flag&&-1===t.indexOf(o.flag))&&(i=w.exec(e,o.regex,n,"sticky"))){u={matchLength:i[0].length,output:o.handler.call(a,i,r,t),reparse:o.reparse};break}return u}function b(e){I.astral=e}function v(e){RegExp.prototype.exec=(e?C:x).exec,RegExp.prototype.test=(e?C:x).test,String.prototype.match=(e?C:x).match,String.prototype.replace=(e?C:x).replace,String.prototype.split=(e?C:x).split,I.natives=e}function _(e){if(null==e)throw new TypeError("Cannot convert null or undefined to object");return e}function w(e,t){if(w.isRegExp(e)){if(void 0!==t)throw new TypeError("Cannot supply flags when copying a RegExp");return i(e)}if(e=void 0===e?"":String(e),t=void 0===t?"":String(t),w.isInstalled("astral")&&-1===t.indexOf("A")&&(t+="A"),A[e]||(A[e]={}),!A[e][t]){for(var n,a={hasNamedCapture:!1,captureNames:[]},o=T,s="",l=0,u=p(e,t),f=u.pattern,c=u.flags;l<f.length;){do n=g(f,c,l,o,a),n&&n.reparse&&(f=f.slice(0,l)+n.output+f.slice(l+n.matchLength));while(n&&n.reparse);if(n)s+=n.output,l+=n.matchLength||1;else{var d=w.exec(f,R[o],l,"sticky")[0];s+=d,l+=d.length,"["===d&&o===T?o=M:"]"===d&&o===M&&(o=T)}}A[e][t]={pattern:x.replace.call(s,/(?:\(\?:\))+/g,"(?:)"),flags:x.replace.call(c,/[^gimuy]+/g,""),captures:a.hasNamedCapture?a.captureNames:null}}var h=A[e][t];return r(new RegExp(h.pattern,h.flags),h.captures,e,t)}var E="xregexp",I={astral:!1,natives:!1},x={exec:RegExp.prototype.exec,test:RegExp.prototype.test,match:String.prototype.match,replace:String.prototype.replace,split:String.prototype.split},C={},S={},A={},k=[],T="default",M="class",R={"default":/\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|\(\?(?:[:=!]|<[=!])|[?*+]\?|{\d+(?:,\d*)?}\??|[\s\S]/,"class":/\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|[\s\S]/},B=/\$(?:{([\w$]+)}|(\d\d?|[\s\S]))/g,P=void 0===x.exec.call(/()??/,"")[1],O=void 0!==/x/.flags,L={}.toString,F=n("u"),U=n("y"),D={g:!0,i:!0,m:!0,u:F,y:U};w.prototype=new RegExp,w.version="3.1.1",w._hasNativeFlag=n,w._dec=o,w._hex=u,w._pad4=h,w.addToken=function(e,t,n){n=n||{};var r,a=n.optionalFlags;if(n.flag&&y(n.flag),a)for(a=x.split.call(a,""),r=0;r<a.length;++r)y(a[r]);k.push({regex:i(e,{addG:!0,addY:U,isInternalOnly:!0}),handler:t,scope:n.scope||T,flag:n.flag,reparse:n.reparse,leadChar:n.leadChar}),w.cache.flush("patterns")},w.cache=function(e,t){return S[e]||(S[e]={}),S[e][t]||(S[e][t]=w(e,t))},w.cache.flush=function(e){"patterns"===e?A={}:S={}},w.escape=function(e){return x.replace.call(_(e),/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},w.exec=function(e,t,n,r){var a,o,s="g",l=!1;return l=U&&!!(r||t.sticky&&r!==!1),l&&(s+="y"),t[E]=t[E]||{},o=t[E][s]||(t[E][s]=i(t,{addG:!0,addY:l,removeY:r===!1,isInternalOnly:!0})),o.lastIndex=n=n||0,a=C.exec.call(o,e),r&&a&&a.index!==n&&(a=null),t.global&&(t.lastIndex=a?o.lastIndex:0),a},w.forEach=function(e,t,n){for(var r,a=0,i=-1;r=w.exec(e,t,a);)n(r,++i,e,t),a=r.index+(r[0].length||1)},w.globalize=function(e){return i(e,{addG:!0})},w.install=function(e){e=m(e),!I.astral&&e.astral&&b(!0),!I.natives&&e.natives&&v(!0)},w.isInstalled=function(e){return!!I[e]},w.isRegExp=function(e){return"[object RegExp]"===L.call(e)},w.match=function(e,t,n){var r,a,o=t.global&&"one"!==n||"all"===n,s=(o?"g":"")+(t.sticky?"y":"")||"noGY";return t[E]=t[E]||{},a=t[E][s]||(t[E][s]=i(t,{addG:!!o,removeG:"one"===n,isInternalOnly:!0})),r=x.match.call(_(e),a),t.global&&(t.lastIndex="one"===n&&r?r.index+r[0].length:0),o?r||[]:r&&r[0]},w.matchChain=function(e,t){return function n(e,r){function a(e){if(i.backref){if(!(e.hasOwnProperty(i.backref)||+i.backref<e.length))throw new ReferenceError("Backreference to undefined group: "+i.backref);o.push(e[i.backref]||"")}else o.push(e[0])}for(var i=t[r].regex?t[r]:{regex:t[r]},o=[],s=0;s<e.length;++s)w.forEach(e[s],i.regex,a);return r!==t.length-1&&o.length?n(o,r+1):o}([e],0)},w.replace=function(e,t,n,r){var a,o=w.isRegExp(t),s=t.global&&"one"!==r||"all"===r,l=(s?"g":"")+(t.sticky?"y":"")||"noGY",u=t;return o?(t[E]=t[E]||{},u=t[E][l]||(t[E][l]=i(t,{addG:!!s,removeG:"one"===r,isInternalOnly:!0}))):s&&(u=new RegExp(w.escape(String(t)),"g")),a=C.replace.call(_(e),u,n),o&&t.global&&(t.lastIndex=0),a},w.replaceEach=function(e,t){var n,r;for(n=0;n<t.length;++n)r=t[n],e=w.replace(e,r[0],r[1],r[2]);return e},w.split=function(e,t,n){return C.split.call(_(e),t,n)},w.test=function(e,t,n,r){return!!w.exec(e,t,n,r)},w.uninstall=function(e){e=m(e),I.astral&&e.astral&&b(!1),I.natives&&e.natives&&v(!1)},w.union=function(e,t){function n(e,t,n){var o=a[i-r];if(t){if(++i,o)return"(?<"+o+">"}else if(n)return"\\"+(+n+r);return e}var r,a,i=0;if(!c(e,"Array")||!e.length)throw new TypeError("Must provide a nonempty array of patterns to merge");for(var o,s=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,l=[],u=0;u<e.length;++u)o=e[u],w.isRegExp(o)?(r=i,a=o[E]&&o[E].captureNames||[],l.push(x.replace.call(w(o.source).source,s,n))):l.push(w.escape(o));return w(l.join("|"),t)},C.exec=function(e){var t,n,r,a=this.lastIndex,o=x.exec.apply(this,arguments);if(o){if(!P&&o.length>1&&f(o,"")>-1&&(n=i(this,{removeG:!0,isInternalOnly:!0}),x.replace.call(String(e).slice(o.index),n,function(){var e,t=arguments.length;for(e=1;t-2>e;++e)void 0===arguments[e]&&(o[e]=void 0)})),this[E]&&this[E].captureNames)for(r=1;r<o.length;++r)t=this[E].captureNames[r-1],t&&(o[t]=o[r]);this.global&&!o[0].length&&this.lastIndex>o.index&&(this.lastIndex=o.index)}return this.global||(this.lastIndex=a),o},C.test=function(e){return!!C.exec.call(this,e)},C.match=function(e){var t;if(w.isRegExp(e)){if(e.global)return t=x.match.apply(this,arguments),e.lastIndex=0,t}else e=new RegExp(e);return C.exec.call(e,_(this))},C.replace=function(e,t){var n,r,a,i=w.isRegExp(e);return i?(e[E]&&(r=e[E].captureNames),n=e.lastIndex):e+="",a=c(t,"Function")?x.replace.call(String(this),e,function(){var n,a=arguments;if(r)for(a[0]=new String(a[0]),n=0;n<r.length;++n)r[n]&&(a[0][r[n]]=a[n+1]);return i&&e.global&&(e.lastIndex=a[a.length-2]+a[0].length),t.apply(void 0,a)}):x.replace.call(null==this?this:String(this),e,function(){var e=arguments;return x.replace.call(String(t),B,function(t,n,a){var i;if(n){if(i=+n,i<=e.length-3)return e[i]||"";if(i=r?f(r,n):-1,0>i)throw new SyntaxError("Backreference to undefined group "+t);return e[i+1]||""}if("$"===a)return"$";if("&"===a||0===+a)return e[0];if("`"===a)return e[e.length-1].slice(0,e[e.length-2]);if("'"===a)return e[e.length-1].slice(e[e.length-2]+e[0].length);if(a=+a,!isNaN(a)){if(a>e.length-3)throw new SyntaxError("Backreference to undefined group "+t);return e[a]||""}throw new SyntaxError("Invalid token "+t)})}),i&&(e.global?e.lastIndex=0:e.lastIndex=n),a},C.split=function(e,t){if(!w.isRegExp(e))return x.split.apply(this,arguments);var n,r=String(this),a=[],i=e.lastIndex,o=0;return t=(void 0===t?-1:t)>>>0,w.forEach(r,e,function(e){e.index+e[0].length>o&&(a.push(r.slice(o,e.index)),e.length>1&&e.index<r.length&&Array.prototype.push.apply(a,e.slice(1)),n=e[0].length,o=e.index+n)}),o===r.length?x.test.call(e,"")&&!n||a.push(""):a.push(r.slice(o)),e.lastIndex=i,a.length>t?a.slice(0,t):a},w.addToken(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4}|{[\dA-Fa-f]+})|x(?![\dA-Fa-f]{2}))/,function(e,t){if("B"===e[1]&&t===T)return e[0];throw new SyntaxError("Invalid escape "+e[0])},{scope:"all",leadChar:"\\"}),w.addToken(/\\u{([\dA-Fa-f]+)}/,function(e,t,n){var r=o(e[1]);if(r>1114111)throw new SyntaxError("Invalid Unicode code point "+e[0]);if(65535>=r)return"\\u"+h(u(r));if(F&&n.indexOf("u")>-1)return e[0];throw new SyntaxError("Cannot use Unicode code point above \\u{FFFF} without flag u")},{scope:"all",leadChar:"\\"}),w.addToken(/\[(\^?)]/,function(e){return e[1]?"[\\s\\S]":"\\b\\B"},{leadChar:"["}),w.addToken(/\(\?#[^)]*\)/,function(e,t,n){return d(e.input,e.index+e[0].length,n)?"":"(?:)"},{leadChar:"("}),w.addToken(/\s+|#[^\n]*\n?/,function(e,t,n){return d(e.input,e.index+e[0].length,n)?"":"(?:)"},{flag:"x"}),w.addToken(/\./,function(){return"[\\s\\S]"},{flag:"s",leadChar:"."}),w.addToken(/\\k<([\w$]+)>/,function(e){var t=isNaN(e[1])?f(this.captureNames,e[1])+1:+e[1],n=e.index+e[0].length;if(!t||t>this.captureNames.length)throw new SyntaxError("Backreference to undefined group "+e[0]);return"\\"+t+(n===e.input.length||isNaN(e.input.charAt(n))?"":"(?:)")},{leadChar:"\\"}),w.addToken(/\\(\d+)/,function(e,t){if(!(t===T&&/^[1-9]/.test(e[1])&&+e[1]<=this.captureNames.length)&&"0"!==e[1])throw new SyntaxError("Cannot use octal escape or backreference to undefined group "+e[0]);return e[0]},{scope:"all",leadChar:"\\"}),w.addToken(/\(\?P?<([\w$]+)>/,function(e){if(!isNaN(e[1]))throw new SyntaxError("Cannot use integer as capture name "+e[0]);if("length"===e[1]||"__proto__"===e[1])throw new SyntaxError("Cannot use reserved word as capture name "+e[0]);if(f(this.captureNames,e[1])>-1)throw new SyntaxError("Cannot use same name for multiple groups "+e[0]);return this.captureNames.push(e[1]),this.hasNamedCapture=!0,"("},{leadChar:"("}),w.addToken(/\((?!\?)/,function(e,t,n){return n.indexOf("n")>-1?"(?:":(this.captureNames.push(null),"(")},{optionalFlags:"n",leadChar:"("}),e.exports=w},function(e,t){"use strict";e.exports=function(e){function t(e){var t=/^(?:\(\?:\))*\^/,n=/\$(?:\(\?:\))*$/;return t.test(e)&&n.test(e)&&n.test(e.replace(/\\[\s\S]/g,""))?e.replace(t,"").replace(n,""):e}function n(t){return e.isRegExp(t)?t[r]&&t[r].captureNames?t:e(t.source):e(t)}var r="xregexp",a=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*]/g,i=e.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/,a],"g");e.build=function(o,s,l){var u,f,c,d,h=/^\(\?([\w$]+)\)/.exec(o),p={},m=0,y=0,g=[0];h&&(l=l||"",h[1].replace(/./g,function(e){l+=l.indexOf(e)>-1?"":e}));for(d in s)s.hasOwnProperty(d)&&(c=n(s[d]),p[d]={pattern:t(c.source),names:c[r].captureNames||[]});return o=n(o),f=o[r].captureNames||[],o=o.source.replace(i,function(e,t,n,r,i){var o,s,l,c=t||n;if(c){if(!p.hasOwnProperty(c))throw new ReferenceError("Undefined property "+e);return t?(o=f[y],g[++y]=++m,s="(?<"+(o||c)+">"):s="(?:",u=m,s+p[c].pattern.replace(a,function(e,t,n){if(t){if(o=p[c].names[m-u],++m,o)return"(?<"+o+">"}else if(n)return l=+n-1,p[c].names[l]?"\\k<"+p[c].names[l]+">":"\\"+(+n+u);return e})+")"}if(r){if(o=f[y],g[++y]=++m,o)return"(?<"+o+">"}else if(i)return l=+i-1,f[l]?"\\k<"+f[l]+">":"\\"+g[+i];return e}),e(o,l)}}},function(e,t){"use strict";e.exports=function(e){function t(e,t,n,r){return{name:e,value:t,start:n,end:r}}e.matchRecursive=function(n,r,a,i,o){i=i||"",o=o||{};var s,l,u,f,c,d=i.indexOf("g")>-1,h=i.indexOf("y")>-1,p=i.replace(/y/g,""),m=o.escapeChar,y=o.valueNames,g=[],b=0,v=0,_=0,w=0;if(r=e(r,p),a=e(a,p),m){if(m.length>1)throw new Error("Cannot use more than one escape character");m=e.escape(m),c=new RegExp("(?:"+m+"[\\S\\s]|(?:(?!"+e.union([r,a]).source+")[^"+m+"])+)+",i.replace(/[^imu]+/g,""))}for(;;){if(m&&(_+=(e.exec(n,c,_,"sticky")||[""])[0].length),u=e.exec(n,r,_),f=e.exec(n,a,_),u&&f&&(u.index<=f.index?f=null:u=null),u||f)v=(u||f).index,_=v+(u||f)[0].length;else if(!b)break;if(h&&!b&&v>w)break;if(u)b||(s=v,l=_),++b;else{if(!f||!b)throw new Error("Unbalanced delimiter found in string");if(!--b&&(y?(y[0]&&s>w&&g.push(t(y[0],n.slice(w,s),w,s)),y[1]&&g.push(t(y[1],n.slice(s,l),s,l)),y[2]&&g.push(t(y[2],n.slice(l,v),l,v)),y[3]&&g.push(t(y[3],n.slice(v,_),v,_))):g.push(n.slice(l,v)),w=_,!d))break}v===_&&++_}return d&&!h&&y&&y[0]&&n.length>w&&g.push(t(y[0],n.slice(w),w,n.length)),g}}},function(e,t){"use strict";e.exports=function(e){function t(e){return e.replace(/[- _]+/g,"").toLowerCase()}function n(e){var t=/^\\[xu](.+)/.exec(e);return t?l(t[1]):e.charCodeAt("\\"===e.charAt(0)?1:0)}function r(t){var r="",a=-1;return e.forEach(t,/(\\x..|\\u....|\\?[\s\S])(?:-(\\x..|\\u....|\\?[\s\S]))?/,function(e){var t=n(e[1]);t>a+1&&(r+="\\u"+f(u(a+1)),t>a+2&&(r+="-\\u"+f(u(t-1)))),a=n(e[2]||e[1])}),65535>a&&(r+="\\u"+f(u(a+1)),65534>a&&(r+="-\\uFFFF")),r}function a(e){var t="b!";return s[e][t]||(s[e][t]=r(s[e].bmp))}function i(e,t){var n=s[e],r="";return n.bmp&&!n.isBmpLast&&(r="["+n.bmp+"]"+(n.astral?"|":"")),n.astral&&(r+=n.astral),n.isBmpLast&&n.bmp&&(r+=(n.astral?"|":"")+"["+n.bmp+"]"),t?"(?:(?!"+r+")(?:[�-�][�-�]|[\x00-￿]))":"(?:"+r+")"}function o(e,t){var n=t?"a!":"a=";return s[e][n]||(s[e][n]=i(e,t))}var s={},l=e._dec,u=e._hex,f=e._pad4;e.addToken(/\\([pP])(?:{(\^?)([^}]*)}|([A-Za-z]))/,function(e,n,r){var i="Invalid double negation ",l="Unknown Unicode token ",u="Unicode token missing data ",f="Astral mode required for Unicode token ",c="Astral mode does not support Unicode tokens within character classes",d="P"===e[1]||!!e[2],h=r.indexOf("A")>-1,p=t(e[4]||e[3]),m=s[p];if("P"===e[1]&&e[2])throw new SyntaxError(i+e[0]);if(!s.hasOwnProperty(p))throw new SyntaxError(l+e[0]);if(m.inverseOf){if(p=t(m.inverseOf),!s.hasOwnProperty(p))throw new ReferenceError(u+e[0]+" -> "+m.inverseOf);m=s[p],d=!d}if(!m.bmp&&!h)throw new SyntaxError(f+e[0]);if(h){if("class"===n)throw new SyntaxError(c);
return o(p,d)}return"class"===n?d?a(p):m.bmp:(d?"[^":"[")+m.bmp+"]"},{scope:"all",optionalFlags:"A",leadChar:"\\"}),e.addUnicodeData=function(n){var r,a,i="Unicode token requires name",o="Unicode token has no character data ";for(a=0;a<n.length;++a){if(r=n[a],!r.name)throw new Error(i);if(!(r.inverseOf||r.bmp||r.astral))throw new Error(o+r.name);s[t(r.name)]=r,r.alias&&(s[t(r.alias)]=r)}e.cache.flush("patterns")}}},function(e,t){"use strict";e.exports=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Blocks");e.addUnicodeData([{name:"InAegean_Numbers",astral:"�[�-�]"},{name:"InAhom",astral:"�[�-�]"},{name:"InAlchemical_Symbols",astral:"�[�-�]"},{name:"InAlphabetic_Presentation_Forms",bmp:"ﬀ-ﭏ"},{name:"InAnatolian_Hieroglyphs",astral:"�[�-�]"},{name:"InAncient_Greek_Musical_Notation",astral:"�[�-�]"},{name:"InAncient_Greek_Numbers",astral:"�[�-�]"},{name:"InAncient_Symbols",astral:"�[�-�]"},{name:"InArabic",bmp:"؀-ۿ"},{name:"InArabic_Extended_A",bmp:"ࢠ-ࣿ"},{name:"InArabic_Mathematical_Alphabetic_Symbols",astral:"�[�-�]"},{name:"InArabic_Presentation_Forms_A",bmp:"ﭐ-﷿"},{name:"InArabic_Presentation_Forms_B",bmp:"ﹰ-\ufeff"},{name:"InArabic_Supplement",bmp:"ݐ-ݿ"},{name:"InArmenian",bmp:"԰-֏"},{name:"InArrows",bmp:"←-⇿"},{name:"InAvestan",astral:"�[�-�]"},{name:"InBalinese",bmp:"ᬀ-᭿"},{name:"InBamum",bmp:"ꚠ-꛿"},{name:"InBamum_Supplement",astral:"�[�-�]"},{name:"InBasic_Latin",bmp:"\x00-"},{name:"InBassa_Vah",astral:"�[�-�]"},{name:"InBatak",bmp:"ᯀ-᯿"},{name:"InBengali",bmp:"ঀ-৿"},{name:"InBlock_Elements",bmp:"▀-▟"},{name:"InBopomofo",bmp:"㄀-ㄯ"},{name:"InBopomofo_Extended",bmp:"ㆠ-ㆿ"},{name:"InBox_Drawing",bmp:"─-╿"},{name:"InBrahmi",astral:"�[�-�]"},{name:"InBraille_Patterns",bmp:"⠀-⣿"},{name:"InBuginese",bmp:"ᨀ-᨟"},{name:"InBuhid",bmp:"ᝀ-᝟"},{name:"InByzantine_Musical_Symbols",astral:"�[�-�]"},{name:"InCJK_Compatibility",bmp:"㌀-㏿"},{name:"InCJK_Compatibility_Forms",bmp:"︰-﹏"},{name:"InCJK_Compatibility_Ideographs",bmp:"豈-﫿"},{name:"InCJK_Compatibility_Ideographs_Supplement",astral:"�[�-�]"},{name:"InCJK_Radicals_Supplement",bmp:"⺀-⻿"},{name:"InCJK_Strokes",bmp:"㇀-㇯"},{name:"InCJK_Symbols_and_Punctuation",bmp:"　-〿"},{name:"InCJK_Unified_Ideographs",bmp:"一-鿿"},{name:"InCJK_Unified_Ideographs_Extension_A",bmp:"㐀-䶿"},{name:"InCJK_Unified_Ideographs_Extension_B",astral:"[�-�][�-�]|�[�-�]"},{name:"InCJK_Unified_Ideographs_Extension_C",astral:"�[�-�]|[�-�][�-�]|�[�-�]"},{name:"InCJK_Unified_Ideographs_Extension_D",astral:"�[�-�]|�[�-�]"},{name:"InCJK_Unified_Ideographs_Extension_E",astral:"[�-�][�-�]|�[�-�]|�[�-�]"},{name:"InCarian",astral:"�[�-�]"},{name:"InCaucasian_Albanian",astral:"�[�-�]"},{name:"InChakma",astral:"�[�-�]"},{name:"InCham",bmp:"ꨀ-꩟"},{name:"InCherokee",bmp:"Ꭰ-᏿"},{name:"InCherokee_Supplement",bmp:"ꭰ-ꮿ"},{name:"InCombining_Diacritical_Marks",bmp:"̀-ͯ"},{name:"InCombining_Diacritical_Marks_Extended",bmp:"᪰-᫿"},{name:"InCombining_Diacritical_Marks_Supplement",bmp:"᷀-᷿"},{name:"InCombining_Diacritical_Marks_for_Symbols",bmp:"⃐-⃿"},{name:"InCombining_Half_Marks",bmp:"︠-︯"},{name:"InCommon_Indic_Number_Forms",bmp:"꠰-꠿"},{name:"InControl_Pictures",bmp:"␀-␿"},{name:"InCoptic",bmp:"Ⲁ-⳿"},{name:"InCoptic_Epact_Numbers",astral:"�[�-�]"},{name:"InCounting_Rod_Numerals",astral:"�[�-�]"},{name:"InCuneiform",astral:"�[�-�]"},{name:"InCuneiform_Numbers_and_Punctuation",astral:"�[�-�]"},{name:"InCurrency_Symbols",bmp:"₠-⃏"},{name:"InCypriot_Syllabary",astral:"�[�-�]"},{name:"InCyrillic",bmp:"Ѐ-ӿ"},{name:"InCyrillic_Extended_A",bmp:"ⷠ-ⷿ"},{name:"InCyrillic_Extended_B",bmp:"Ꙁ-ꚟ"},{name:"InCyrillic_Supplement",bmp:"Ԁ-ԯ"},{name:"InDeseret",astral:"�[�-�]"},{name:"InDevanagari",bmp:"ऀ-ॿ"},{name:"InDevanagari_Extended",bmp:"꣠-ꣿ"},{name:"InDingbats",bmp:"✀-➿"},{name:"InDomino_Tiles",astral:"�[�-�]"},{name:"InDuployan",astral:"�[�-�]"},{name:"InEarly_Dynastic_Cuneiform",astral:"�[�-�]"},{name:"InEgyptian_Hieroglyphs",astral:"�[�-�]|�[�-�]"},{name:"InElbasan",astral:"�[�-�]"},{name:"InEmoticons",astral:"�[�-�]"},{name:"InEnclosed_Alphanumeric_Supplement",astral:"�[�-�]"},{name:"InEnclosed_Alphanumerics",bmp:"①-⓿"},{name:"InEnclosed_CJK_Letters_and_Months",bmp:"㈀-㋿"},{name:"InEnclosed_Ideographic_Supplement",astral:"�[�-�]"},{name:"InEthiopic",bmp:"ሀ-፿"},{name:"InEthiopic_Extended",bmp:"ⶀ-⷟"},{name:"InEthiopic_Extended_A",bmp:"꬀-꬯"},{name:"InEthiopic_Supplement",bmp:"ᎀ-᎟"},{name:"InGeneral_Punctuation",bmp:" -⁯"},{name:"InGeometric_Shapes",bmp:"■-◿"},{name:"InGeometric_Shapes_Extended",astral:"�[�-�]"},{name:"InGeorgian",bmp:"Ⴀ-ჿ"},{name:"InGeorgian_Supplement",bmp:"ⴀ-⴯"},{name:"InGlagolitic",bmp:"Ⰰ-ⱟ"},{name:"InGothic",astral:"�[�-�]"},{name:"InGrantha",astral:"�[�-�]"},{name:"InGreek_Extended",bmp:"ἀ-῿"},{name:"InGreek_and_Coptic",bmp:"Ͱ-Ͽ"},{name:"InGujarati",bmp:"઀-૿"},{name:"InGurmukhi",bmp:"਀-੿"},{name:"InHalfwidth_and_Fullwidth_Forms",bmp:"＀-￯"},{name:"InHangul_Compatibility_Jamo",bmp:"㄰-㆏"},{name:"InHangul_Jamo",bmp:"ᄀ-ᇿ"},{name:"InHangul_Jamo_Extended_A",bmp:"ꥠ-꥿"},{name:"InHangul_Jamo_Extended_B",bmp:"ힰ-퟿"},{name:"InHangul_Syllables",bmp:"가-힯"},{name:"InHanunoo",bmp:"ᜠ-᜿"},{name:"InHatran",astral:"�[�-�]"},{name:"InHebrew",bmp:"֐-׿"},{name:"InHigh_Private_Use_Surrogates",bmp:"�-�"},{name:"InHigh_Surrogates",bmp:"�-�"},{name:"InHiragana",bmp:"぀-ゟ"},{name:"InIPA_Extensions",bmp:"ɐ-ʯ"},{name:"InIdeographic_Description_Characters",bmp:"⿰-⿿"},{name:"InImperial_Aramaic",astral:"�[�-�]"},{name:"InInscriptional_Pahlavi",astral:"�[�-�]"},{name:"InInscriptional_Parthian",astral:"�[�-�]"},{name:"InJavanese",bmp:"ꦀ-꧟"},{name:"InKaithi",astral:"�[�-�]"},{name:"InKana_Supplement",astral:"�[�-�]"},{name:"InKanbun",bmp:"㆐-㆟"},{name:"InKangxi_Radicals",bmp:"⼀-⿟"},{name:"InKannada",bmp:"ಀ-೿"},{name:"InKatakana",bmp:"゠-ヿ"},{name:"InKatakana_Phonetic_Extensions",bmp:"ㇰ-ㇿ"},{name:"InKayah_Li",bmp:"꤀-꤯"},{name:"InKharoshthi",astral:"�[�-�]"},{name:"InKhmer",bmp:"ក-៿"},{name:"InKhmer_Symbols",bmp:"᧠-᧿"},{name:"InKhojki",astral:"�[�-�]"},{name:"InKhudawadi",astral:"�[�-�]"},{name:"InLao",bmp:"຀-໿"},{name:"InLatin_Extended_Additional",bmp:"Ḁ-ỿ"},{name:"InLatin_Extended_A",bmp:"Ā-ſ"},{name:"InLatin_Extended_B",bmp:"ƀ-ɏ"},{name:"InLatin_Extended_C",bmp:"Ⱡ-Ɀ"},{name:"InLatin_Extended_D",bmp:"꜠-ꟿ"},{name:"InLatin_Extended_E",bmp:"ꬰ-꭯"},{name:"InLatin_1_Supplement",bmp:"-ÿ"},{name:"InLepcha",bmp:"ᰀ-ᱏ"},{name:"InLetterlike_Symbols",bmp:"℀-⅏"},{name:"InLimbu",bmp:"ᤀ-᥏"},{name:"InLinear_A",astral:"�[�-�]"},{name:"InLinear_B_Ideograms",astral:"�[�-�]"},{name:"InLinear_B_Syllabary",astral:"�[�-�]"},{name:"InLisu",bmp:"ꓐ-꓿"},{name:"InLow_Surrogates",bmp:"�-�"},{name:"InLycian",astral:"�[�-�]"},{name:"InLydian",astral:"�[�-�]"},{name:"InMahajani",astral:"�[�-�]"},{name:"InMahjong_Tiles",astral:"�[�-�]"},{name:"InMalayalam",bmp:"ഀ-ൿ"},{name:"InMandaic",bmp:"ࡀ-࡟"},{name:"InManichaean",astral:"�[�-�]"},{name:"InMathematical_Alphanumeric_Symbols",astral:"�[�-�]"},{name:"InMathematical_Operators",bmp:"∀-⋿"},{name:"InMeetei_Mayek",bmp:"ꯀ-꯿"},{name:"InMeetei_Mayek_Extensions",bmp:"ꫠ-꫿"},{name:"InMende_Kikakui",astral:"�[�-�]"},{name:"InMeroitic_Cursive",astral:"�[�-�]"},{name:"InMeroitic_Hieroglyphs",astral:"�[�-�]"},{name:"InMiao",astral:"�[�-�]"},{name:"InMiscellaneous_Mathematical_Symbols_A",bmp:"⟀-⟯"},{name:"InMiscellaneous_Mathematical_Symbols_B",bmp:"⦀-⧿"},{name:"InMiscellaneous_Symbols",bmp:"☀-⛿"},{name:"InMiscellaneous_Symbols_and_Arrows",bmp:"⬀-⯿"},{name:"InMiscellaneous_Symbols_and_Pictographs",astral:"�[�-�]|�[�-�]"},{name:"InMiscellaneous_Technical",bmp:"⌀-⏿"},{name:"InModi",astral:"�[�-�]"},{name:"InModifier_Tone_Letters",bmp:"꜀-ꜟ"},{name:"InMongolian",bmp:"᠀-᢯"},{name:"InMro",astral:"�[�-�]"},{name:"InMultani",astral:"�[�-�]"},{name:"InMusical_Symbols",astral:"�[�-�]"},{name:"InMyanmar",bmp:"က-႟"},{name:"InMyanmar_Extended_A",bmp:"ꩠ-ꩿ"},{name:"InMyanmar_Extended_B",bmp:"ꧠ-꧿"},{name:"InNKo",bmp:"߀-߿"},{name:"InNabataean",astral:"�[�-�]"},{name:"InNew_Tai_Lue",bmp:"ᦀ-᧟"},{name:"InNumber_Forms",bmp:"⅐-↏"},{name:"InOgham",bmp:" -᚟"},{name:"InOl_Chiki",bmp:"᱐-᱿"},{name:"InOld_Hungarian",astral:"�[�-�]"},{name:"InOld_Italic",astral:"�[�-�]"},{name:"InOld_North_Arabian",astral:"�[�-�]"},{name:"InOld_Permic",astral:"�[�-�]"},{name:"InOld_Persian",astral:"�[�-�]"},{name:"InOld_South_Arabian",astral:"�[�-�]"},{name:"InOld_Turkic",astral:"�[�-�]"},{name:"InOptical_Character_Recognition",bmp:"⑀-⑟"},{name:"InOriya",bmp:"଀-୿"},{name:"InOrnamental_Dingbats",astral:"�[�-�]"},{name:"InOsmanya",astral:"�[�-�]"},{name:"InPahawh_Hmong",astral:"�[�-�]"},{name:"InPalmyrene",astral:"�[�-�]"},{name:"InPau_Cin_Hau",astral:"�[�-�]"},{name:"InPhags_pa",bmp:"ꡀ-꡿"},{name:"InPhaistos_Disc",astral:"�[�-�]"},{name:"InPhoenician",astral:"�[�-�]"},{name:"InPhonetic_Extensions",bmp:"ᴀ-ᵿ"},{name:"InPhonetic_Extensions_Supplement",bmp:"ᶀ-ᶿ"},{name:"InPlaying_Cards",astral:"�[�-�]"},{name:"InPrivate_Use_Area",bmp:"-"},{name:"InPsalter_Pahlavi",astral:"�[�-�]"},{name:"InRejang",bmp:"ꤰ-꥟"},{name:"InRumi_Numeral_Symbols",astral:"�[�-�]"},{name:"InRunic",bmp:"ᚠ-᛿"},{name:"InSamaritan",bmp:"ࠀ-࠿"},{name:"InSaurashtra",bmp:"ꢀ-꣟"},{name:"InSharada",astral:"�[�-�]"},{name:"InShavian",astral:"�[�-�]"},{name:"InShorthand_Format_Controls",astral:"�[�-�]"},{name:"InSiddham",astral:"�[�-�]"},{name:"InSinhala",bmp:"඀-෿"},{name:"InSinhala_Archaic_Numbers",astral:"�[�-�]"},{name:"InSmall_Form_Variants",bmp:"﹐-﹯"},{name:"InSora_Sompeng",astral:"�[�-�]"},{name:"InSpacing_Modifier_Letters",bmp:"ʰ-˿"},{name:"InSpecials",bmp:"￰-￿"},{name:"InSundanese",bmp:"ᮀ-ᮿ"},{name:"InSundanese_Supplement",bmp:"᳀-᳏"},{name:"InSuperscripts_and_Subscripts",bmp:"⁰-₟"},{name:"InSupplemental_Arrows_A",bmp:"⟰-⟿"},{name:"InSupplemental_Arrows_B",bmp:"⤀-⥿"},{name:"InSupplemental_Arrows_C",astral:"�[�-�]"},{name:"InSupplemental_Mathematical_Operators",bmp:"⨀-⫿"},{name:"InSupplemental_Punctuation",bmp:"⸀-⹿"},{name:"InSupplemental_Symbols_and_Pictographs",astral:"�[�-�]"},{name:"InSupplementary_Private_Use_Area_A",astral:"[�-�][�-�]"},{name:"InSupplementary_Private_Use_Area_B",astral:"[�-�][�-�]"},{name:"InSutton_SignWriting",astral:"�[�-�]"},{name:"InSyloti_Nagri",bmp:"ꠀ-꠯"},{name:"InSyriac",bmp:"܀-ݏ"},{name:"InTagalog",bmp:"ᜀ-ᜟ"},{name:"InTagbanwa",bmp:"ᝠ-᝿"},{name:"InTags",astral:"�[�-�]"},{name:"InTai_Le",bmp:"ᥐ-᥿"},{name:"InTai_Tham",bmp:"ᨠ-᪯"},{name:"InTai_Viet",bmp:"ꪀ-꫟"},{name:"InTai_Xuan_Jing_Symbols",astral:"�[�-�]"},{name:"InTakri",astral:"�[�-�]"},{name:"InTamil",bmp:"஀-௿"},{name:"InTelugu",bmp:"ఀ-౿"},{name:"InThaana",bmp:"ހ-޿"},{name:"InThai",bmp:"฀-๿"},{name:"InTibetan",bmp:"ༀ-࿿"},{name:"InTifinagh",bmp:"ⴰ-⵿"},{name:"InTirhuta",astral:"�[�-�]"},{name:"InTransport_and_Map_Symbols",astral:"�[�-�]"},{name:"InUgaritic",astral:"�[�-�]"},{name:"InUnified_Canadian_Aboriginal_Syllabics",bmp:"᐀-ᙿ"},{name:"InUnified_Canadian_Aboriginal_Syllabics_Extended",bmp:"ᢰ-᣿"},{name:"InVai",bmp:"ꔀ-꘿"},{name:"InVariation_Selectors",bmp:"︀-️"},{name:"InVariation_Selectors_Supplement",astral:"�[�-�]"},{name:"InVedic_Extensions",bmp:"᳐-᳿"},{name:"InVertical_Forms",bmp:"︐-︟"},{name:"InWarang_Citi",astral:"�[�-�]"},{name:"InYi_Radicals",bmp:"꒐-꓏"},{name:"InYi_Syllables",bmp:"ꀀ-꒏"},{name:"InYijing_Hexagram_Symbols",bmp:"䷀-䷿"}])}},function(e,t){"use strict";e.exports=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Categories");e.addUnicodeData([{name:"C",alias:"Other",isBmpLast:!0,bmp:"\x00--­͸͹΀-΃΋΍΢԰՗՘ՠֈ֋֌֐׈-׏׫-ׯ׵-؅؜؝۝܎܏݋݌޲-޿߻-߿࠮࠯࠿࡜࡝࡟-࢟ࢵ-࣢঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥ৼ-਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੶-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸ૺ-଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿ఄ఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷ಀ಄಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-ഀഄ഍഑഻഼൅൉൏-ൖ൘-൞൤൥൶-൸඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠎᠏᠚-᠟ᡸ-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌ᲀ-Ჿ᳈-᳏᳷ᳺ-᳿᷶-᷻἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿​-‏‪-‮⁠-⁯⁲⁳₏₝-₟₿-⃏⃱-⃿↌-↏⏻-⏿␧-␿⑋-⑟⭴⭵⮖⮗⮺-⮼⯉⯒-⯫⯰-⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹃-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄ㄮ-㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿖-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꞮꞯꞸ-ꟶ꠬-꠯꠺-꠿꡸-꡿ꣅ-꣍꣚-꣟ꣾꣿ꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽-＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￻￾￿",astral:"�[�-����-��-��-��-��-�]|�[�-���-�]|�[�-��-������-��-���-��-��-��-��-��-�]|�[�-���-��-����-��-����-��-�]|�[��-��-�]|�[�-��-��-��-�]|�[��]|�[���-��-��-��-��-�]|�[���-��-��-��-��-��-��-�]|�[�������-��-��-��-��-��-��-��-��-��-��-��-��-��-���-��-�]|�[�-�]|�[�-�����������-��-�����������������������-����-��-�]|�[�-�]|�[�-��-�]|�[�-��-���-��-��-���-��-�����-���-������-��-��-������������������-��-����-��-�]|�[���-�]|�[�-�]|�[�-�]|[����-��-��-����-��-���-��-��-�][�-�]|�[�-��-��-��-�]|�[�-��-��-��-��-�]|�[���������������������-������]|�[�-��-��-����-��-��-��-��-��-��-��-�]|�[�����-�����-��-���-��-��-��-��-�����-����-��-��-��-��-��-��-��-����-��-��-��-�]|�[�-�]|�[�-��-��-����-�]|�[�-�]|�[�-�]|�[�-��-��-��-��-��-��-��-�]|�[�-�]"},{name:"Cc",alias:"Control",bmp:"\x00--"},{name:"Cf",alias:"Format",bmp:"­؀-؅؜۝܏᠎​-‏‪-‮⁠-⁤⁦-⁯\ufeff￹-￻",astral:"�[��-�]|�[�-�]|�[�-�]|𑂽"},{name:"Cn",alias:"Unassigned",bmp:"͸͹΀-΃΋΍΢԰՗՘ՠֈ֋֌֐׈-׏׫-ׯ׵-׿؝܎݋݌޲-޿߻-߿࠮࠯࠿࡜࡝࡟-࢟ࢵ-࣢঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥ৼ-਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੶-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸ૺ-଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿ఄ఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷ಀ಄಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-ഀഄ഍഑഻഼൅൉൏-ൖ൘-൞൤൥൶-൸඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠏᠚-᠟ᡸ-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌ᲀ-Ჿ᳈-᳏᳷ᳺ-᳿᷶-᷻἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿⁥⁲⁳₏₝-₟₿-⃏⃱-⃿↌-↏⏻-⏿␧-␿⑋-⑟⭴⭵⮖⮗⮺-⮼⯉⯒-⯫⯰-⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹃-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄ㄮ-㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿖-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꞮꞯꞸ-ꟶ꠬-꠯꠺-꠿꡸-꡿ꣅ-꣍꣚-꣟ꣾꣿ꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-퟿﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽﻾＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￸￾￿",astral:"�[��-��-��-�]|�[�-����-��-��-��-�]|�[�-��-������-��-���-��-��-��-��-��-�]|�[�-���-��-����-��-����-��-�]|�[��-��-�]|�[�-��-��-��-�]|�[��]|�[���-��-��-��-��-�]|�[���-��-��-��-��-��-��-�]|�[�������-��-��-��-��-��-��-��-��-��-��-��-��-��-���-��-�]|�[�-�]|�[�-�����������-��-�����������������������-����-��-�]|[��][��]|�[�-�]|�[�-��-��-����-�]|�[���-�]|�[�-�]|�[�-�]|[����-��-��-����-��-���-��-��-�][�-�]|�[�-��-��-��-�]|�[�-��-��-��-��-�]|�[���������������������-������]|�[�-���-�]|�[�-��-��-����-��-��-��-��-��-��-��-�]|�[�����-�����-��-���-��-��-��-��-�����-����-��-��-��-��-��-��-��-����-��-��-��-�]|�[�-�]|�[�-��-��-��-��-���-��-�����-���-������-��-��-������������������-��-����-��-�]|�[�-�]|�[�-�]|�[�-��-��-��-��-��-��-��-�]|�[�-�]"},{name:"Co",alias:"Private_Use",bmp:"-",astral:"[�-��-�][�-�]|[��][�-�]"},{name:"Cs",alias:"Surrogate",bmp:"�-�"},{name:"L",alias:"Letter",bmp:"A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞭꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"�[�-��-�]|�[�-��-�]|�[�-��-�]|�[�-��-��-�]|�[�-�]|�[�-��-��-��-��-��-�]|�[�-��-��-����-��-��-��-��-��-��-��-��-��-��-��-�]|�[�-�]|�[�-�]|�[�-���-�]|[��-��-��-�][�-�]|�[�-�����-��-��-���-��-�]|�[�-��-��-��-��-��-��-�]|�[�-�]|�[�-���-�����-��-��-��-����-��-��-�����-��-��-��-��-��-��-��-��-��-��-�]|�[�-��-�������-��-���-��-��-��-��-��-��-��-���-��-��-��-��-��-��-��-��-��-��-��-��-�]|�[�-��-��-��-��-���-��-����-��-��-���-��-��-��-��-����-��-����-����-�]|�[�-�]|�[�-��-������-��-��������-�������������-��-��-��-���-��-��-��-��-�]|�[�-���-�]|�[�-�]|�[�-��-��-��-�]|�[��]|�[�-�]"},{name:"Ll",alias:"Lowercase_Letter",bmp:"a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯա-ևᏸ-ᏽᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞵꞷꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",astral:"�[�-�]|�[�-��-��-��-��-���-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��]|�[�-�]|�[�-�]"},{name:"Lm",alias:"Modifier_Letter",bmp:"ʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥۦߴߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼⱽⵯⸯ々〱-〵〻ゝゞー-ヾꀕꓸ-ꓽꘌꙿꚜꚝꜗ-ꜟꝰꞈꟸꟹꧏꧦꩰꫝꫳꫴꭜ-ꭟｰﾞﾟ",astral:"�[�-�]|�[�-�]"},{name:"Lo",alias:"Other_Letter",bmp:"ªºƻǀ-ǃʔא-תװ-ײؠ-ؿف-يٮٯٱ-ۓەۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࢠ-ࢴऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๅກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎა-ჺჽ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡷᢀ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"�[�-��-�]|�[�-��-�]|�[�-��-�]|�[�-�]|�[�-�]|�[�-��-��-����-��-��-��-��-��-��-��-��-��-��-��-�]|�[�-�]|�[�-�]|�[�-��]|[��-��-��-�][�-�]|�[�-�����-��-��-���-��-�]|�[��-�]|�[�-�]|�[�-���-�����-��-��-��-����-��-��-�����-��-��-��-��-��-��-��-��-��-��-�]|�[�-��-��-��-��-���-��-����-��-��-���-��-��-��-��-����-��-����-����-�]|�[�-�]|�[�-��-������-��-��������-�������������-��-��-��-���-��-��-��-��-�]|�[�-��-��-��-��-��-�]|�[�-��-��-��-��-��-�]|�[�-�]|�[�-��-��-��-�]|�[��]|�[�-�]"},{name:"Lt",alias:"Titlecase_Letter",bmp:"ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼ"},{name:"Lu",alias:"Uppercase_Letter",bmp:"A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞭꞰ-ꞴꞶＡ-Ｚ",astral:"�[�-�]|�[�-�]|�[�-�]|�[�-��-��-��������-��-��-����-��-��-����-��-���-��-��-��-��-��-��-��-��-��-��-��-��]"},{name:"M",alias:"Mark",bmp:"̀-ͯ҃-҉֑-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣣ-ःऺ-़ा-ॏ॑-ॗॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣஂா-ூெ-ைொ-்ௗఀ-ఃా-ౄె-ైొ-్ౕౖౢౣಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣංඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ູົຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝᠋-᠍ᢩᤠ-ᤫᤰ-᤻ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼᪰-᪾ᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-ᮭ᯦-᯳ᰤ-᰷᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷼-᷿⃐-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꙯-꙲ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-꣄꣠-꣱ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꧥꨩ-ꨶꩃꩌꩍꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︯",astral:"�[�-��-��-����-��-��-�]|�[�-��-��-��-��-��-�]|�[�-��-��-��-��-��-���-��-��-��-��-��-���-����-�����-��-�]|�[�-��-�]|�[�-��-�]|�[��]|�[���-�]|�[�-��-����-��-�]|�[�-����-��-����]|�[�-�]|�[�-�]"},{name:"Mc",alias:"Spacing_Mark",bmp:"ःऻा-ीॉ-ौॎॏংঃা-ীেৈোৌৗਃਾ-ੀઃા-ીૉોૌଂଃାୀେୈୋୌୗாிுூெ-ைொ-ௌௗఁ-ఃు-ౄಂಃಾೀ-ೄೇೈೊೋೕೖംഃാ-ീെ-ൈൊ-ൌൗංඃා-ෑෘ-ෟෲෳ༾༿ཿါာေးျြၖၗၢ-ၤၧ-ၭႃႄႇ-ႌႏႚ-ႜាើ-ៅះៈᤣ-ᤦᤩ-ᤫᤰᤱᤳ-ᤸᨙᨚᩕᩗᩡᩣᩤᩭ-ᩲᬄᬵᬻᬽ-ᭁᭃ᭄ᮂᮡᮦᮧ᮪ᯧᯪ-ᯬᯮ᯲᯳ᰤ-ᰫᰴᰵ᳡ᳲᳳ〮〯ꠣꠤꠧꢀꢁꢴ-ꣃꥒ꥓ꦃꦴꦵꦺꦻꦽ-꧀ꨯꨰꨳꨴꩍꩻꩽꫫꫮꫯꫵꯣꯤꯦꯧꯩꯪ꯬",astral:"�[���-�]|�[����-������-����-�����-������-����-����]|�[�-���-���-��-���-�����������]|�[�-�]"},{name:"Me",alias:"Enclosing_Mark",bmp:"҈҉᪾⃝-⃠⃢-⃤꙰-꙲"},{name:"Mn",alias:"Nonspacing_Mark",bmp:"̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣣ-ंऺ़ु-ै्॑-ॗॢॣঁ়ু-ৄ্ৢৣਁਂ਼ੁੂੇੈੋ-੍ੑੰੱੵઁં઼ુ-ૅેૈ્ૢૣଁ଼ିୁ-ୄ୍ୖୢୣஂீ்ఀా-ీె-ైొ-్ౕౖౢౣಁ಼ಿೆೌ್ೢೣഁു-ൄ്ൢൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົຼ່-ໍཱ༹༘༙༵༷-ཾྀ-྄྆྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္်ွှၘၙၞ-ၠၱ-ၴႂႅႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴឵ិ-ួំ៉-៓៝᠋-᠍ᢩᤠ-ᤢᤧᤨᤲ᤹-᤻ᨘᨗᨛᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼᪰-᪽ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀᮁᮢ-ᮥᮨᮩ᮫-ᮭ᯦ᯨᯩᯭᯯ-ᯱᰬ-ᰳᰶ᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷵᷼-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〭꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠥꠦ꣄꣠-꣱ꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꧥꨩ-ꨮꨱꨲꨵꨶꩃꩌꩼꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫬꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-︯",astral:"�[�-�������-��������-�������-���-��-��-�]|�[�-��-��-��-��-�]|�[�-��-�]|�[�-�]|�[��]|�[���-�]|�[�-��-����-��-�]|�[�-����-��-����]|�[��-��-��-����-��-��-�����-��-��-������-������-��-�]|�[�-�]|�[�-�]"},{name:"N",alias:"Number",bmp:"0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൦-൵෦-෯๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",astral:"�[�-��-����-��-����-�]|�[�-�]|�[�-��-�]|�[�-�]|�[�-�]|�[�-��-��-�]|�[�-�]|�[�-��-��-��-��-��-�]|�[�-�]|�[�-�]|�[�-�]|�[�-��-��-��-��-����-��-��-����-��-��-��-��-�]|�[�-��-��-��-�]"},{name:"Nd",alias:"Decimal_Number",bmp:"0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯෦-෯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",astral:"�[�-�]|�[�-�]|�[�-��-��-��-�]|�[�-�]|�[�-��-��-��-��-�]|�[�-��-�]"},{name:"Nl",alias:"Letter_Number",bmp:"ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ",astral:"�[�-�]|�[�-����-�]"},{name:"No",alias:"Other_Number",bmp:"²³¹¼-¾৴-৹୲-୷௰-௲౸-౾൰-൵༪-༳፩-፼៰-៹᧚⁰⁴-⁹₀-₉⅐-⅟↉①-⒛⓪-⓿❶-➓⳽㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꠰-꠵",astral:"�[�-��-�]|�[�-��-�]|�[�-�]|�[�-�]|�[�-�]|�[�-��-��-��-��-����-��-��-����-��-��-��-��-�]|�[��]|�[�-�]|�[�-�]|�[�-��-����-��-�]"},{name:"P",alias:"Punctuation",bmp:"!-#%-\\x2A,-/:;\\x3F@\\x5B-\\x5D_\\x7B}¡§«¶·»¿;·՚-՟։֊־׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰૰෴๏๚๛༄-༒༔༺-༽྅࿐-࿔࿙࿚၊-၏჻፠-፨᐀᙭᙮᚛᚜᛫-᛭᜵᜶។-៖៘-៚᠀-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‐-‧‰-⁃⁅-⁑⁓-⁞⁽⁾₍₎⌈-⌋〈〉❨-❵⟅⟆⟦-⟯⦃-⦘⧘-⧛⧼⧽⳹-⳼⳾⳿⵰⸀-⸮⸰-⹂、-〃〈-】〔-〟〰〽゠・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫﴾﴿︐-︙︰-﹒﹔-﹡﹣﹨﹪﹫！-＃％-＊，-／：；？＠［-］＿｛｝｟-･",astral:"�[����-���-��-��-�]|�[�-�]|�[��-��-��-�]|�[�-�]|𐕯|𛲟|�[�-����-��-����-����-��-��]|�[�-���]|�[����-��]"},{name:"Pc",alias:"Connector_Punctuation",bmp:"_‿⁀⁔︳︴﹍-﹏＿"},{name:"Pd",alias:"Dash_Punctuation",bmp:"\\x2D֊־᐀᠆‐-―⸗⸚⸺⸻⹀〜〰゠︱︲﹘﹣－"},{name:"Pe",alias:"Close_Punctuation",bmp:"\\x29\\x5D}༻༽᚜⁆⁾₎⌉⌋〉❩❫❭❯❱❳❵⟆⟧⟩⟫⟭⟯⦄⦆⦈⦊⦌⦎⦐⦒⦔⦖⦘⧙⧛⧽⸣⸥⸧⸩〉》」』】〕〗〙〛〞〟﴾︘︶︸︺︼︾﹀﹂﹄﹈﹚﹜﹞）］｝｠｣"},{name:"Pf",alias:"Final_Punctuation",bmp:"»’”›⸃⸅⸊⸍⸝⸡"},{name:"Pi",alias:"Initial_Punctuation",bmp:"«‘‛“‟‹⸂⸄⸉⸌⸜⸠"},{name:"Po",alias:"Other_Punctuation",bmp:"!-#%-'\\x2A,\\x2E/:;\\x3F@\\x5C¡§¶·¿;·՚-՟։׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰૰෴๏๚๛༄-༒༔྅࿐-࿔࿙࿚၊-၏჻፠-፨᙭᙮᛫-᛭᜵᜶។-៖៘-៚᠀-᠅᠇-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‖‗†-‧‰-‸※-‾⁁-⁃⁇-⁑⁓⁕-⁞⳹-⳼⳾⳿⵰⸀⸁⸆-⸈⸋⸎-⸖⸘⸙⸛⸞⸟⸪-⸮⸰-⸹⸼-⸿⹁、-〃〽・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫︐-︖︙︰﹅﹆﹉-﹌﹐-﹒﹔-﹗﹟-﹡﹨﹪﹫！-＃％-＇＊，．／：；？＠＼｡､･",astral:"�[����-���-��-��-�]|�[�-�]|�[��-��-��-�]|�[�-�]|𐕯|𛲟|�[�-����-��-����-����-��-��]|�[�-���]|�[����-��]"},{name:"Ps",alias:"Open_Punctuation",bmp:"\\x28\\x5B\\x7B༺༼᚛‚„⁅⁽₍⌈⌊〈❨❪❬❮❰❲❴⟅⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼⸢⸤⸦⸨⹂〈《「『【〔〖〘〚〝﴿︗︵︷︹︻︽︿﹁﹃﹇﹙﹛﹝（［｛｟｢"},{name:"S",alias:"Symbol",bmp:"\\x24\\x2B<->\\x5E`\\x7C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֍-֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₾℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏↊↋←-⌇⌌-⌨⌫-⏺␀-␦⑀-⑊⒜-ⓩ─-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹꭛﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�",astral:"�[�-��-��-��-��-��-��-��]|�[�-��-��-��-��-��-��-��-��-��-��-��-����-�]|�[�-��-��-��-��-��-��-�]|�[����������]|�[�-��-���-���-�]|𛲜|𑜿|�[���]|�[�-��]|�[�-��-��-��-���]|�[�-��-��-��-����-��-��-���-�]|�[��]"},{name:"Sc",alias:"Currency_Symbol",bmp:"\\x24¢-¥֏؋৲৳৻૱௹฿៛₠-₾꠸﷼﹩＄￠￡￥￦"},{name:"Sk",alias:"Modifier_Symbol",bmp:"\\x5E`¨¯´¸˂-˅˒-˟˥-˫˭˯-˿͵΄΅᾽᾿-῁῍-῏῝-῟῭-`´῾゛゜꜀-꜖꜠꜡꞉꞊꭛﮲-﯁＾｀￣",astral:"�[�-�]"},{name:"Sm",alias:"Math_Symbol",bmp:"\\x2B<->\\x7C~¬±×÷϶؆-؈⁄⁒⁺-⁼₊-₌℘⅀-⅄⅋←-↔↚↛↠↣↦↮⇎⇏⇒⇔⇴-⋿⌠⌡⍼⎛-⎳⏜-⏡▷◁◸-◿♯⟀-⟄⟇-⟥⟰-⟿⤀-⦂⦙-⧗⧜-⧻⧾-⫿⬰-⭄⭇-⭌﬩﹢﹤-﹦＋＜-＞｜～￢￩-￬",astral:"�[��]|�[����������]"},{name:"So",alias:"Other_Symbol",bmp:"¦©®°҂֍֎؎؏۞۩۽۾߶৺୰௳-௸௺౿൹༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙᥀᧞-᧿᭡-᭪᭴-᭼℀℁℃-℆℈℉℔№℗℞-℣℥℧℩℮℺℻⅊⅌⅍⅏↊↋↕-↙↜-↟↡↢↤↥↧-↭↯-⇍⇐⇑⇓⇕-⇳⌀-⌇⌌-⌟⌢-⌨⌫-⍻⍽-⎚⎴-⏛⏢-⏺␀-␦⑀-⑊⒜-ⓩ─-▶▸-◀◂-◷☀-♮♰-❧➔-➿⠀-⣿⬀-⬯⭅⭆⭍-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꠨-꠫꠶꠷꠹꩷-꩹﷽￤￨￭￮￼�",astral:"�[�-��-��-��-��-��-��-��]|�[�-��-��-��-��-��-��-�]|�[�-��-��-��-��-��-��-��-��-��-��-��-����-�]|�[�-��-���-���-�]|𛲜|𑜿|�[���]|�[�-��]|�[�-��-��-��-���]|�[�-��-��-��-����-��-��-���-�]"},{name:"Z",alias:"Separator",bmp:"    - \u2028\u2029  　"},{name:"Zl",alias:"Line_Separator",bmp:"\u2028"},{name:"Zp",alias:"Paragraph_Separator",bmp:"\u2029"},{name:"Zs",alias:"Space_Separator",bmp:"    -   　"}])}},function(e,t){"use strict";e.exports=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Properties");var t=[{name:"ASCII",bmp:"\x00-"},{name:"Alphabetic",bmp:"A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͅͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևְ-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-ٗٙ-ٟٮ-ۓە-ۜۡ-ۭۨ-ۯۺ-ۼۿܐ-ܿݍ-ޱߊ-ߪߴߵߺࠀ-ࠗࠚ-ࠬࡀ-ࡘࢠ-ࢴࣣ-ࣰࣩ-ऻऽ-ौॎ-ॐॕ-ॣॱ-ঃঅ-ঌএঐও-নপ-রলশ-হঽ-ৄেৈোৌৎৗড়ঢ়য়-ৣৰৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਾ-ੂੇੈੋੌੑਖ਼-ੜਫ਼ੰ-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽ-ૅે-ૉોૌૐૠ-ૣૹଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽ-ୄେୈୋୌୖୗଡ଼ଢ଼ୟ-ୣୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-ௌௐௗఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-ౌౕౖౘ-ౚౠ-ౣಁ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽ-ೄೆ-ೈೊ-ೌೕೖೞೠ-ೣೱೲഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൌൎൗൟ-ൣൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆා-ුූෘ-ෟෲෳก-ฺเ-ๆํກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆໍໜ-ໟༀཀ-ཇཉ-ཬཱ-ཱྀྈ-ྗྙ-ྼက-ံးျ-ဿၐ-ၢၥ-ၨၮ-ႆႎႜႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፟ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜓᜠ-ᜳᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-ឳា-ៈៗៜᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-ᤸᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨛᨠ-ᩞᩡ-ᩴᪧᬀ-ᬳᬵ-ᭃᭅ-ᭋᮀ-ᮩᮬ-ᮯᮺ-ᯥᯧ-ᯱᰀ-ᰵᱍ-ᱏᱚ-ᱽᳩ-ᳬᳮ-ᳳᳵᳶᴀ-ᶿᷧ-ᷴḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⒶ-ⓩⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙴ-ꙻꙿ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞭꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠧꡀ-ꡳꢀ-ꣃꣲ-ꣷꣻꣽꤊ-ꤪꤰ-ꥒꥠ-ꥼꦀ-ꦲꦴ-ꦿꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨶꩀ-ꩍꩠ-ꩶꩺꩾ-ꪾꫀꫂꫛ-ꫝꫠ-ꫯꫲ-ꫵꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"�[�-��-�]|�[�-��-��-��-��-���-��-����-��-���-���-��-��-��-��-��-����-��-����-��-��������-�]|�[�-��-�]|�[�-��-�]|�[�-��-��-�]|�[�-�]|�[�-��-��-��-��-��-��-�]|�[�-��-��-��-��-��-�]|�[�-��-��-�]|�[�-�]|�[�-�]|[��-��-��-�][�-�]|�[�-��-�������-��-���-��-��-��-��-��-��-��-���-��-��-��-��-��-��-��-��-��-��-��-��-�]|�[�-��-��-��-��]|�[�-�]|�[�-��-������-��-��������-�������������-��-��-��-���-��-��-��-��-�]|�[�-�����-��-��-��-����-��-��-�]|�[�-��-�]|�[�-���-�]|�[�-��-��-����-��-��-��-��-��-��-��-��-��-��-��-��-�]|�[�-���-�����-��-��-��-����-��-��-����-����-��-��-��-��-��-��-��-��-��-��-�]|�[�-�]|�[��]|�[�-��-��-�]|�[�-�]"},{name:"Any",isBmpLast:!0,bmp:"\x00-￿",astral:"[�-�][�-�]"},{name:"Default_Ignorable_Code_Point",bmp:"­͏؜ᅟᅠ឴឵᠋-᠎​-‏‪-‮⁠-⁯ㅤ︀-️\ufeffﾠ￰-￸",astral:"[�-�][�-�]|�[�-�]|�[�-�]"},{name:"Lowercase",bmp:"a-zªµºß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʸˀˁˠ-ˤͅͱͳͷͺ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯա-ևᏸ-ᏽᴀ-ᶿḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷⁱⁿₐ-ₜℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎⅰ-ⅿↄⓐ-ⓩⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱽⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛ-ꚝꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞵꞷꟸ-ꟺꬰ-ꭚꭜ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",astral:"�[�-�]|�[�-��-��-��-��-���-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��-��]|�[�-�]|�[�-�]"},{name:"Noncharacter_Code_Point",bmp:"﷐-﷯￾￿",astral:"[����������������][��]"},{name:"Uppercase",bmp:"A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅⅠ-ⅯↃⒶ-ⓏⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞭꞰ-ꞴꞶＡ-Ｚ",astral:"�[�-�]|�[�-�]|�[�-��-��-��������-��-��-����-��-��-����-��-���-��-��-��-��-��-��-��-��-��-��-��-��]|�[�-�]|�[�-��-��-�]"},{name:"White_Space",bmp:"	-\r    - \u2028\u2029  　"}];t.push({name:"Assigned",inverseOf:"Cn"}),e.addUnicodeData(t)}},function(e,t){"use strict";e.exports=function(e){if(!e.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Scripts");e.addUnicodeData([{name:"Ahom",astral:"�[�-��-��-�]"},{name:"Anatolian_Hieroglyphs",astral:"�[�-�]"},{name:"Arabic",bmp:"؀-؄؆-؋؍-ؚ؞ؠ-ؿف-يٖ-ٯٱ-ۜ۞-ۿݐ-ݿࢠ-ࢴࣣ-ࣿﭐ-﯁ﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-﷽ﹰ-ﹴﹶ-ﻼ",astral:"�[�-�]|�[�-��-������-��-��������-�������������-��-��-��-���-��-��-��-��-���]"},{name:"Armenian",bmp:"Ա-Ֆՙ-՟ա-և֊֍-֏ﬓ-ﬗ"},{name:"Avestan",astral:"�[�-��-�]"},{name:"Balinese",bmp:"ᬀ-ᭋ᭐-᭼"},{name:"Bamum",bmp:"ꚠ-꛷",astral:"�[�-�]"},{name:"Bassa_Vah",astral:"�[�-��-�]"},{name:"Batak",bmp:"ᯀ-᯳᯼-᯿"},{name:"Bengali",bmp:"ঀ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-৻"},{name:"Bopomofo",bmp:"˪˫ㄅ-ㄭㆠ-ㆺ"},{name:"Brahmi",astral:"�[�-��-��]"},{name:"Braille",bmp:"⠀-⣿"},{name:"Buginese",bmp:"ᨀ-ᨛ᨞᨟"},{name:"Buhid",bmp:"ᝀ-ᝓ"},{name:"Canadian_Aboriginal",bmp:"᐀-ᙿᢰ-ᣵ"},{name:"Carian",astral:"�[�-�]"},{name:"Caucasian_Albanian",astral:"�[�-��]"},{name:"Chakma",astral:"�[�-��-�]"},{name:"Cham",bmp:"ꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-꩟"},{name:"Cherokee",bmp:"Ꭰ-Ᏽᏸ-ᏽꭰ-ꮿ"},{name:"Common",bmp:"\x00-@\\x5B-`\\x7B-©«-¹»-¿×÷ʹ-˟˥-˩ˬ-˿ʹ;΅·։؅،؛؜؟ـ۝।॥฿࿕-࿘჻᛫-᛭᜵᜶᠂᠃᠅᳓᳡ᳩ-ᳬᳮ-ᳳᳵᳶ -​‎-⁤⁦-⁰⁴-⁾₀-₎₠-₾℀-℥℧-℩ℬ-ℱℳ-⅍⅏-⅟↉-↋←-⏺␀-␦⑀-⑊①-⟿⤀-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⸀-⹂⿰-⿻　-〄〆〈-〠〰-〷〼-〿゛゜゠・ー㆐-㆟㇀-㇣㈠-㉟㉿-㋏㍘-㏿䷀-䷿꜀-꜡ꞈ-꞊꠰-꠹꤮ꧏ꭛﴾﴿︐-︙︰-﹒﹔-﹦﹨-﹫\ufeff！-＠［-｀｛-･ｰﾞﾟ￠-￦￨-￮￹-�",astral:"�[�-��-��-��-��-��-��-��]|�[�-�]|�[�-��-�������-��-���-��-��-��-��-��-��-��-���-��-��-��-�]|�[��-�]|�[�-��-��-��-��-��-��-�]|�[�-��-��-��-��-��-�]|�[�-��-��-��-����-��-��-��-�]|�[�-��-��-��-��-��-��-��-��-��-��-����-��-����-�]"},{name:"Coptic",bmp:"Ϣ-ϯⲀ-ⳳ⳹-⳿"},{name:"Cuneiform",astral:"�[�-��-��-�]|�[�-�]"},{name:"Cypriot",astral:"�[�-���-�����]"},{name:"Cyrillic",bmp:"Ѐ-҄҇-ԯᴫᵸⷠ-ⷿꙀ-ꚟ︮︯"},{name:"Deseret",astral:"�[�-�]"},{name:"Devanagari",bmp:"ऀ-ॐ॓-ॣ०-ॿ꣠-ꣽ"},{name:"Duployan",astral:"�[�-��-��-��-��-�]"},{name:"Egyptian_Hieroglyphs",astral:"�[�-�]|�[�-�]"},{name:"Elbasan",astral:"�[�-�]"},{name:"Ethiopic",bmp:"ሀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙ⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮ"},{name:"Georgian",bmp:"Ⴀ-ჅჇჍა-ჺჼ-ჿⴀ-ⴥⴧⴭ"},{name:"Glagolitic",bmp:"Ⰰ-Ⱞⰰ-ⱞ"},{name:"Gothic",astral:"�[�-�]"},{name:"Grantha",astral:"�[�-��-����-��-����-��-����-����-��-��-�]"},{name:"Greek",bmp:"Ͱ-ͳ͵-ͷͺ-ͽͿ΄ΆΈ-ΊΌΎ-ΡΣ-ϡϰ-Ͽᴦ-ᴪᵝ-ᵡᵦ-ᵪᶿἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾Ωꭥ",astral:"�[�-��]|�[�-�]"},{name:"Gujarati",bmp:"ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ"},{name:"Gurmukhi",bmp:"ਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵ"},{name:"Han",bmp:"⺀-⺙⺛-⻳⼀-⿕々〇〡-〩〸-〻㐀-䶵一-鿕豈-舘並-龎",astral:"�[�-��-�]|[�-��-��-�][�-�]|�[�-��-�]|�[�-�]|�[�-��-�]|�[�-�]"},{name:"Hangul",bmp:"ᄀ-ᇿ〮〯ㄱ-ㆎ㈀-㈞㉠-㉾ꥠ-ꥼ가-힣ힰ-ퟆퟋ-ퟻﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ"},{name:"Hanunoo",bmp:"ᜠ-᜴"},{name:"Hatran",astral:"�[�-����-�]"},{name:"Hebrew",bmp:"֑-ׇא-תװ-״יִ-זּטּ-לּמּנּסּףּפּצּ-ﭏ"},{name:"Hiragana",bmp:"ぁ-ゖゝ-ゟ",astral:"𛀁|🈀"},{name:"Imperial_Aramaic",astral:"�[�-��-�]"},{name:"Inherited",bmp:"̀-ًͯ҅҆-ٰٕ॒॑᪰-᪾᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷵᷼-᷿‌‍⃐-〪⃰-゙゚〭︀-️︠-︭",
astral:"�[�-��-��-��-�]|�[��]|�[�-�]"},{name:"Inscriptional_Pahlavi",astral:"�[�-��-�]"},{name:"Inscriptional_Parthian",astral:"�[�-��-�]"},{name:"Javanese",bmp:"ꦀ-꧍꧐-꧙꧞꧟"},{name:"Kaithi",astral:"�[�-�]"},{name:"Kannada",bmp:"ಁ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲ"},{name:"Katakana",bmp:"ァ-ヺヽ-ヿㇰ-ㇿ㋐-㋾㌀-㍗ｦ-ｯｱ-ﾝ",astral:"𛀀"},{name:"Kayah_Li",bmp:"꤀-꤭꤯"},{name:"Kharoshthi",astral:"�[�-����-��-��-��-��-��-�]"},{name:"Khmer",bmp:"ក-៝០-៩៰-៹᧠-᧿"},{name:"Khojki",astral:"�[�-��-�]"},{name:"Khudawadi",astral:"�[�-��-�]"},{name:"Lao",bmp:"ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟ"},{name:"Latin",bmp:"A-Za-zªºÀ-ÖØ-öø-ʸˠ-ˤᴀ-ᴥᴬ-ᵜᵢ-ᵥᵫ-ᵷᵹ-ᶾḀ-ỿⁱⁿₐ-ₜKÅℲⅎⅠ-ↈⱠ-ⱿꜢ-ꞇꞋ-ꞭꞰ-ꞷꟷ-ꟿꬰ-ꭚꭜ-ꭤﬀ-ﬆＡ-Ｚａ-ｚ"},{name:"Lepcha",bmp:"ᰀ-᰷᰻-᱉ᱍ-ᱏ"},{name:"Limbu",bmp:"ᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-᥏"},{name:"Linear_A",astral:"�[�-��-��-�]"},{name:"Linear_B",astral:"�[�-��-��-����-��-��-�]"},{name:"Lisu",bmp:"ꓐ-꓿"},{name:"Lycian",astral:"�[�-�]"},{name:"Lydian",astral:"�[�-��]"},{name:"Mahajani",astral:"�[�-�]"},{name:"Malayalam",bmp:"ഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൎൗൟ-ൣ൦-൵൹-ൿ"},{name:"Mandaic",bmp:"ࡀ-࡛࡞"},{name:"Manichaean",astral:"�[�-��-�]"},{name:"Meetei_Mayek",bmp:"ꫠ-꫶ꯀ-꯭꯰-꯹"},{name:"Mende_Kikakui",astral:"�[�-��-�]"},{name:"Meroitic_Cursive",astral:"�[�-��-��-�]"},{name:"Meroitic_Hieroglyphs",astral:"�[�-�]"},{name:"Miao",astral:"�[�-��-��-�]"},{name:"Modi",astral:"�[�-��-�]"},{name:"Mongolian",bmp:"᠀᠁᠄᠆-᠎᠐-᠙ᠠ-ᡷᢀ-ᢪ"},{name:"Mro",astral:"�[�-��-���]"},{name:"Multani",astral:"�[�-���-��-��-�]"},{name:"Myanmar",bmp:"က-႟ꧠ-ꧾꩠ-ꩿ"},{name:"Nabataean",astral:"�[�-��-�]"},{name:"New_Tai_Lue",bmp:"ᦀ-ᦫᦰ-ᧉ᧐-᧚᧞᧟"},{name:"Nko",bmp:"߀-ߺ"},{name:"Ogham",bmp:" -᚜"},{name:"Ol_Chiki",bmp:"᱐-᱿"},{name:"Old_Hungarian",astral:"�[�-��-��-�]"},{name:"Old_Italic",astral:"�[�-�]"},{name:"Old_North_Arabian",astral:"�[�-�]"},{name:"Old_Permic",astral:"�[�-�]"},{name:"Old_Persian",astral:"�[�-��-�]"},{name:"Old_South_Arabian",astral:"�[�-�]"},{name:"Old_Turkic",astral:"�[�-�]"},{name:"Oriya",bmp:"ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୷"},{name:"Osmanya",astral:"�[�-��-�]"},{name:"Pahawh_Hmong",astral:"�[�-��-��-��-��-�]"},{name:"Palmyrene",astral:"�[�-�]"},{name:"Pau_Cin_Hau",astral:"�[�-�]"},{name:"Phags_Pa",bmp:"ꡀ-꡷"},{name:"Phoenician",astral:"�[�-��]"},{name:"Psalter_Pahlavi",astral:"�[�-��-��-�]"},{name:"Rejang",bmp:"ꤰ-꥓꥟"},{name:"Runic",bmp:"ᚠ-ᛪᛮ-ᛸ"},{name:"Samaritan",bmp:"ࠀ-࠭࠰-࠾"},{name:"Saurashtra",bmp:"ꢀ-꣄꣎-꣙"},{name:"Sharada",astral:"�[�-��-�]"},{name:"Shavian",astral:"�[�-�]"},{name:"Siddham",astral:"�[�-��-�]"},{name:"SignWriting",astral:"�[�-��-��-�]"},{name:"Sinhala",bmp:"ංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴",astral:"�[�-�]"},{name:"Sora_Sompeng",astral:"�[�-��-�]"},{name:"Sundanese",bmp:"ᮀ-ᮿ᳀-᳇"},{name:"Syloti_Nagri",bmp:"ꠀ-꠫"},{name:"Syriac",bmp:"܀-܍܏-݊ݍ-ݏ"},{name:"Tagalog",bmp:"ᜀ-ᜌᜎ-᜔"},{name:"Tagbanwa",bmp:"ᝠ-ᝬᝮ-ᝰᝲᝳ"},{name:"Tai_Le",bmp:"ᥐ-ᥭᥰ-ᥴ"},{name:"Tai_Tham",bmp:"ᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭"},{name:"Tai_Viet",bmp:"ꪀ-ꫂꫛ-꫟"},{name:"Takri",astral:"�[�-��-�]"},{name:"Tamil",bmp:"ஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺"},{name:"Telugu",bmp:"ఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘ-ౚౠ-ౣ౦-౯౸-౿"},{name:"Thaana",bmp:"ހ-ޱ"},{name:"Thai",bmp:"ก-ฺเ-๛"},{name:"Tibetan",bmp:"ༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿔࿙࿚"},{name:"Tifinagh",bmp:"ⴰ-ⵧⵯ⵰⵿"},{name:"Tirhuta",astral:"�[�-��-�]"},{name:"Ugaritic",astral:"�[�-��]"},{name:"Vai",bmp:"ꔀ-ꘫ"},{name:"Warang_Citi",astral:"�[�-��]"},{name:"Yi",bmp:"ꀀ-ꒌ꒐-꓆"}])}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var i=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},o=n(1),s=r(o),l=n(22),u=r(l),f=n(26),c=r(f),d=n(27),h=r(d),p=n(41),m=r(p),y=n(32),g=r(y),b=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0],n=t.template,r=void 0===n?"plain":n,i=t.data,o=t.el,s=t.transferMethodConfiguration,l=void 0===s?{}:s,u=t.profile,f=void 0===u?{}:u,c=t.skipProfileFields,d=void 0===c?!1:c,h=t.onBeforeSubmit,p=t.onError,m=t.onSubmit,y=t.onComplete;if(a(this,e),"undefined"==typeof o)throw new Error("No element to attach form specified!");if(this.el=o,"string"==typeof o&&(this.el=document.getElementById(o)),this.template=r,this.profile=f,"string"==typeof f&&(this.profile=JSON.parse(f)),this.hasProfile=Object.keys(this.profile).length>0,this.hasProfile&&d)throw new Error("Not allowed to specify profile and skipProfileFields!");if(this.hasProfile&&"undefined"==typeof this.profile.profileType)throw new Error("No profileType specified. This is required to use the intelligent skip profile feature!");if(this.setData(i),this.transferMethodConfiguration=l,"string"==typeof l&&(this.transferMethodConfiguration=JSON.parse(l)),this.hasProfile&&"undefined"!=typeof this.transferMethodConfiguration.profileType)throw new Error("You can not supply profileType within transferMethodConfiguration when you provide a profile!");if(this.internalPreFillRoutingInformation(),this.skipProfileFields=d,d&&"undefined"==typeof this.transferMethodConfiguration.profileType)throw new Error("No profileType specified. This is required to skip profile fields!");this.onBeforeSubmit=h,this.onError=p,this.onSubmit=m,this.onComplete=y,this.domEl=null,this.enabled=!1,this.widgetId=null}return e.prototype.create=function(){var e=this;if(!this.domEl){this.enabled=!0,this.widgetId="hw-widget-"+m["default"].createUUID(),this.domEl=h["default"].createDiv(void 0,this.widgetId,"hw-form-transfer-methods");var t=s["default"].transferMethods.configurations(this.transferMethodConfiguration);if(1!==t.length){var n=this.data,r=n.transferMethodCountry,a=n.transferMethodCurrency,i=n.type,o=n.profileType;this.routerForm=new u["default"](this.template,this.domEl,this.widgetId,this.transferMethodConfiguration,{country:r,currency:a,type:i,profileType:o},function(t){return e.internalOnTransferMethodConfigurationChanged(t)})}else this.internalOnTransferMethodConfigurationChanged(t[0]);h["default"].appendElement(this.el,this.domEl)}},e.prototype.destroy=function(){if(!this.domEl)throw new Error("Can not destroy form if form is not created!");this.routerForm&&(this.routerForm.destroy(),this.routerForm=void 0),this.transferMethodForm&&(this.transferMethodForm.destroy(),this.transferMethodForm=void 0),h["default"].removeElement(this.domEl),this.domEl=void 0,this.widgetId=void 0,this.enabled=!0,this.selectedConfiguration=void 0},e.prototype.enable=function(){if(!this.domEl)throw new Error("Can not enable form if form is not created!");this.enabled||(this.routerForm&&this.routerForm.enable(),this.transferMethodForm&&this.transferMethodForm.enable(),this.enabled=!0)},e.prototype.disable=function(){if(!this.domEl)throw new Error("Can not disable form if form is not created!");this.enabled&&(this.routerForm&&this.routerForm.disable(),this.transferMethodForm&&this.transferMethodForm.disable(),this.enabled=!1)},e.prototype.getData=function(){return this.internalGetState()},e.prototype.setData=function(){var e=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];if(this.data=e,"string"==typeof date&&(this.data=JSON.parse(e)),this.hasProfile&&(this.data=i({},this.data,this.profile)),this.transferMethodForm&&this.transferMethodForm.setData(this.data),this.routerForm){var t=this.data,n=t.transferMethodCountry,r=t.transferMethodCurrency,a=t.type,o=t.profileType;this.routerForm.setData({country:n,currency:r,type:a,profileType:o})}},e.prototype.addError=function(e,t){if(!this.domEl)throw new Error("Can not disable form if form is not created!");this.transferMethodForm&&this.transferMethodForm.addError(e,t)},e.prototype.clearErrors=function(){if(!this.domEl)throw new Error("Can not disable form if form is not created!");this.transferMethodForm&&this.transferMethodForm.clearErrors()},e.prototype.internalOnBeforeSubmit=function(){this.disable(),this.onBeforeSubmit&&this.onBeforeSubmit(this.internalGetState())},e.prototype.internalOnValidationError=function(e){this.enable(),this.onError&&this.onError(e,this.internalGetState())},e.prototype.internalOnSubmit=function(){var e=this,t=this.internalGetState();this.onSubmit&&this.onSubmit(t),this.transferMethodForm.clearErrors(),s["default"].transferMethods.store(this.selectedConfiguration,t,this.skipProfileFields,function(t,n){return t?(e.enable(),void(e.onError&&e.onError(t))):(e.enable(),void(e.onComplete&&e.onComplete(n)))})},e.prototype.internalGetState=function(){var e={};this.transferMethodForm&&(e=(0,g["default"])(this.transferMethodForm.state)),e=this.internalCleanStateFromNonValidFields(e);var t=this.transferMethodConfiguration;return this.routerForm&&(t=this.routerForm.internalGetRoutingValues()),e.transferMethodCountry=t.country,e.transferMethodCurrency=t.currency,e.type=t.type,this.hasProfile?e.profileType=this.profile.profileType:this.skipProfileFields||(e.profileType=t.profileType),e},e.prototype.internalGetFieldKeyFromConfiguration=function(){var e=this;if(!this.selectedConfiguration)return[];var t=[];return Object.keys(this.selectedConfiguration.fields).forEach(function(n){for(var r=e.selectedConfiguration.fields[n],a=0;a<r.length;a++){var i=r[a];t.push(i.key)}}),t},e.prototype.internalCleanStateFromNonValidFields=function(e){var t=e,n=this.internalGetFieldKeyFromConfiguration();return Object.keys(t).forEach(function(e){-1===n.indexOf(e)&&delete t[e]}),t},e.prototype.internalOnTransferMethodConfigurationChanged=function(e){var t=this;this.transferMethodForm&&(this.transferMethodForm.destroy(),this.transferMethodForm=void 0);var n=e;if(this.selectedConfiguration=e,n){if(n=(0,g["default"])(n),this.skipProfileFields){for(var r=s["default"].transferMethods.profileGroups(),a=0;a<r.length;a++){var i=r[a];delete n.fields[i]}this.selectedConfiguration=n}else this.hasProfile&&!function(){var e=Object.keys(t.profile);Object.keys(n.fields).filter(function(t){return n.fields[t]=n.fields[t].filter(function(t){return-1===e.indexOf(t.key)}),0===n.fields[t].length}).forEach(function(e){delete n.fields[e]})}();this.transferMethodForm=new c["default"](this.template,this.domEl,this.widgetId,"form",this.data,n.fields,{onBeforeSubmit:function(){return t.internalOnBeforeSubmit()},onValidationError:function(e){return t.internalOnValidationError(e)},onSubmit:function(){return t.internalOnSubmit()}})}},e.prototype.internalPreFillRoutingInformation=function(){this.hasProfile&&(this.transferMethodConfiguration.profileType=this.profile.profileType);var e=s["default"].transferMethods.countries(this.transferMethodConfiguration);1===e.length&&(this.transferMethodConfiguration.country=e[0]);var t=s["default"].transferMethods.currencies(this.transferMethodConfiguration);1===t.length&&(this.transferMethodConfiguration.currency=t[0]);var n=s["default"].transferMethods.types(this.transferMethodConfiguration);1===n.length&&(this.transferMethodConfiguration.type=n[0]);var r=s["default"].transferMethods.profileTypes(this.transferMethodConfiguration);1===r.length&&(this.transferMethodConfiguration.profileType=r[0])},e.internalAutoConfig=function(){function t(t){t.className=t.className+" hw-form-initialized";var n=h["default"].findParentForm(t);if(!n)return void console.log("Can not find a wrapping for element for script tag!");var r={};if(t.hasAttribute("data-hw-template")&&(r.template=t.getAttribute("data-hw-template")),t.hasAttribute("data-hw-data")&&(r.data=t.getAttribute("data-hw-data")),t.hasAttribute("data-hw-profile")&&(r.profile=t.getAttribute("data-hw-profile")),t.hasAttribute("data-hw-transferMethodConfiguration")&&(r.transferMethodConfiguration=t.getAttribute("data-hw-transferMethodConfiguration")),t.hasAttribute("data-hw-skipProfileFields")){var a=t.getAttribute("data-hw-skipProfileFields");r.skipProfileFields="1"===a||"true"===a||"yes"===a}r.el=h["default"].createDiv(),h["default"].insertAfter(r.el,t);var i=h["default"].createHiddenField(r.el,"hw_json_cache_trm_token");r.onComplete=function(e){i.value=e.token,this.disable(),n.submit()};var o=new e(r);o.create()}for(var n=h["default"].findScriptTagsByClass(document,"hw-form-transfer-methods"),r=0;r<n.length;r++){var a=n[r];-1===a.className.split(" ").indexOf("hw-form-initialized")&&t(a)}},e}();t["default"]=b,e.exports=t["default"]},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function i(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function o(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}t.__esModule=!0;var s=n(1),l=r(s),u=n(23),f=r(u),c=n(26),d=r(c),h=n(40),p=r(h),m=function(e){function t(n,r,o,s,u,f){a(this,t);var c=i(this,e.call(this,n,void 0,o,"router",u,void 0,{onRender:function(){return c.internalOnChange()}}));c.onConfigurationChanged=f,c.transferMethodConfiguration=s,c.formConfig={ROUTER:c.internalBuildFormConfig()},c.internalCreateForm(r),c.currentConfiguration=void 0;var d=l["default"].transferMethods.configurations(c.internalGetRoutingValues());return 1===d.length&&c.internalOnChange(),c}return o(t,e),t.prototype.destroy=function(){e.prototype.destroy.call(this),this.transferMethodConfiguration=null},t.prototype.internalOnChange=function(){if(this.onConfigurationChanged){var e=l["default"].transferMethods.configurations(this.internalGetRoutingValues());if(1===e.length&&this.internalHasAllRoutingValues()){if((0,f["default"])(e[0],this.currentConfiguration))return;this.currentConfiguration=e[0],this.onConfigurationChanged(e[0])}else this.currentConfiguration=void 0,this.onConfigurationChanged()}},t.prototype.internalShowSubmitButton=function(){return!1},t.prototype.internalShowGlobalErrors=function(){return!1},t.prototype.internalSetData=function(t){var n=t;if(n){var r=n.country,a=n.currency,i=n.type,o=n.profileType;r&&(n.routing_country=r),a&&(n.routing_currency=a),i&&(n.routing_type=i),o&&(n.routing_profile_type=o)}e.prototype.internalSetData.call(this,n)},t.prototype.internalBuildFormConfig=function(){var e=this,t=[];return t.push({key:"routing_country",label:l["default"].translate("country"),type:"select",isRequired:!0,validate:function(e){return e&&0!==e.trim().length?void 0:l["default"].translate("isRequired")},isVisible:function(){return void 0===e.transferMethodConfiguration.country},onSet:function(e,t){t.set("routing_currency",void 0),t.set("routing_type",void 0),t.set("routing_profile_type",void 0)},choices:function n(){if(void 0!==e.transferMethodConfiguration.country)return[{key:e.transferMethodConfiguration.country,label:l["default"].translate(e.transferMethodConfiguration.country)}];var n=l["default"].transferMethods.countries({country:e.transferMethodConfiguration.country}).map(function(e){return{key:e,label:l["default"].translate(e)}});return p["default"].sortArrayByKey(n,"label")}}),t.push({key:"routing_currency",label:l["default"].translate("currency"),type:"select",isRequired:!0,validate:function(e){return e&&0!==e.trim().length?void 0:l["default"].translate("isRequired")},isVisible:function(t,n){if(void 0!==e.transferMethodConfiguration.currency)return!1;var r=e.internalGetRoutingValues(n),a=r.country;return void 0!==a&&""!==a},onSet:function(e,t){t.set("routing_type",void 0),t.set("routing_profile_type",void 0)},choices:function r(t,n){if(void 0!==e.transferMethodConfiguration.currency)return[{key:e.transferMethodConfiguration.currency,label:e.transferMethodConfiguration.currency}];var a=e.internalGetRoutingValues(n),i=a.country,o=a.currency,r=l["default"].transferMethods.currencies({country:i,currency:o}).map(function(e){return{key:e,label:e}});return p["default"].sortArrayByKey(r,"label")}}),t.push({key:"routing_type",label:l["default"].translate("accountType"),type:"select",isRequired:!0,validate:function(e){return e&&0!==e.trim().length?void 0:l["default"].translate("isRequired")},isVisible:function(t,n){if(void 0!==e.transferMethodConfiguration.type)return!1;var r=e.internalGetRoutingValues(n),a=r.country,i=r.currency;return void 0!==a&&""!==a&&void 0!==i&&""!==i},onSet:function(e,t){t.set("routing_profile_type",void 0)},choices:function a(t,n){if(void 0!==e.transferMethodConfiguration.type)return[{key:e.transferMethodConfiguration.type,label:l["default"].translate(e.transferMethodConfiguration.type)}];var r=e.internalGetRoutingValues(n),i=r.country,o=r.currency,s=r.type,a=l["default"].transferMethods.types({country:i,currency:o,type:s}).map(function(e){return{key:e,label:l["default"].translate(e)}});return p["default"].sortArrayByKey(a,"label")}}),t.push({key:"routing_profile_type",label:l["default"].translate("profileType"),type:"select",isRequired:!0,validate:function(e){return e&&0!==e.trim().length?void 0:l["default"].translate("isRequired")},isVisible:function(t,n){if(void 0!==e.transferMethodConfiguration.profileType)return!1;var r=e.internalGetRoutingValues(n),a=r.country,i=r.currency,o=r.type;return void 0!==a&&""!==a&&void 0!==i&&""!==i&&void 0!==o&&""!==o},choices:function(t,n){if(void 0!==e.transferMethodConfiguration.profileType)return[{key:e.transferMethodConfiguration.profileType,label:l["default"].translate(e.transferMethodConfiguration.profileType)}];var r=e.internalGetRoutingValues(n),a=r.country,i=r.currency,o=r.type,s=r.profileType;return l["default"].transferMethods.profileTypes({country:a,currency:i,type:o,profileType:s}).map(function(e){return{key:e,label:l["default"].translate(e)}})}}),t},t.prototype.internalGetRoutingValues=function(){var e=this.state,t=e.routing_country,n=e.routing_currency,r=e.routing_type,a=e.routing_profile_type,i=this.transferMethodConfiguration,o=i.country,s=void 0===o?t:o,l=i.currency,u=void 0===l?n:l,f=i.type,c=void 0===f?r:f,d=i.profileType,h=void 0===d?a:d;return{country:s,currency:u,type:c,profileType:h}},t.prototype.internalHasAllRoutingValues=function(){var e=this.state,t=e.routing_country,n=e.routing_currency,r=e.routing_type,a=e.routing_profile_type,i=this.transferMethodConfiguration,o=i.country,s=void 0===o?t:o,l=i.currency,u=void 0===l?n:l,f=i.type,c=void 0===f?r:f,d=i.profileType,h=void 0===d?a:d;return s&&u&&c&&h},t}(d["default"]);t["default"]=m,e.exports=t["default"]},function(e,t,n){"use strict";function r(e){return null===e||void 0===e}function a(e){return e&&"object"===("undefined"==typeof e?"undefined":o(e))&&"number"==typeof e.length?"function"!=typeof e.copy||"function"!=typeof e.slice?!1:!(e.length>0&&"number"!=typeof e[0]):!1}function i(e,t,n){var i,c;if(r(e)||r(t))return!1;if(e.prototype!==t.prototype)return!1;if(u(e))return u(t)?(e=s.call(e),t=s.call(t),f(e,t,n)):!1;if(a(e)){if(!a(t))return!1;if(e.length!==t.length)return!1;for(i=0;i<e.length;i++)if(e[i]!==t[i])return!1;return!0}try{var d=l(e),h=l(t)}catch(p){return!1}if(d.length!=h.length)return!1;for(d.sort(),h.sort(),i=d.length-1;i>=0;i--)if(d[i]!=h[i])return!1;for(i=d.length-1;i>=0;i--)if(c=d[i],!f(e[c],t[c],n))return!1;return("undefined"==typeof e?"undefined":o(e))===("undefined"==typeof t?"undefined":o(t))}var o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},s=Array.prototype.slice,l=n(24),u=n(25),f=e.exports=function(e,t,n){return n||(n={}),e===t?!0:e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():!e||!t||"object"!=("undefined"==typeof e?"undefined":o(e))&&"object"!=("undefined"==typeof t?"undefined":o(t))?n.strict?e===t:e==t:i(e,t,n)}},function(e,t){"use strict";function n(e){var t=[];for(var n in e)t.push(n);return t}t=e.exports="function"==typeof Object.keys?Object.keys:n,t.shim=n},function(e,t){"use strict";function n(e){return"[object Arguments]"==Object.prototype.toString.call(e)}function r(e){return e&&"object"==("undefined"==typeof e?"undefined":a(e))&&"number"==typeof e.length&&Object.prototype.hasOwnProperty.call(e,"callee")&&!Object.prototype.propertyIsEnumerable.call(e,"callee")||!1}var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},i="[object Arguments]"==function(){return Object.prototype.toString.call(arguments)}();t=e.exports=i?n:r,t.supported=n,t.unsupported=r},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var i=n(27),o=r(i),s=n(28),l=r(s),u=n(39),f=r(u),c=n(32),d=r(c),h=function(){function e(t,n,r,i,o,s){var l=arguments.length<=6||void 0===arguments[6]?{}:arguments[6];a(this,e),this.template=t,this.formId=r+"-"+i,this.formConfig=s,this.events=l,this.internalSetDefaults(o),n&&this.internalCreateForm(n)}return e.prototype.destroy=function(){if(!this.el)return void console.log("Dom does not exist! Please call #create first!");for(var e=0;e<this.groups.length;e++){var t=this.groups[e];t.destroy()}this.button&&this.button.destroy(),o["default"].removeElement(this.el),this.internalSetDefaults()},e.prototype.enable=function(){return this.el?void(this.enabled||(o["default"].changeDisabledForAllFormElements(this.el,!1),this.enabled=!0)):void console.log("Dom does not exist! Please call #create first!")},e.prototype.disable=function(){return this.el?void(this.enabled&&(o["default"].changeDisabledForAllFormElements(this.el,!0),this.enabled=!1)):void console.log("Dom does not exist! Please call #create first!")},e.prototype.addError=function(e){var t=arguments.length<=1||void 0===arguments[1]?"global":arguments[1];"undefined"==typeof this.errors[t]&&(this.errors[t]=[]),this.errors[t].push(e),this.requestRender()},e.prototype.clearErrors=function(){this.errors={},this.validateAll=!1,this.requestRender()},e.prototype.render=function(){var e=this;if(!this.el)return void console.log("Dom does not exist! Please call #create first!");var t=document.activeElement,n=null;t&&t.id&&(n=t.id);for(var r=0;r<this.groups.length;r++){var a=this.groups[r];a.render()}n&&document.getElementById(n).focus(),this.events.onRender&&this.events.onRender(),setTimeout(function(){return o["default"].executeJavascript(e.el)},20)},e.prototype.requestRender=function(){this.render()},e.prototype.setData=function(e){this.validateAll=!1,this.internalSetData(e),this.requestRender()},e.prototype.internalCreateForm=function(e){var t=this;this.el=o["default"].createDiv(e,this.formId),Object.keys(this.formConfig).forEach(function(e){t.groups.push(new l["default"](t,t.el,e,t.formConfig[e]))}),this.internalShowSubmitButton()&&(this.button=new f["default"](this,this.el,this.formConfig)),this.internalShowGlobalErrors()&&this.groups.length>0&&this.groups[0].addGlobalErrorMessages(),setTimeout(function(){return o["default"].executeJavascript(t.el)},20)},e.prototype.internalSetDefaults=function(e){this.el=void 0,this.enabled=!0,this.groups=[],this.errors={},this.button=void 0,this.validateAll=!1,this.internalSetData(e)},e.prototype.internalSetData=function(e){var t=this;this.state=(0,d["default"])(e),this.state||(this.state={}),this.state.set=function(e,n){t.state[e]=n}},e.prototype.internalShowSubmitButton=function(){return!0},e.prototype.internalShowGlobalErrors=function(){return!0},e}();t["default"]=h,e.exports=t["default"]},function(module,exports){"use strict";exports.__esModule=!0,exports["default"]={createDiv:function(e,t,n){var r=document.createElement("div");return t&&(r.id=t),n&&(r.className=n),e&&e.appendChild(r),r},createHiddenField:function(e,t){var n=document.createElement("input");return n.type="hidden",n.name=t,e&&e.appendChild(n),n},insertAsFirstChild:function(e,t){e.insertBefore(t,e.firstChild)},insertAfter:function(e,t){var n=t.parentNode;n.lastchild===t?n.appendChild(e):n.insertBefore(e,t.nextSibling)},removeElement:function(e){e.parentElement.removeChild(e)},replaceElement:function(e,t){e.parentElement.replaceChild(t,e)},appendElement:function(e,t){e.appendChild(t)},insertHtmlAndFindElementById:function(e,t,n){return e.innerHTML=t,e.querySelector("#"+n)},insertHtml:function(e,t){e.innerHTML=t},findElmentById:function(e,t){return e.querySelector("#"+t)},findScriptTagsByClass:function(e,t){for(var n=[],r=e.getElementsByTagName("script"),a=0;a<r.length;a++){var i=r[a];i.className===t&&n.push(i)}return n},findParentForm:function(e){return"FORM"===e.nodeName.toUpperCase()?e:e.parentNode?this.findParentForm(e.parentNode):null},changeDisabledForAllFormElements:function(e,t){for(var n=e.getElementsByTagName("select"),r=e.getElementsByTagName("input"),a=e.getElementsByTagName("button"),i=0;i<n.length;i++){var o=n[i];o.disabled=t}for(var s=0;s<r.length;s++){var l=r[s];l.disabled=t}for(var u=0;u<a.length;u++){var f=a[u];f.disabled=t}},executeJavascript:function executeJavascript(parentEl){if(parentEl){var nodes=parentEl.getElementsByTagName("script");if(0!==nodes.length)for(var i=0;i<nodes.length;i++){var node=nodes[i];if(node.innerHTML&&!node.hasAttribute("data-hw-script-executed")){node.setAttribute("data-hw-script-executed",!0);try{eval(node.innerHTML)}catch(e){console.log(e)}}}}}},module.exports=exports["default"]},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var i=n(1),o=r(i),s=n(29),l=r(s),u=n(38),f=r(u),c=n(27),d=r(c),h=n(31),p=r(h),m=function(){function e(t,n,r,i){a(this,e),this.groupId=t.formId+"-"+r,this.form=t;try{var s=p["default"].resolveTemplate(t.template,"form.group",r),u={id:this.groupId,key:r,label:o["default"].translate(r)},f=s(u),c=d["default"].createDiv(n);c.className="hw-group-with-template",this.el=d["default"].insertHtmlAndFindElementById(c,f,this.groupId)}catch(h){this.el=d["default"].createDiv(n),this.el.className="hw-group-without-template"}this.fields=[];for(var m=0;m<i.length;m++){var y=i[m];this.fields.push(new l["default"](t,this,this.el,y))}this.globalErrors=void 0}return e.prototype.addGlobalErrorMessages=function(){this.globalErrors=new f["default"](this.form,this.el)},e.prototype.render=function(){this.globalErrors&&this.globalErrors.render();for(var e=0;e<this.fields.length;e++){var t=this.fields[e];t.render()}},e.prototype.destroy=function(){this.globalErrors&&this.globalErrors.destroy(),d["default"].removeElement(this.el);for(var e=0;e<this.fields.length;e++){var t=this.fields[e];t.destroy()}this.fields=null,this.el=null,this.form=null,this.globalErrors=void 0},e}();t["default"]=m,e.exports=t["default"]},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var i=n(1),o=r(i),s=n(27),l=r(s),u=n(30),f=r(u),c=n(31),d=r(c),h=n(32),p=r(h),m=n(23),y=r(m),g=function(){function e(t,n,r,i){a(this,e),this.fieldConfig=i,this.fieldId=n.groupId+"-"+i.key,this.form=t,this.el=void 0,this.renderState={},this.changed=!1,this.groupEl=l["default"].createDiv(r),this.render()}return e.prototype.render=function(){var e=this,t=this.internalEvaluateIsVisible();if(t){var n=d["default"].resolveTemplate(this.form.template,this.fieldConfig.type,this.fieldConfig.key),r=this.internalEvaluateValue(this.fieldConfig.isRequired),a=this.internalEvaluateValue(this.fieldConfig.isReadOnly),i=this.internalCalculateChoices();i&&Array.isArray(i)&&1===i.length&&(a=!0);var o=this.form.state[this.fieldConfig.key],s=this.internalLoadCustomErrors(this.internalValidate(o,!this.form.validateAll)),u=s.isValid,f=s.errors;void 0===o&&(o="");var c={id:this.fieldId,key:this.fieldConfig.key,label:this.fieldConfig.label,value:o,type:this.fieldConfig.type,isRequired:r,isReadOnly:a,isValid:u,errors:f,choices:i},h=(0,p["default"])(c),m=(0,p["default"])(this.renderState);if(this.changed&&(delete h.value,delete m.value),m&&(0,y["default"])(h,m))return this.renderState=c,void(this.changed=!1);this.renderState=c;var g=n(c),b=l["default"].createDiv(),v=l["default"].insertHtmlAndFindElementById(b,g,this.fieldId);if(!v)return void console.log('Can not find form element with id "'+this.fieldId+'"! The template did not return expected html!');v.addEventListener("change",function(t){return e.internalHandleChangeEvent(t)},!1),v.addEventListener("blur",function(t){return e.internalHandleChangeEvent(t)},!1),this.form.enabled||l["default"].changeDisabledForAllFormElements(b,!0),this.el?l["default"].replaceElement(this.el,b):l["default"].appendElement(this.groupEl,b),this.el=b,this.changed=!1}},e.prototype.validate=function(e){return this.internalValidate(e,!1)},e.prototype.destroy=function(){l["default"].removeElement(this.groupEl),this.fieldConfig=null,this.groupEl=null,this.form=null,this.el=void 0,this.renderState={},this.changed=!1},e.prototype.internalEvaluateIsVisible=function(){var e=this.internalEvaluateValue(this.fieldConfig.isVisible);return e?!0:("undefined"!=typeof this.fieldConfig.keepStateIfInvisible&&this.fieldConfig.keepStateIfInvisible||this.form.state.set(this.fieldConfig.key,void 0),this.renderState={},this.changed=!1,this.el&&(l["default"].removeElement(this.el),this.el=void 0),!1)},e.prototype.internalCalculateChoices=function(){var e=void 0;if("undefined"!=typeof this.fieldConfig.choices)e=this.internalEvaluateValue(this.fieldConfig.choices),e&&(1===e.length?this.form.state.set(this.fieldConfig.key,e[0].key):e.length>1&&(e=(0,p["default"])(e),e.unshift({key:"",label:o["default"].translate("pleaseSelect")})));else if("date"===this.fieldConfig.type){var t=new Date;e={days:f["default"].createRange(1,31),months:f["default"].createRange(1,12),years:f["default"].createRange(t.getFullYear()-100,t.getFullYear())}}return e},e.prototype.internalValidate=function(e,t){var n=!0,r=[];if(t&&"undefined"==typeof e)return{isValid:n};if("undefined"==typeof this.fieldConfig.validate)return{isValid:n};var a=this.fieldConfig.validate(e,this.form.state);return Array.isArray(a)?r=a:"string"==typeof a&&r.push(a),n=0===r.length,{isValid:n,errors:r}},e.prototype.internalLoadCustomErrors=function(e){var t=e.isValid,n=e.errors;if(!this.form.errors[this.fieldConfig.key])return{isValid:t,errors:n};if(0===this.form.errors[this.fieldConfig.key].length)return{isValid:t,errors:n};var r=n;return t&&(r=[]),r=r.concat(this.form.errors[this.fieldConfig.key]),{isValid:!1,errors:r}},e.prototype.internalEvaluateValue=function(e){var t=e;if("function"==typeof t){var n=this.form.state[this.fieldConfig.key];"undefined"==typeof n&&(n=""),t=t(n,this.form.state)}return t},e.prototype.internalHandleChangeEvent=function(e){var t=this;clearTimeout(this.internalHandleChangeEventTimeout),this.internalHandleChangeEventTimeout=setTimeout(function(){t.form&&(e.target.value!==t.form.state[t.fieldConfig.key]&&t.form.errors[t.fieldConfig.key]&&delete t.form.errors[t.fieldConfig.key],t.form.state.set(t.fieldConfig.key,e.target.value),t.changed=!0,"undefined"!=typeof t.fieldConfig.onSet&&t.fieldConfig.onSet(e.target.value,t.form.state),t.form.requestRender())},200)},e}();t["default"]=g,e.exports=t["default"]},function(e,t){"use strict";t.__esModule=!0,t["default"]={createRange:function(e,t){for(var n=[],r=e;t>=r;r++){var a=r;10>r&&(a="0"+r),n.push(a)}return n}},e.exports=t["default"]},function(e,t){"use strict";function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var r={},a=function(){function e(){n(this,e)}return e.addTemplate=function(e,t){if("undefined"==typeof e)throw new Error("No template name provided");if("undefined"==typeof t)throw new Error("No template object provided");if("undefined"!=typeof r[e])throw new Error("A template with name "+e+" was already registered!");for(var n=["text","select","boolean","date","button","form_errors"],a=0;a<n.length;a++){
var i=n[a];if("undefined"==typeof t[i])throw new Error("The template is missing the mandatory template function for type "+i+"!")}r[e]=t},e.resolveTemplate=function(e,t,n){if("undefined"==typeof r[e])throw new Error("A template with name "+e+" was not registered!");for(var a=r[e],i=this.internalCreateFieldNames(t,n),o=0;o<i.length;o++){var s=i[o];if("undefined"!=typeof a[s])return a[s]}throw new Error("Can not find a template function for field "+n+" with type "+t+" in template "+e)},e.internalCreateFieldNames=function(e,t){if("text.creditCard"===e)return["text_creditCard__"+t,"text_number__"+t,"text__"+t,"text_creditCard","text_number","text"];if("text.iban"===e)return["text_iban__"+t,"text__"+t,"text_iban","text"];if("text.email"===e)return["text_email__"+t,"text__"+t,"text_email","text"];if("text.number"===e)return["text_number__"+t,"text__"+t,"text_number","text"];if("text.area"===e)return["text_area__"+t,"text__"+t,"text_area","text"];if("text"===e)return["text__"+t,"text"];if("select.image"===e)return["select_image__"+t,"select__"+t,"select_image","select"];if("select"===e)return["select__"+t,"select"];if("boolean"===e)return["boolean__"+t,"boolean"];if("date"===e)return["date__"+t,"date"];if("form.group"===e)return["form_group__"+t,"form_group"];if("button"===e)return["button__"+t,"button"];if("form.errors"===e)return["form_errors"];throw new Error("Unknown type "+e+" for field "+t)},e}();t["default"]=a,e.exports=t["default"]},function(e,t,n){(function(e,t){"use strict";var n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},r=function(){function t(r,a,i,o){function l(r,i){if(null===r)return null;if(0==i)return r;var u,h;if("object"!=("undefined"==typeof r?"undefined":n(r)))return r;if(t.__isArray(r))u=[];else if(t.__isRegExp(r))u=new RegExp(r.source,s(r)),r.lastIndex&&(u.lastIndex=r.lastIndex);else if(t.__isDate(r))u=new Date(r.getTime());else{if(d&&e.isBuffer(r))return u=new e(r.length),r.copy(u),u;"undefined"==typeof o?(h=Object.getPrototypeOf(r),u=Object.create(h)):(u=Object.create(o),h=o)}if(a){var p=f.indexOf(r);if(-1!=p)return c[p];f.push(r),c.push(u)}for(var m in r){var y;h&&(y=Object.getOwnPropertyDescriptor(h,m)),y&&null==y.set||(u[m]=l(r[m],i-1))}return u}var u;"object"===("undefined"==typeof a?"undefined":n(a))&&(i=a.depth,o=a.prototype,u=a.filter,a=a.circular);var f=[],c=[],d="undefined"!=typeof e;return"undefined"==typeof a&&(a=!0),"undefined"==typeof i&&(i=1/0),l(r,i)}function r(e){return Object.prototype.toString.call(e)}function a(e){return"object"===("undefined"==typeof e?"undefined":n(e))&&"[object Date]"===r(e)}function i(e){return"object"===("undefined"==typeof e?"undefined":n(e))&&"[object Array]"===r(e)}function o(e){return"object"===("undefined"==typeof e?"undefined":n(e))&&"[object RegExp]"===r(e)}function s(e){var t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),t}return t.clonePrototype=function(e){if(null===e)return null;var t=function(){};return t.prototype=e,new t},t.__objToStr=r,t.__isDate=a,t.__isArray=i,t.__isRegExp=o,t.__getRegExpFlags=s,t}();"object"===n(t)&&t.exports&&(t.exports=r)}).call(t,n(33).Buffer,n(37)(e))},function(e,t,n){(function(e,r){"use strict";function a(){function e(){}try{var t=new Uint8Array(1);return t.foo=function(){return 42},t.constructor=e,42===t.foo()&&t.constructor===e&&"function"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(n){return!1}}function i(){return e.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function e(t){return this instanceof e?(e.TYPED_ARRAY_SUPPORT||(this.length=0,this.parent=void 0),"number"==typeof t?o(this,t):"string"==typeof t?s(this,t,arguments.length>1?arguments[1]:"utf8"):l(this,t)):arguments.length>1?new e(t,arguments[1]):new e(t)}function o(t,n){if(t=m(t,0>n?0:0|y(n)),!e.TYPED_ARRAY_SUPPORT)for(var r=0;n>r;r++)t[r]=0;return t}function s(e,t,n){"string"==typeof n&&""!==n||(n="utf8");var r=0|b(t,n);return e=m(e,r),e.write(t,n),e}function l(t,n){if(e.isBuffer(n))return u(t,n);if(X(n))return f(t,n);if(null==n)throw new TypeError("must start with number, buffer, array or string");if("undefined"!=typeof ArrayBuffer){if(n.buffer instanceof ArrayBuffer)return c(t,n);if(n instanceof ArrayBuffer)return d(t,n)}return n.length?h(t,n):p(t,n)}function u(e,t){var n=0|y(t.length);return e=m(e,n),t.copy(e,0,0,n),e}function f(e,t){var n=0|y(t.length);e=m(e,n);for(var r=0;n>r;r+=1)e[r]=255&t[r];return e}function c(e,t){var n=0|y(t.length);e=m(e,n);for(var r=0;n>r;r+=1)e[r]=255&t[r];return e}function d(t,n){return e.TYPED_ARRAY_SUPPORT?(n.byteLength,t=e._augment(new Uint8Array(n))):t=c(t,new Uint8Array(n)),t}function h(e,t){var n=0|y(t.length);e=m(e,n);for(var r=0;n>r;r+=1)e[r]=255&t[r];return e}function p(e,t){var n,r=0;"Buffer"===t.type&&X(t.data)&&(n=t.data,r=0|y(n.length)),e=m(e,r);for(var a=0;r>a;a+=1)e[a]=255&n[a];return e}function m(t,n){e.TYPED_ARRAY_SUPPORT?(t=e._augment(new Uint8Array(n)),t.__proto__=e.prototype):(t.length=n,t._isBuffer=!0);var r=0!==n&&n<=e.poolSize>>>1;return r&&(t.parent=Z),t}function y(e){if(e>=i())throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x"+i().toString(16)+" bytes");return 0|e}function g(t,n){if(!(this instanceof g))return new g(t,n);var r=new e(t,n);return delete r.parent,r}function b(e,t){"string"!=typeof e&&(e=""+e);var n=e.length;if(0===n)return 0;for(var r=!1;;)switch(t){case"ascii":case"binary":case"raw":case"raws":return n;case"utf8":case"utf-8":return q(e).length;case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return 2*n;case"hex":return n>>>1;case"base64":return K(e).length;default:if(r)return q(e).length;t=(""+t).toLowerCase(),r=!0}}function v(e,t,n){var r=!1;if(t=0|t,n=void 0===n||n===1/0?this.length:0|n,e||(e="utf8"),0>t&&(t=0),n>this.length&&(n=this.length),t>=n)return"";for(;;)switch(e){case"hex":return R(this,t,n);case"utf8":case"utf-8":return A(this,t,n);case"ascii":return T(this,t,n);case"binary":return M(this,t,n);case"base64":return S(this,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return B(this,t,n);default:if(r)throw new TypeError("Unknown encoding: "+e);e=(e+"").toLowerCase(),r=!0}}function _(e,t,n,r){n=Number(n)||0;var a=e.length-n;r?(r=Number(r),r>a&&(r=a)):r=a;var i=t.length;if(i%2!==0)throw new Error("Invalid hex string");r>i/2&&(r=i/2);for(var o=0;r>o;o++){var s=parseInt(t.substr(2*o,2),16);if(isNaN(s))throw new Error("Invalid hex string");e[n+o]=s}return o}function w(e,t,n,r){return J(q(t,e.length-n),e,n,r)}function E(e,t,n,r){return J(Y(t),e,n,r)}function I(e,t,n,r){return E(e,t,n,r)}function x(e,t,n,r){return J(K(t),e,n,r)}function C(e,t,n,r){return J(G(t,e.length-n),e,n,r)}function S(e,t,n){return 0===t&&n===e.length?z.fromByteArray(e):z.fromByteArray(e.slice(t,n))}function A(e,t,n){n=Math.min(e.length,n);for(var r=[],a=t;n>a;){var i=e[a],o=null,s=i>239?4:i>223?3:i>191?2:1;if(n>=a+s){var l,u,f,c;switch(s){case 1:128>i&&(o=i);break;case 2:l=e[a+1],128===(192&l)&&(c=(31&i)<<6|63&l,c>127&&(o=c));break;case 3:l=e[a+1],u=e[a+2],128===(192&l)&&128===(192&u)&&(c=(15&i)<<12|(63&l)<<6|63&u,c>2047&&(55296>c||c>57343)&&(o=c));break;case 4:l=e[a+1],u=e[a+2],f=e[a+3],128===(192&l)&&128===(192&u)&&128===(192&f)&&(c=(15&i)<<18|(63&l)<<12|(63&u)<<6|63&f,c>65535&&1114112>c&&(o=c))}}null===o?(o=65533,s=1):o>65535&&(o-=65536,r.push(o>>>10&1023|55296),o=56320|1023&o),r.push(o),a+=s}return k(r)}function k(e){var t=e.length;if(W>=t)return String.fromCharCode.apply(String,e);for(var n="",r=0;t>r;)n+=String.fromCharCode.apply(String,e.slice(r,r+=W));return n}function T(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;n>a;a++)r+=String.fromCharCode(127&e[a]);return r}function M(e,t,n){var r="";n=Math.min(e.length,n);for(var a=t;n>a;a++)r+=String.fromCharCode(e[a]);return r}function R(e,t,n){var r=e.length;(!t||0>t)&&(t=0),(!n||0>n||n>r)&&(n=r);for(var a="",i=t;n>i;i++)a+=H(e[i]);return a}function B(e,t,n){for(var r=e.slice(t,n),a="",i=0;i<r.length;i+=2)a+=String.fromCharCode(r[i]+256*r[i+1]);return a}function P(e,t,n){if(e%1!==0||0>e)throw new RangeError("offset is not uint");if(e+t>n)throw new RangeError("Trying to access beyond buffer length")}function O(t,n,r,a,i,o){if(!e.isBuffer(t))throw new TypeError("buffer must be a Buffer instance");if(n>i||o>n)throw new RangeError("value is out of bounds");if(r+a>t.length)throw new RangeError("index out of range")}function L(e,t,n,r){0>t&&(t=65535+t+1);for(var a=0,i=Math.min(e.length-n,2);i>a;a++)e[n+a]=(t&255<<8*(r?a:1-a))>>>8*(r?a:1-a)}function F(e,t,n,r){0>t&&(t=4294967295+t+1);for(var a=0,i=Math.min(e.length-n,4);i>a;a++)e[n+a]=t>>>8*(r?a:3-a)&255}function U(e,t,n,r,a,i){if(t>a||i>t)throw new RangeError("value is out of bounds");if(n+r>e.length)throw new RangeError("index out of range");if(0>n)throw new RangeError("index out of range")}function D(e,t,n,r,a){return a||U(e,t,n,4,3.4028234663852886e38,-3.4028234663852886e38),$.write(e,t,n,r,23,4),n+4}function j(e,t,n,r,a){return a||U(e,t,n,8,1.7976931348623157e308,-1.7976931348623157e308),$.write(e,t,n,r,52,8),n+8}function V(e){if(e=N(e).replace(ee,""),e.length<2)return"";for(;e.length%4!==0;)e+="=";return e}function N(e){return e.trim?e.trim():e.replace(/^\s+|\s+$/g,"")}function H(e){return 16>e?"0"+e.toString(16):e.toString(16)}function q(e,t){t=t||1/0;for(var n,r=e.length,a=null,i=[],o=0;r>o;o++){if(n=e.charCodeAt(o),n>55295&&57344>n){if(!a){if(n>56319){(t-=3)>-1&&i.push(239,191,189);continue}if(o+1===r){(t-=3)>-1&&i.push(239,191,189);continue}a=n;continue}if(56320>n){(t-=3)>-1&&i.push(239,191,189),a=n;continue}n=(a-55296<<10|n-56320)+65536}else a&&(t-=3)>-1&&i.push(239,191,189);if(a=null,128>n){if((t-=1)<0)break;i.push(n)}else if(2048>n){if((t-=2)<0)break;i.push(n>>6|192,63&n|128)}else if(65536>n){if((t-=3)<0)break;i.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(1114112>n))throw new Error("Invalid code point");if((t-=4)<0)break;i.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return i}function Y(e){for(var t=[],n=0;n<e.length;n++)t.push(255&e.charCodeAt(n));return t}function G(e,t){for(var n,r,a,i=[],o=0;o<e.length&&!((t-=2)<0);o++)n=e.charCodeAt(o),r=n>>8,a=n%256,i.push(a),i.push(r);return i}function K(e){return z.toByteArray(V(e))}function J(e,t,n,r){for(var a=0;r>a&&!(a+n>=t.length||a>=e.length);a++)t[a+n]=e[a];return a}var z=n(34),$=n(35),X=n(36);t.Buffer=e,t.SlowBuffer=g,t.INSPECT_MAX_BYTES=50,e.poolSize=8192;var Z={};e.TYPED_ARRAY_SUPPORT=void 0!==r.TYPED_ARRAY_SUPPORT?r.TYPED_ARRAY_SUPPORT:a(),e.TYPED_ARRAY_SUPPORT?(e.prototype.__proto__=Uint8Array.prototype,e.__proto__=Uint8Array):(e.prototype.length=void 0,e.prototype.parent=void 0),e.isBuffer=function(e){return!(null==e||!e._isBuffer)},e.compare=function(t,n){if(!e.isBuffer(t)||!e.isBuffer(n))throw new TypeError("Arguments must be Buffers");if(t===n)return 0;for(var r=t.length,a=n.length,i=0,o=Math.min(r,a);o>i&&t[i]===n[i];)++i;return i!==o&&(r=t[i],a=n[i]),a>r?-1:r>a?1:0},e.isEncoding=function(e){switch(String(e).toLowerCase()){case"hex":case"utf8":case"utf-8":case"ascii":case"binary":case"base64":case"raw":case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return!0;default:return!1}},e.concat=function(t,n){if(!X(t))throw new TypeError("list argument must be an Array of Buffers.");if(0===t.length)return new e(0);var r;if(void 0===n)for(n=0,r=0;r<t.length;r++)n+=t[r].length;var a=new e(n),i=0;for(r=0;r<t.length;r++){var o=t[r];o.copy(a,i),i+=o.length}return a},e.byteLength=b,e.prototype.toString=function(){var e=0|this.length;return 0===e?"":0===arguments.length?A(this,0,e):v.apply(this,arguments)},e.prototype.equals=function(t){if(!e.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t?!0:0===e.compare(this,t)},e.prototype.inspect=function(){var e="",n=t.INSPECT_MAX_BYTES;return this.length>0&&(e=this.toString("hex",0,n).match(/.{2}/g).join(" "),this.length>n&&(e+=" ... ")),"<Buffer "+e+">"},e.prototype.compare=function(t){if(!e.isBuffer(t))throw new TypeError("Argument must be a Buffer");return this===t?0:e.compare(this,t)},e.prototype.indexOf=function(t,n){function r(e,t,n){for(var r=-1,a=0;n+a<e.length;a++)if(e[n+a]===t[-1===r?0:a-r]){if(-1===r&&(r=a),a-r+1===t.length)return n+r}else r=-1;return-1}if(n>2147483647?n=2147483647:-2147483648>n&&(n=-2147483648),n>>=0,0===this.length)return-1;if(n>=this.length)return-1;if(0>n&&(n=Math.max(this.length+n,0)),"string"==typeof t)return 0===t.length?-1:String.prototype.indexOf.call(this,t,n);if(e.isBuffer(t))return r(this,t,n);if("number"==typeof t)return e.TYPED_ARRAY_SUPPORT&&"function"===Uint8Array.prototype.indexOf?Uint8Array.prototype.indexOf.call(this,t,n):r(this,[t],n);throw new TypeError("val must be string, number or Buffer")},e.prototype.get=function(e){return console.log(".get() is deprecated. Access using array indexes instead."),this.readUInt8(e)},e.prototype.set=function(e,t){return console.log(".set() is deprecated. Access using array indexes instead."),this.writeUInt8(e,t)},e.prototype.write=function(e,t,n,r){if(void 0===t)r="utf8",n=this.length,t=0;else if(void 0===n&&"string"==typeof t)r=t,n=this.length,t=0;else if(isFinite(t))t=0|t,isFinite(n)?(n=0|n,void 0===r&&(r="utf8")):(r=n,n=void 0);else{var a=r;r=t,t=0|n,n=a}var i=this.length-t;if((void 0===n||n>i)&&(n=i),e.length>0&&(0>n||0>t)||t>this.length)throw new RangeError("attempt to write outside buffer bounds");r||(r="utf8");for(var o=!1;;)switch(r){case"hex":return _(this,e,t,n);case"utf8":case"utf-8":return w(this,e,t,n);case"ascii":return E(this,e,t,n);case"binary":return I(this,e,t,n);case"base64":return x(this,e,t,n);case"ucs2":case"ucs-2":case"utf16le":case"utf-16le":return C(this,e,t,n);default:if(o)throw new TypeError("Unknown encoding: "+r);r=(""+r).toLowerCase(),o=!0}},e.prototype.toJSON=function(){return{type:"Buffer",data:Array.prototype.slice.call(this._arr||this,0)}};var W=4096;e.prototype.slice=function(t,n){var r=this.length;t=~~t,n=void 0===n?r:~~n,0>t?(t+=r,0>t&&(t=0)):t>r&&(t=r),0>n?(n+=r,0>n&&(n=0)):n>r&&(n=r),t>n&&(n=t);var a;if(e.TYPED_ARRAY_SUPPORT)a=e._augment(this.subarray(t,n));else{var i=n-t;a=new e(i,void 0);for(var o=0;i>o;o++)a[o]=this[o+t]}return a.length&&(a.parent=this.parent||this),a},e.prototype.readUIntLE=function(e,t,n){e=0|e,t=0|t,n||P(e,t,this.length);for(var r=this[e],a=1,i=0;++i<t&&(a*=256);)r+=this[e+i]*a;return r},e.prototype.readUIntBE=function(e,t,n){e=0|e,t=0|t,n||P(e,t,this.length);for(var r=this[e+--t],a=1;t>0&&(a*=256);)r+=this[e+--t]*a;return r},e.prototype.readUInt8=function(e,t){return t||P(e,1,this.length),this[e]},e.prototype.readUInt16LE=function(e,t){return t||P(e,2,this.length),this[e]|this[e+1]<<8},e.prototype.readUInt16BE=function(e,t){return t||P(e,2,this.length),this[e]<<8|this[e+1]},e.prototype.readUInt32LE=function(e,t){return t||P(e,4,this.length),(this[e]|this[e+1]<<8|this[e+2]<<16)+16777216*this[e+3]},e.prototype.readUInt32BE=function(e,t){return t||P(e,4,this.length),16777216*this[e]+(this[e+1]<<16|this[e+2]<<8|this[e+3])},e.prototype.readIntLE=function(e,t,n){e=0|e,t=0|t,n||P(e,t,this.length);for(var r=this[e],a=1,i=0;++i<t&&(a*=256);)r+=this[e+i]*a;return a*=128,r>=a&&(r-=Math.pow(2,8*t)),r},e.prototype.readIntBE=function(e,t,n){e=0|e,t=0|t,n||P(e,t,this.length);for(var r=t,a=1,i=this[e+--r];r>0&&(a*=256);)i+=this[e+--r]*a;return a*=128,i>=a&&(i-=Math.pow(2,8*t)),i},e.prototype.readInt8=function(e,t){return t||P(e,1,this.length),128&this[e]?-1*(255-this[e]+1):this[e]},e.prototype.readInt16LE=function(e,t){t||P(e,2,this.length);var n=this[e]|this[e+1]<<8;return 32768&n?4294901760|n:n},e.prototype.readInt16BE=function(e,t){t||P(e,2,this.length);var n=this[e+1]|this[e]<<8;return 32768&n?4294901760|n:n},e.prototype.readInt32LE=function(e,t){return t||P(e,4,this.length),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},e.prototype.readInt32BE=function(e,t){return t||P(e,4,this.length),this[e]<<24|this[e+1]<<16|this[e+2]<<8|this[e+3]},e.prototype.readFloatLE=function(e,t){return t||P(e,4,this.length),$.read(this,e,!0,23,4)},e.prototype.readFloatBE=function(e,t){return t||P(e,4,this.length),$.read(this,e,!1,23,4)},e.prototype.readDoubleLE=function(e,t){return t||P(e,8,this.length),$.read(this,e,!0,52,8)},e.prototype.readDoubleBE=function(e,t){return t||P(e,8,this.length),$.read(this,e,!1,52,8)},e.prototype.writeUIntLE=function(e,t,n,r){e=+e,t=0|t,n=0|n,r||O(this,e,t,n,Math.pow(2,8*n),0);var a=1,i=0;for(this[t]=255&e;++i<n&&(a*=256);)this[t+i]=e/a&255;return t+n},e.prototype.writeUIntBE=function(e,t,n,r){e=+e,t=0|t,n=0|n,r||O(this,e,t,n,Math.pow(2,8*n),0);var a=n-1,i=1;for(this[t+a]=255&e;--a>=0&&(i*=256);)this[t+a]=e/i&255;return t+n},e.prototype.writeUInt8=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,1,255,0),e.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[n]=255&t,n+1},e.prototype.writeUInt16LE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,2,65535,0),e.TYPED_ARRAY_SUPPORT?(this[n]=255&t,this[n+1]=t>>>8):L(this,t,n,!0),n+2},e.prototype.writeUInt16BE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,2,65535,0),e.TYPED_ARRAY_SUPPORT?(this[n]=t>>>8,this[n+1]=255&t):L(this,t,n,!1),n+2},e.prototype.writeUInt32LE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,4,4294967295,0),e.TYPED_ARRAY_SUPPORT?(this[n+3]=t>>>24,this[n+2]=t>>>16,this[n+1]=t>>>8,this[n]=255&t):F(this,t,n,!0),n+4},e.prototype.writeUInt32BE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,4,4294967295,0),e.TYPED_ARRAY_SUPPORT?(this[n]=t>>>24,this[n+1]=t>>>16,this[n+2]=t>>>8,this[n+3]=255&t):F(this,t,n,!1),n+4},e.prototype.writeIntLE=function(e,t,n,r){if(e=+e,t=0|t,!r){var a=Math.pow(2,8*n-1);O(this,e,t,n,a-1,-a)}var i=0,o=1,s=0>e?1:0;for(this[t]=255&e;++i<n&&(o*=256);)this[t+i]=(e/o>>0)-s&255;return t+n},e.prototype.writeIntBE=function(e,t,n,r){if(e=+e,t=0|t,!r){var a=Math.pow(2,8*n-1);O(this,e,t,n,a-1,-a)}var i=n-1,o=1,s=0>e?1:0;for(this[t+i]=255&e;--i>=0&&(o*=256);)this[t+i]=(e/o>>0)-s&255;return t+n},e.prototype.writeInt8=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,1,127,-128),e.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),0>t&&(t=255+t+1),this[n]=255&t,n+1},e.prototype.writeInt16LE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,2,32767,-32768),e.TYPED_ARRAY_SUPPORT?(this[n]=255&t,this[n+1]=t>>>8):L(this,t,n,!0),n+2},e.prototype.writeInt16BE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,2,32767,-32768),e.TYPED_ARRAY_SUPPORT?(this[n]=t>>>8,this[n+1]=255&t):L(this,t,n,!1),n+2},e.prototype.writeInt32LE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,4,2147483647,-2147483648),e.TYPED_ARRAY_SUPPORT?(this[n]=255&t,this[n+1]=t>>>8,this[n+2]=t>>>16,this[n+3]=t>>>24):F(this,t,n,!0),n+4},e.prototype.writeInt32BE=function(t,n,r){return t=+t,n=0|n,r||O(this,t,n,4,2147483647,-2147483648),0>t&&(t=4294967295+t+1),e.TYPED_ARRAY_SUPPORT?(this[n]=t>>>24,this[n+1]=t>>>16,this[n+2]=t>>>8,this[n+3]=255&t):F(this,t,n,!1),n+4},e.prototype.writeFloatLE=function(e,t,n){return D(this,e,t,!0,n)},e.prototype.writeFloatBE=function(e,t,n){return D(this,e,t,!1,n)},e.prototype.writeDoubleLE=function(e,t,n){return j(this,e,t,!0,n)},e.prototype.writeDoubleBE=function(e,t,n){return j(this,e,t,!1,n)},e.prototype.copy=function(t,n,r,a){if(r||(r=0),a||0===a||(a=this.length),n>=t.length&&(n=t.length),n||(n=0),a>0&&r>a&&(a=r),a===r)return 0;if(0===t.length||0===this.length)return 0;if(0>n)throw new RangeError("targetStart out of bounds");if(0>r||r>=this.length)throw new RangeError("sourceStart out of bounds");if(0>a)throw new RangeError("sourceEnd out of bounds");a>this.length&&(a=this.length),t.length-n<a-r&&(a=t.length-n+r);var i,o=a-r;if(this===t&&n>r&&a>n)for(i=o-1;i>=0;i--)t[i+n]=this[i+r];else if(1e3>o||!e.TYPED_ARRAY_SUPPORT)for(i=0;o>i;i++)t[i+n]=this[i+r];else t._set(this.subarray(r,r+o),n);return o},e.prototype.fill=function(e,t,n){if(e||(e=0),t||(t=0),n||(n=this.length),t>n)throw new RangeError("end < start");if(n!==t&&0!==this.length){if(0>t||t>=this.length)throw new RangeError("start out of bounds");if(0>n||n>this.length)throw new RangeError("end out of bounds");var r;if("number"==typeof e)for(r=t;n>r;r++)this[r]=e;else{var a=q(e.toString()),i=a.length;for(r=t;n>r;r++)this[r]=a[r%i]}return this}},e.prototype.toArrayBuffer=function(){if("undefined"!=typeof Uint8Array){if(e.TYPED_ARRAY_SUPPORT)return new e(this).buffer;for(var t=new Uint8Array(this.length),n=0,r=t.length;r>n;n+=1)t[n]=this[n];return t.buffer}throw new TypeError("Buffer.toArrayBuffer not supported in this browser")};var Q=e.prototype;e._augment=function(t){return t.constructor=e,t._isBuffer=!0,t._set=t.set,t.get=Q.get,t.set=Q.set,t.write=Q.write,t.toString=Q.toString,t.toLocaleString=Q.toString,t.toJSON=Q.toJSON,t.equals=Q.equals,t.compare=Q.compare,t.indexOf=Q.indexOf,t.copy=Q.copy,t.slice=Q.slice,t.readUIntLE=Q.readUIntLE,t.readUIntBE=Q.readUIntBE,t.readUInt8=Q.readUInt8,t.readUInt16LE=Q.readUInt16LE,t.readUInt16BE=Q.readUInt16BE,t.readUInt32LE=Q.readUInt32LE,t.readUInt32BE=Q.readUInt32BE,t.readIntLE=Q.readIntLE,t.readIntBE=Q.readIntBE,t.readInt8=Q.readInt8,t.readInt16LE=Q.readInt16LE,t.readInt16BE=Q.readInt16BE,t.readInt32LE=Q.readInt32LE,t.readInt32BE=Q.readInt32BE,t.readFloatLE=Q.readFloatLE,t.readFloatBE=Q.readFloatBE,t.readDoubleLE=Q.readDoubleLE,t.readDoubleBE=Q.readDoubleBE,t.writeUInt8=Q.writeUInt8,t.writeUIntLE=Q.writeUIntLE,t.writeUIntBE=Q.writeUIntBE,t.writeUInt16LE=Q.writeUInt16LE,t.writeUInt16BE=Q.writeUInt16BE,t.writeUInt32LE=Q.writeUInt32LE,t.writeUInt32BE=Q.writeUInt32BE,t.writeIntLE=Q.writeIntLE,t.writeIntBE=Q.writeIntBE,t.writeInt8=Q.writeInt8,t.writeInt16LE=Q.writeInt16LE,t.writeInt16BE=Q.writeInt16BE,t.writeInt32LE=Q.writeInt32LE,t.writeInt32BE=Q.writeInt32BE,t.writeFloatLE=Q.writeFloatLE,t.writeFloatBE=Q.writeFloatBE,t.writeDoubleLE=Q.writeDoubleLE,t.writeDoubleBE=Q.writeDoubleBE,t.fill=Q.fill,t.inspect=Q.inspect,t.toArrayBuffer=Q.toArrayBuffer,t};var ee=/[^+\/0-9A-Za-z-_]/g}).call(t,n(33).Buffer,function(){return this}())},function(e,t,n){"use strict";var r="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";!function(e){function t(e){var t=e.charCodeAt(0);return t===o||t===c?62:t===s||t===d?63:l>t?-1:l+10>t?t-l+26+26:f+26>t?t-f:u+26>t?t-u+26:void 0}function n(e){function n(e){u[c++]=e}var r,a,o,s,l,u;if(e.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var f=e.length;l="="===e.charAt(f-2)?2:"="===e.charAt(f-1)?1:0,u=new i(3*e.length/4-l),o=l>0?e.length-4:e.length;var c=0;for(r=0,a=0;o>r;r+=4,a+=3)s=t(e.charAt(r))<<18|t(e.charAt(r+1))<<12|t(e.charAt(r+2))<<6|t(e.charAt(r+3)),n((16711680&s)>>16),n((65280&s)>>8),n(255&s);return 2===l?(s=t(e.charAt(r))<<2|t(e.charAt(r+1))>>4,n(255&s)):1===l&&(s=t(e.charAt(r))<<10|t(e.charAt(r+1))<<4|t(e.charAt(r+2))>>2,n(s>>8&255),n(255&s)),u}function a(e){function t(e){return r.charAt(e)}function n(e){return t(e>>18&63)+t(e>>12&63)+t(e>>6&63)+t(63&e)}var a,i,o,s=e.length%3,l="";for(a=0,o=e.length-s;o>a;a+=3)i=(e[a]<<16)+(e[a+1]<<8)+e[a+2],l+=n(i);switch(s){case 1:i=e[e.length-1],l+=t(i>>2),l+=t(i<<4&63),l+="==";break;case 2:i=(e[e.length-2]<<8)+e[e.length-1],l+=t(i>>10),l+=t(i>>4&63),l+=t(i<<2&63),l+="="}return l}var i="undefined"!=typeof Uint8Array?Uint8Array:Array,o="+".charCodeAt(0),s="/".charCodeAt(0),l="0".charCodeAt(0),u="a".charCodeAt(0),f="A".charCodeAt(0),c="-".charCodeAt(0),d="_".charCodeAt(0);e.toByteArray=n,e.fromByteArray=a}(t)},function(e,t){"use strict";t.read=function(e,t,n,r,a){var i,o,s=8*a-r-1,l=(1<<s)-1,u=l>>1,f=-7,c=n?a-1:0,d=n?-1:1,h=e[t+c];for(c+=d,i=h&(1<<-f)-1,h>>=-f,f+=s;f>0;i=256*i+e[t+c],c+=d,f-=8);for(o=i&(1<<-f)-1,i>>=-f,f+=r;f>0;o=256*o+e[t+c],c+=d,f-=8);if(0===i)i=1-u;else{if(i===l)return o?NaN:(h?-1:1)*(1/0);o+=Math.pow(2,r),i-=u}return(h?-1:1)*o*Math.pow(2,i-r)},t.write=function(e,t,n,r,a,i){var o,s,l,u=8*i-a-1,f=(1<<u)-1,c=f>>1,d=23===a?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:i-1,p=r?1:-1,m=0>t||0===t&&0>1/t?1:0;for(t=Math.abs(t),isNaN(t)||t===1/0?(s=isNaN(t)?1:0,o=f):(o=Math.floor(Math.log(t)/Math.LN2),t*(l=Math.pow(2,-o))<1&&(o--,l*=2),t+=o+c>=1?d/l:d*Math.pow(2,1-c),t*l>=2&&(o++,l/=2),o+c>=f?(s=0,o=f):o+c>=1?(s=(t*l-1)*Math.pow(2,a),o+=c):(s=t*Math.pow(2,c-1)*Math.pow(2,a),o=0));a>=8;e[n+h]=255&s,h+=p,s/=256,a-=8);for(o=o<<a|s,u+=a;u>0;e[n+h]=255&o,h+=p,o/=256,u-=8);e[n+h-p]|=128*m}},function(e,t){"use strict";var n={}.toString;e.exports=Array.isArray||function(e){return"[object Array]"==n.call(e)}},function(e,t){"use strict";e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children=[],e.webpackPolyfill=1),e}},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var i=n(27),o=r(i),s=n(31),l=r(s),u=function(){function e(t,n){a(this,e),this.form=t,this.el=o["default"].createDiv(),o["default"].insertAsFirstChild(n,this.el)}return e.prototype.render=function(){this.form.errors&&this.form.errors.global&&this.form.errors.global.length>0?this.internalShowErrors():this.internalHideErrors()},e.prototype.destroy=function(){this.el=null,this.form=void 0},e.prototype.internalShowErrors=function(){var e=l["default"].resolveTemplate(this.form.template,"form.errors"),t={errors:this.form.errors.global},n=e(t);o["default"].insertHtml(this.el,n)},e.prototype.internalHideErrors=function(){o["default"].insertHtml(this.el,"")},e}();t["default"]=u,e.exports=t["default"]},function(e,t,n){"use strict";function r(e){return e&&e.__esModule?e:{"default":e}}function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}t.__esModule=!0;var i=n(1),o=r(i),s=n(27),l=r(s),u=n(31),f=r(u),c=function(){function e(t,n,r){var i=this;a(this,e),this.form=t,this.formConfig=r;var s=l["default"].createDiv(n);this.buttonId=t.formId+"-button";var u={id:this.buttonId,key:"button",label:o["default"].translate("submit")},c=f["default"].resolveTemplate(this.form.template,"button","submit"),d=c(u),h=l["default"].insertHtmlAndFindElementById(s,d,this.buttonId);return h?(h.addEventListener("click",function(e){return i.internalHandleClickEvent(e)},!1),this.form.enabled||l["default"].changeDisabledForAllFormElements(s,!0),l["default"].appendElement(n,s),void(this.el=s)):void console.log('Can not find button element with id "'+this.buttonId+'"! The template did not return expected html!')}return e.prototype.destroy=function(){this.form=null,this.formConfig=null,this.buttonId=null,this.el=null},e.prototype.internalHandleClickEvent=function(e){var t=this;e.preventDefault();var n=this.form.events;n.onBeforeSubmit&&n.onBeforeSubmit(),setTimeout(function(){var e=o["default"].transferMethods.validateFields(t.formConfig,t.form.state);e.length>0?(t.form.validateAll=!0,t.form.requestRender(),n.onValidationError&&n.onValidationError(e)):n.onSubmit&&n.onSubmit()},250)},e}();t["default"]=c,e.exports=t["default"]},function(e,t){"use strict";t.__esModule=!0,t["default"]={sortArrayByKey:function(e,t){return e.sort(function(e,n){var r=e[t],a=n[t];return"string"==typeof r&&(r=r.toLowerCase(),a=a.toLowerCase()),a>r?-1:r>a?1:0})}},e.exports=t["default"]},function(e,t){"use strict";t.__esModule=!0,t["default"]={createUUID:function(){for(var e=[],t="0123456789abcdef",n=0;36>n;n++)e[n]=t.substr(Math.floor(16*Math.random()),1);return e[14]="4",e[19]=t.substr(3&e[19]|8,1),e[8]=e[13]=e[18]=e[23]="-",e.join("")}},e.exports=t["default"]},function(e,t){"use strict";t.__esModule=!0,t["default"]=function(e){var t={};t["boolean"]=function(e){var t='<div class="form-group ';return e.isValid||(t+="has-error"),t+='"> <div class="checkbox"> <label> <input id="'+e.id+'" name="'+e.key+'" type="checkbox" value="1" ',e.value&&(t+='checked="checked"'),t+=" ",e.isReadOnly&&(t+='readonly="readonly"'),t+="/> "+e.label+" </label> </div>",e.isValid||(t+='<span class="help-block">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.button=function(e){var t='<button class="btn btn-primary" id="'+e.id+'">'+e.label+"</button>";return t},t.date=function(e){var t='<div class="form-group ';e.isValid||(t+="has-error"),t+='"> <label for="'+e.id+'">'+e.label+'</label> <div class="row"> <div class="col-xs-4"> <select name="'+e.key+'[year]" id="'+e.id+'_year" class="form-control">';var n=e.choices.years;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+=' <option value="'+r+'">'+r+"</option> ";t+=' </select> </div> <div class="col-xs-4"> <select name="'+e.key+'[month]" id="'+e.id+'_month" class="form-control">';var o=e.choices.months;if(o)for(var r,a=-1,s=o.length-1;s>a;)r=o[a+=1],t+=' <option value="'+r+'">'+r+"</option> ";t+=' </select> </div> <div class="col-xs-4"> <select name="'+e.key+'[day]" id="'+e.id+'_day" class="form-control">';var l=e.choices.days;if(l)for(var r,a=-1,u=l.length-1;u>a;)r=l[a+=1],t+=' <option value="'+r+'">'+r+"</option> ";return t+=" </select> </div> </div>",e.isValid||(t+='<span class="help-block">'+e.errors.join(" ")+"</span>"),t+=' <input name="'+e.key+'" type="hidden" id="'+e.id+'" value="'+e.value+'" /><script type="text/javascript">(function() {var year_el = document.getElementById(\''+e.id+"_year'); var month_el = document.getElementById('"+e.id+"_month'); var day_el = document.getElementById('"+e.id+"_day'); var el = document.getElementById('"+e.id+"'); function setHiddenField() { el.value = getDateValue(); }function getDateValue() {return year_el.value + '-' + month_el.value + '-' + day_el.value} function onChange() {if (getDateValue() !== el.value) {setHiddenField(); var event = new Event('change'); el.dispatchEvent(event);} }if (el.value) {var values = el.value.split('-');year_el.value = values[0];month_el.value = values[1];day_el.value = values[2];}else {setHiddenField();}year_el.addEventListener('change', onChange, false); month_el.addEventListener('change', onChange, false); day_el.addEventListener('change', onChange, false); })();</script></div>"},t.form_errors=function(e){var t='<div class="alert alert-danger" role="alert"><ul>',n=e.errors;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+="<li>"+r+"</li>";return t+="</ul></div>"},t.form_group=function(e){var t="<fieldset> <legend>"+e.label+'</legend> <div id="'+e.id+'"></div></fieldset>';return t},t.select=function(e){var t='<div class="form-group ';e.isValid||(t+="has-error"),t+='"> <label for="'+e.id+'">'+e.label+'</label> <select name="'+e.key+'" id="'+e.id+'" class="form-control" ',e.isReadOnly&&(t+='readonly="readonly"'),t+="> ";var n=e.choices;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+=' <option value="'+r.key+'" ',r.key===e.value&&(t+='selected="selected"'),t+=">"+r.label+"</option> ";return t+=" </select>",e.isValid||(t+='<span class="help-block">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text=function(e){var t='<div class="form-group ';return e.isValid||(t+="has-error"),t+='"> <label for="'+e.id+'">'+e.label+'</label> <input name="'+e.key+'" type="text" class="form-control" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="help-block">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_area=function(e){var t='<div class="form-group ';return e.isValid||(t+="has-error"),t+='"> <label for="'+e.id+'">'+e.label+'</label> <textarea name="'+e.key+'" class="form-control" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=">"+e.value+"</textarea>",e.isValid||(t+='<span class="help-block">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_email=function(e){var t='<div class="form-group ';return e.isValid||(t+="has-error"),t+='"> <label for="'+e.id+'">'+e.label+'</label> <input name="'+e.key+'" type="email" class="form-control" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="help-block">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_number=function(e){var t='<div class="form-group ';return e.isValid||(t+="has-error"),t+='"> <label for="'+e.id+'">'+e.label+'</label> <input name="'+e.key+'" type="tel" class="form-control" id="'+e.id+'" placeholder="'+e.label+'" ',
e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="help-block">'+e.errors.join(" ")+"</span>"),t+="</div>"},e.addTemplate("bootstrap3",t);var t={};t["boolean"]=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <div class="hw-checkbox-container"> <label class="hw-checkbox-label"> <input class="hw-checkbox" id="'+e.id+'" name="'+e.key+'" type="checkbox" value="1" ',e.value&&(t+='checked="checked"'),t+=" ",e.isReadOnly&&(t+='readonly="readonly"'),t+="/> "+e.label+" </label> </div>",e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.button=function(e){var t='<button class="hw-button" id="'+e.id+'">'+e.label+"</button>";return t},t.date=function(e){var t='<div class="hw-form-group ';e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <div class="hw-date-container"> <div class="hw-date-field-container hw-date-year-container"> <select name="'+e.key+'[year]" id="'+e.id+'_year" class="hw-date-year hw-date"> ';var n=e.choices.years;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+=' <option value="'+r+'">'+r+"</option> ";t+=' </select> </div> <div class="hw-date-field-container hw-date-month-container"> <select name="'+e.key+'[month]" id="'+e.id+'_month" class="hw-date-month hw-date"> ';var o=e.choices.months;if(o)for(var r,a=-1,s=o.length-1;s>a;)r=o[a+=1],t+='     <option value="'+r+'">'+r+"</option> ";t+=' </select> </div> <div class="hw-date-field-container hw-date-day-container"> <select name="'+e.key+'[day]" id="'+e.id+'_day" class="hw-date-day hw-date"> ';var l=e.choices.days;if(l)for(var r,a=-1,u=l.length-1;u>a;)r=l[a+=1],t+='     <option value="'+r+'">'+r+"</option> ";return t+=" </select> </div> </div> ",e.isValid||(t+='   <span class="hw-error-message">'+e.errors.join(" ")+"</span> "),t+=' <input name="'+e.key+'" type="hidden" id="'+e.id+'" value="'+e.value+'" /> <script type="text/javascript"> (function() { var year_el = document.getElementById(\''+e.id+"_year');         var month_el = document.getElementById('"+e.id+"_month');         var day_el = document.getElementById('"+e.id+"_day');         var el = document.getElementById('"+e.id+"');         function setHiddenField() {             el.value = getDateValue();         } function getDateValue() { return year_el.value + '-' + month_el.value + '-' + day_el.value } function onChange() {if (getDateValue() !== el.value) {setHiddenField(); var event = new Event('change'); el.dispatchEvent(event);} }if (el.value) {var values = el.value.split('-');year_el.value = values[0];month_el.value = values[1];day_el.value = values[2];}else {setHiddenField();}year_el.addEventListener('change', onChange, false); month_el.addEventListener('change', onChange, false); day_el.addEventListener('change', onChange, false); })();</script></div>"},t.form_errors=function(e){var t='<div class="hw-global-errors" role="alert"><ul class="hw-global-errors-list">',n=e.errors;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+='<li class="hw-global-errors-error">'+r+"</li>";return t+="</ul></div>"},t.select=function(e){var t='<div class="hw-form-group ';e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <select name="'+e.key+'" id="'+e.id+'" class="hw-select" ',e.isReadOnly&&(t+='readonly="readonly"'),t+="> ";var n=e.choices;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+=' <option value="'+r.key+'" ',r.key===e.value&&(t+='selected="selected"'),t+=">"+r.label+"</option> ";return t+=" </select>",e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <input name="'+e.key+'" type="text" class="hw-text hw-input" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_area=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <textarea name="'+e.key+'" class="hw-textarea" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=">"+e.value+"</textarea>",e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_email=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <input name="'+e.key+'" type="email" class="hw-email hw-input" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_number=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <input name="'+e.key+'" type="tel" class="hw-number hw-input" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},e.addTemplate("compact",t);var t={};t["boolean"]=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <div class="hw-checkbox-container"> <label class="hw-checkbox-label"> <input class="hw-checkbox" id="'+e.id+'" name="'+e.key+'" type="checkbox" value="1" ',e.value&&(t+='checked="checked"'),t+=" ",e.isReadOnly&&(t+='readonly="readonly"'),t+="/> "+e.label+" </label> </div>",e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.button=function(e){var t='<button class="hw-button" id="'+e.id+'">'+e.label+"</button>";return t},t.date=function(e){var t='<div class="hw-form-group ';e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <div class="hw-date-container"> <div class="hw-date-field-container hw-date-year-container"> <select name="'+e.key+'[year]" id="'+e.id+'_year" class="hw-date-year hw-date"> ';var n=e.choices.years;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+=' <option value="'+r+'">'+r+"</option> ";t+=' </select> </div> <div class="hw-date-field-container hw-date-month-container"> <select name="'+e.key+'[month]" id="'+e.id+'_month" class="hw-date-month hw-date"> ';var o=e.choices.months;if(o)for(var r,a=-1,s=o.length-1;s>a;)r=o[a+=1],t+=' <option value="'+r+'">'+r+"</option> ";t+=' </select> </div> <div class="hw-date-field-container hw-date-day-container"> <select name="'+e.key+'[day]" id="'+e.id+'_day" class="hw-date-day hw-date"> ';var l=e.choices.days;if(l)for(var r,a=-1,u=l.length-1;u>a;)r=l[a+=1],t+=' <option value="'+r+'">'+r+"</option> ";return t+=" </select> </div> </div>",e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+=' <input name="'+e.key+'" type="hidden" id="'+e.id+'" value="'+e.value+'" /><script type="text/javascript">(function() {var year_el = document.getElementById(\''+e.id+"_year'); var month_el = document.getElementById('"+e.id+"_month'); var day_el = document.getElementById('"+e.id+"_day'); var el = document.getElementById('"+e.id+"'); function setHiddenField() { el.value = getDateValue(); }function getDateValue() {return year_el.value + '-' + month_el.value + '-' + day_el.value} function onChange() {if (getDateValue() !== el.value) {setHiddenField(); var event = new Event('change'); el.dispatchEvent(event);} }if (el.value) {var values = el.value.split('-');year_el.value = values[0];month_el.value = values[1];day_el.value = values[2];}else {setHiddenField();}year_el.addEventListener('change', onChange, false); month_el.addEventListener('change', onChange, false); day_el.addEventListener('change', onChange, false); })();</script></div>"},t.form_errors=function(e){var t='<div class="hw-global-errors" role="alert"><ul class="hw-global-errors-list">',n=e.errors;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+='<li class="hw-global-errors-error">'+r+"</li>";return t+="</ul></div>"},t.form_group=function(e){var t='<fieldset class="hw-group"> <legend>'+e.label+'</legend> <div id="'+e.id+'"></div></fieldset>';return t},t.select=function(e){var t='<div class="hw-form-group ';e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <select name="'+e.key+'" id="'+e.id+'" class="hw-select" ',e.isReadOnly&&(t+='readonly="readonly"'),t+="> ";var n=e.choices;if(n)for(var r,a=-1,i=n.length-1;i>a;)r=n[a+=1],t+=' <option value="'+r.key+'" ',r.key===e.value&&(t+='selected="selected"'),t+=">"+r.label+"</option> ";return t+=" </select>",e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <input name="'+e.key+'" type="text" class="hw-text hw-input" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_area=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <textarea name="'+e.key+'" class="hw-textarea" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=">"+e.value+"</textarea>",e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_email=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <input name="'+e.key+'" type="email" class="hw-email hw-input" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},t.text_number=function(e){var t='<div class="hw-form-group ';return e.isValid||(t+="hw-has-error"),t+=" ",e.isRequired&&(t+="hw-required"),t+='"> <label for="'+e.id+'" class="hw-label">'+e.label+'</label> <input name="'+e.key+'" type="tel" class="hw-number hw-input" id="'+e.id+'" placeholder="'+e.label+'" ',e.isReadOnly&&(t+='readonly="readonly"'),t+=' value="'+e.value+'"/>',e.isValid||(t+='<span class="hw-error-message">'+e.errors.join(" ")+"</span>"),t+="</div>"},e.addTemplate("plain",t)},e.exports=t["default"]}])});
//# sourceMappingURL=widgets.min.js.map

{var configurations=[{"countries": ["GB"],"currencies": ["GBP"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "Branch Sorting Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{6}", value)) {errors.push("is invalid");}if (value.trim().length < 6) {errors.push("The minimum length of this field is 6.");}if (value.trim().length > 6) {errors.push("The maximum length of this field is 6.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{1,8}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 8) {errors.push("The maximum length of this field is 8.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GB"],"currencies": ["GBP"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "Branch Sorting Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{6}", value)) {errors.push("is invalid");}if (value.trim().length < 6) {errors.push("The minimum length of this field is 6.");}if (value.trim().length > 6) {errors.push("The maximum length of this field is 6.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{1,8}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 8) {errors.push("The maximum length of this field is 8.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BR"],"currencies": ["BRL"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "branchId","label": "Branch Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-zA-Z0-9 -]{5,7}$", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "bankAccountPurpose","label": "Bank Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"CURRENT_ACCOUNT","label":"Checking Account"},{"key":"SAVINGS_ACCOUNT","label":"Savings Account"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-zA-Z0-9 -]{6,16}$", value)) {errors.push("is invalid");}if (value.trim().length < 6) {errors.push("The minimum length of this field is 6.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "governmentId","label": "CPF (11 digits)","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("([0-9]{3}\\.?[0-9]{3}\\.?[0-9]{3}-?[0-9]{2})", value)) {errors.push("is invalid");}return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BR"],"currencies": ["BRL"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "branchId","label": "Branch Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-zA-Z0-9 -]{5,7}$", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "bankAccountPurpose","label": "Bank Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"CURRENT_ACCOUNT","label":"Checking Account"},{"key":"SAVINGS_ACCOUNT","label":"Savings Account"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-zA-Z0-9 -]{6,16}$", value)) {errors.push("is invalid");}if (value.trim().length < 6) {errors.push("The minimum length of this field is 6.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "CNPJ (14 digits)","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("([0-9]{2}\\.?[0-9]{3}\\.?[0-9]{3}\/?[0-9]{4}-?[0-9]{2})", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CA"],"currencies": ["CAD","USD"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "branchId","label": "Transit Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{5}", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 5) {errors.push("The maximum length of this field is 5.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CA"],"currencies": ["CAD","USD"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "branchId","label": "Transit Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{5}", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 5) {errors.push("The maximum length of this field is 5.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MX"],"currencies": ["MXN"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankAccountId","label": "CLABE Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{18}", value)) {errors.push("is invalid");}if (value.trim().length < 18) {errors.push("The minimum length of this field is 18.");}if (value.trim().length > 18) {errors.push("The maximum length of this field is 18.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MX"],"currencies": ["MXN"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankAccountId","label": "CLABE Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{18}", value)) {errors.push("is invalid");}if (value.trim().length < 18) {errors.push("The minimum length of this field is 18.");}if (value.trim().length > 18) {errors.push("The maximum length of this field is 18.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CL"],"currencies": ["CLP"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountPurpose","label": "Bank Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"CHECKING_ACCOUNT","label":"Checking Account"},{"key":"SAVINGS_ACCOUNT","label":"Savings Account"},{"key":"CUENTA_EN_LINEA","label":"Cuenta En Linea"},{"key":"CUENTA_VISTA","label":"Cuenta Vista"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9\u00E1\u00E9\u00ED\u00F3\u00FA\u00F1\u00FC\u00C1\u00C9\u00CD\u00D3\u00DA\u00D1\u00DC]{1,50}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-zA-Z0-9]{2,20}$", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "governmentId","label": "RUT","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-zA-Z0-9]{1,10}$", value)) {errors.push("is invalid");}return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CL"],"currencies": ["CLP"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountPurpose","label": "Bank Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"CHECKING_ACCOUNT","label":"Checking Account"},{"key":"SAVINGS_ACCOUNT","label":"Savings Account"},{"key":"CUENTA_EN_LINEA","label":"Cuenta En Linea"},{"key":"CUENTA_VISTA","label":"Cuenta Vista"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9\u00E1\u00E9\u00ED\u00F3\u00FA\u00F1\u00FC\u00C1\u00C9\u00CD\u00D3\u00DA\u00D1\u00DC]{1,50}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-zA-Z0-9]{2,20}$", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CN"],"currencies": ["CNY"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchCity","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-z()\\-\\._\uFF08\uFF09A-Z0-9\\u4e00-\\u9fa5.]{1,20}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "branchName","label": "Branch Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\u4e00-\\u9fa5]{4,100}$", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 100) {errors.push("The maximum length of this field is 100.");}return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\u4e00-\\u9fa5]{1,50}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "branchStateProvince","label": "Province","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[a-z()\\-\\._\uFF08\uFF09A-Z0-9\\u4e00-\\u9fa5.]{1,10}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 10) {errors.push("The maximum length of this field is 10.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{6,35}", value)) {errors.push("is invalid");}if (value.trim().length < 6) {errors.push("The minimum length of this field is 6.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "governmentId","label": "Government ID","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[0-9a-zA-Z]{15}$|^[0-9a-zA-Z]{18}$", value)) {errors.push("is invalid");}return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CN"],"currencies": ["CNY"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {}},{"countries": ["US"],"currencies": ["USD"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Routing Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{9}", value)) {errors.push("is invalid");}if (value.trim().length < 9) {errors.push("The minimum length of this field is 9.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountPurpose","label": "Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"CHECKING","label":"CHECKING"},{"key":"SAVINGS","label":"SAVINGS"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4,17}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 17) {errors.push("The maximum length of this field is 17.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\p{Print}*$", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\p{Print}*$", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\p{Print}*$", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[0-9]{5}||([0-9]{5}-[0-9]{4})", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["US"],"currencies": ["USD"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Routing Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{9}", value)) {errors.push("is invalid");}if (value.trim().length < 9) {errors.push("The minimum length of this field is 9.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountPurpose","label": "Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"CHECKING","label":"CHECKING"},{"key":"SAVINGS","label":"SAVINGS"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4,17}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 17) {errors.push("The maximum length of this field is 17.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\p{Print}*$", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[0-9]{5}||([0-9]{5}-[0-9]{4})", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IN"],"currencies": ["INR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "IFSC code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{4}0[0-9A-Z]{6}", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{2,16}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z\\s]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z\\s]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IN"],"currencies": ["INR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {}},{"countries": ["ID"],"currencies": ["IDR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{7}", value)) {errors.push("is invalid");}if (value.trim().length < 7) {errors.push("The minimum length of this field is 7.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,16}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["ID"],"currencies": ["IDR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{7}", value)) {errors.push("is invalid");}if (value.trim().length < 7) {errors.push("The minimum length of this field is 7.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,16}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IL"],"currencies": ["ILS"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{2}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 2) {errors.push("The maximum length of this field is 2.");}return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{1,9}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "governmentId","label": "Identification Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{9}$", value)) {errors.push("is invalid");}return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IL"],"currencies": ["ILS"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{2}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 2) {errors.push("The maximum length of this field is 2.");}return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{1,9}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "governmentId","label": "Identification Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{9}$", value)) {errors.push("is invalid");}return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["JP"],"currencies": ["JPY"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankAccountPurpose","label": "Bank Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"SAVINGS_ACCOUNT","label":"Savings Account (Ts\u016Bj\u014D chokin, \u901A\u5E38\u8CAF\u91D1)"},{"key":"CURRENT_ACCOUNT","label":"Current Account (T\u014Dza yokin, \u5F53\u5EA7\u9810\u91D1)"},{"key":"DEPOSIT_ACCOUNT","label":"Ordinary Bank Account (Futs\u016B yokin, \u666E\u901A\u9810\u91D1)"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{7}", value)) {errors.push("is invalid");}if (value.trim().length < 7) {errors.push("The minimum length of this field is 7.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["JP"],"currencies": ["JPY"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankAccountPurpose","label": "Bank Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"SAVINGS_ACCOUNT","label":"Savings Account (Ts\u016Bj\u014D chokin, \u901A\u5E38\u8CAF\u91D1)"},{"key":"CURRENT_ACCOUNT","label":"Current Account (T\u014Dza yokin, \u5F53\u5EA7\u9810\u91D1)"},{"key":"DEPOSIT_ACCOUNT","label":"Ordinary Bank Account (Futs\u016B yokin, \u666E\u901A\u9810\u91D1)"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{7}", value)) {errors.push("is invalid");}if (value.trim().length < 7) {errors.push("The minimum length of this field is 7.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MY"],"currencies": ["MYR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC\/SWIFT","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{11}", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MY"],"currencies": ["MYR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC\/SWIFT","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{11}", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NG"],"currencies": ["NGN"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NG"],"currencies": ["NGN"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AU"],"currencies": ["AUD"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Bank BSB Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank BSB Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{5,9}", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AU"],"currencies": ["AUD"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Bank BSB Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank BSB Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{5,9}", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["HK"],"currencies": ["HKD"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{6,9}", value)) {errors.push("is invalid");}if (value.trim().length < 6) {errors.push("The minimum length of this field is 6.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z- ]*", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z- ]*", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z- ]*", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["HK"],"currencies": ["HKD"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{6,9}", value)) {errors.push("is invalid");}if (value.trim().length < 6) {errors.push("The minimum length of this field is 6.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z-. ]*", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NZ"],"currencies": ["NZD"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{2}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 2) {errors.push("The maximum length of this field is 2.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{9}", value)) {errors.push("is invalid");}if (value.trim().length < 9) {errors.push("The minimum length of this field is 9.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NZ"],"currencies": ["NZD"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{2}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 2) {errors.push("The maximum length of this field is 2.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{9}", value)) {errors.push("is invalid");}if (value.trim().length < 9) {errors.push("The minimum length of this field is 9.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SG"],"currencies": ["SGD"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{5,11}$", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SG"],"currencies": ["SGD"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Branch Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{3}", value)) {errors.push("is invalid");}if (value.trim().length < 3) {errors.push("The minimum length of this field is 3.");}if (value.trim().length > 3) {errors.push("The maximum length of this field is 3.");}return errors;}},{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}", value)) {errors.push("is invalid");}if (value.trim().length < 4) {errors.push("The minimum length of this field is 4.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\d{5,11}$", value)) {errors.push("is invalid");}if (value.trim().length < 5) {errors.push("The minimum length of this field is 5.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PH"],"currencies": ["PHP"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9A-Z]{2,4}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[0-9]{4}", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PH"],"currencies": ["PHP"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9A-Z]{2,4}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 4) {errors.push("The maximum length of this field is 4.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{1,20}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[0-9]{4}", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PL"],"currencies": ["PLN"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PL"],"currencies": ["PLN"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["RU"],"currencies": ["RUB"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "Bank Code","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("04[0-9]{7}", value)) {errors.push("is invalid");}if (value.trim().length < 9) {errors.push("The minimum length of this field is 9.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "bankAccountPurpose","label": "Bank Account Type","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"INDIVIDUAL_ACCOUNT","label":"Individuals"},{"key":"INDIVIDUAL_ENTREPRENEUR_ACCOUNT","label":"Individual Entrepreneur"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\p{Z}\\p{L}\\p{N}\\p{P}]{2,50}", value)) {errors.push("is invalid");}if (value.trim().length < 2) {errors.push("The minimum length of this field is 2.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("4[0-9]{4}810[0-9]{12}", value)) {errors.push("is invalid");}if (value.trim().length < 20) {errors.push("The minimum length of this field is 20.");}if (value.trim().length > 20) {errors.push("The maximum length of this field is 20.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,30}$", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Patronymic Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,30}$", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,30}$", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,100}$", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,100}$", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,100}$", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,2000}$", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\u0410\u0430\u0411\u0431\u0412\u0432\u0413\u0433\u0414\u0434\u0415\u0435\u0401\u0451\u0416\u0436\u0417\u0437\u0418\u0438\u0419\u0439\u041A\u043A\u041B\u043B\u041C\u043C\u041D\u043D\u041E\u043E\u041F\u043F\u0420\u0440\u0421\u0441\u0422\u0442\u0423\u0443\u0424\u0444\u0425\u0445\u0426\u0446\u0427\u0447\u0428\u0448\u0429\u0449\u042A\u044A\u042B\u044B\u042C\u044C\u042D\u044D\u042E\u044E\u042F\u044F]{0,128}$", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}]}},{"countries": ["RU"],"currencies": ["RUB"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {}},{"countries": ["TH"],"currencies": ["THB"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("([0-9a-zA-Z]){1,34}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["TH"],"currencies": ["THB"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("([0-9a-zA-Z]){1,34}", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z0-9\\s]{0,11}", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AE"],"currencies": ["AED"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC\/SWIFT","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{8,11}", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{23}", value)) {errors.push("is invalid");}if (value.trim().length < 23) {errors.push("The minimum length of this field is 23.");}if (value.trim().length > 23) {errors.push("The maximum length of this field is 23.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AE"],"currencies": ["AED"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC\/SWIFT","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{8,11}", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{23}", value)) {errors.push("is invalid");}if (value.trim().length < 23) {errors.push("The minimum length of this field is 23.");}if (value.trim().length > 23) {errors.push("The maximum length of this field is 23.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["VN"],"currencies": ["VND"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC\/SWIFT","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{8,11}", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,50}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\w{1,34}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["VN"],"currencies": ["VND"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC\/SWIFT","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9a-zA-Z]{8,11}", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankName","label": "Bank Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,50}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 50) {errors.push("The maximum length of this field is 50.");}return errors;}},{"key": "bankAccountId","label": "Account Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^\\w{1,34}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["US"],"currencies": ["USD"],"accountType": "WIRE_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "branchId","label": "Routing Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{9}", value)) {errors.push("is invalid");}if (value.trim().length < 9) {errors.push("The minimum length of this field is 9.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "wireInstructions","label": "Additional Wire Instructions","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankId","label": "SWIFT Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"INTERMEDIARY_ACCOUNT": [{"key": "intermediaryBankId","label": "SWIFT Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "intermediaryBankAddressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankStateProvince","label": "State\/Province","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankName","label": "Bank Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "intermediaryBankCity","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankPostalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankCountry","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [{"key":"AF","label":"Afghanistan"},{"key":"AX","label":"\u00C5land Islands"},{"key":"AL","label":"Albania"},{"key":"DZ","label":"Algeria"},{"key":"AS","label":"American Samoa"},{"key":"AD","label":"Andorra"},{"key":"AO","label":"Angola"},{"key":"AI","label":"Anguilla"},{"key":"AQ","label":"Antarctica"},{"key":"AG","label":"Antigua and Barbuda"},{"key":"AR","label":"Argentina"},{"key":"AM","label":"Armenia"},{"key":"AW","label":"Aruba"},{"key":"AU","label":"Australia"},{"key":"AT","label":"Austria"},{"key":"AZ","label":"Azerbaijan"},{"key":"BS","label":"Bahamas"},{"key":"BH","label":"Bahrain"},{"key":"BD","label":"Bangladesh"},{"key":"BB","label":"Barbados"},{"key":"BE","label":"Belgium"},{"key":"BZ","label":"Belize"},{"key":"BJ","label":"Benin"},{"key":"BM","label":"Bermuda"},{"key":"BT","label":"Bhutan"},{"key":"BO","label":"Bolivia"},{"key":"BQ","label":"Caribbean Netherlands"},{"key":"BA","label":"Bosnia and Herzegovina"},{"key":"BW","label":"Botswana"},{"key":"BV","label":"Bouvet Island"},{"key":"BR","label":"Brazil"},{"key":"IO","label":"British Indian Ocean Territory"},{"key":"BN","label":"Brunei"},{"key":"BG","label":"Bulgaria"},{"key":"BF","label":"Burkina Faso"},{"key":"BI","label":"Burundi"},{"key":"KH","label":"Cambodia"},{"key":"CM","label":"Cameroon"},{"key":"CA","label":"Canada"},{"key":"CV","label":"Cape Verde"},{"key":"KY","label":"Cayman Islands"},{"key":"CF","label":"Central African Republic"},{"key":"TD","label":"Chad"},{"key":"CL","label":"Chile"},{"key":"CN","label":"China"},{"key":"CX","label":"Christmas Island"},{"key":"CC","label":"Cocos [Keeling] Islands"},{"key":"CO","label":"Colombia"},{"key":"KM","label":"Comoros"},{"key":"CG","label":"Congo - Brazzaville"},{"key":"CK","label":"Cook Islands"},{"key":"CR","label":"Costa Rica"},{"key":"HR","label":"Croatia"},{"key":"CW","label":"Cura\u00E7ao"},{"key":"CY","label":"Cyprus"},{"key":"CZ","label":"Czech Republic"},{"key":"DK","label":"Denmark"},{"key":"DJ","label":"Djibouti"},{"key":"DM","label":"Dominica"},{"key":"DO","label":"Dominican Republic"},{"key":"TL","label":"Timor-Leste"},{"key":"EC","label":"Ecuador"},{"key":"EG","label":"Egypt"},{"key":"SV","label":"El Salvador"},{"key":"GQ","label":"Equatorial Guinea"},{"key":"EE","label":"Estonia"},{"key":"ET","label":"Ethiopia"},{"key":"FK","label":"Falkland Islands"},{"key":"FO","label":"Faroe Islands"},{"key":"FJ","label":"Fiji"},{"key":"FI","label":"Finland"},{"key":"FR","label":"France"},{"key":"GF","label":"French Guiana"},{"key":"PF","label":"French Polynesia"},{"key":"TF","label":"French Southern Territories"},{"key":"GA","label":"Gabon"},{"key":"GM","label":"Gambia"},{"key":"GE","label":"Georgia"},{"key":"DE","label":"Germany"},{"key":"GH","label":"Ghana"},{"key":"GI","label":"Gibraltar"},{"key":"GR","label":"Greece"},{"key":"GL","label":"Greenland"},{"key":"GD","label":"Grenada"},{"key":"GP","label":"Guadeloupe"},{"key":"GU","label":"Guam"},{"key":"GT","label":"Guatemala"},{"key":"GG","label":"Guernsey"},{"key":"GN","label":"Guinea"},{"key":"GY","label":"Guyana"},{"key":"HT","label":"Haiti"},{"key":"HM","label":"Heard Island and McDonald Islands"},{"key":"HN","label":"Honduras"},{"key":"HK","label":"Hong Kong SAR China"},{"key":"HU","label":"Hungary"},{"key":"IS","label":"Iceland"},{"key":"IN","label":"India"},{"key":"ID","label":"Indonesia"},{"key":"IE","label":"Ireland"},{"key":"IM","label":"Isle of Man"},{"key":"IL","label":"Israel"},{"key":"IT","label":"Italy"},{"key":"JM","label":"Jamaica"},{"key":"JP","label":"Japan"},{"key":"JE","label":"Jersey"},{"key":"JO","label":"Jordan"},{"key":"KZ","label":"Kazakhstan"},{"key":"KE","label":"Kenya"},{"key":"KI","label":"Kiribati"},{"key":"KR","label":"South Korea"},{"key":"XK","label":"Kosovo"},{"key":"KW","label":"Kuwait"},{"key":"KG","label":"Kyrgyzstan"},{"key":"LA","label":"Laos"},{"key":"LV","label":"Latvia"},{"key":"LS","label":"Lesotho"},{"key":"LI","label":"Liechtenstein"},{"key":"LT","label":"Lithuania"},{"key":"LU","label":"Luxembourg"},{"key":"MO","label":"Macau SAR China"},{"key":"MK","label":"Macedonia"},{"key":"MG","label":"Madagascar"},{"key":"MW","label":"Malawi"},{"key":"MY","label":"Malaysia"},{"key":"MV","label":"Maldives"},{"key":"ML","label":"Mali"},{"key":"MT","label":"Malta"},{"key":"MH","label":"Marshall Islands"},{"key":"MQ","label":"Martinique"},{"key":"MR","label":"Mauritania"},{"key":"MU","label":"Mauritius"},{"key":"YT","label":"Mayotte"},{"key":"MX","label":"Mexico"},{"key":"FM","label":"Micronesia"},{"key":"MD","label":"Moldova"},{"key":"MC","label":"Monaco"},{"key":"MN","label":"Mongolia"},{"key":"ME","label":"Montenegro"},{"key":"MS","label":"Montserrat"},{"key":"MA","label":"Morocco"},{"key":"MZ","label":"Mozambique"},{"key":"NA","label":"Namibia"},{"key":"NR","label":"Nauru"},{"key":"NP","label":"Nepal"},{"key":"NL","label":"Netherlands"},{"key":"AN","label":"Netherlands Antilles"},{"key":"NC","label":"New Caledonia"},{"key":"NZ","label":"New Zealand"},{"key":"NI","label":"Nicaragua"},{"key":"NE","label":"Niger"},{"key":"NG","label":"Nigeria"},{"key":"NU","label":"Niue"},{"key":"NF","label":"Norfolk Island"},{"key":"MP","label":"Northern Mariana Islands"},{"key":"NO","label":"Norway"},{"key":"OM","label":"Oman"},{"key":"PK","label":"Pakistan"},{"key":"PW","label":"Palau"},{"key":"PA","label":"Panama"},{"key":"PG","label":"Papua New Guinea"},{"key":"PY","label":"Paraguay"},{"key":"PE","label":"Peru"},{"key":"PH","label":"Philippines"},{"key":"PN","label":"Pitcairn Islands"},{"key":"PL","label":"Poland"},{"key":"PT","label":"Portugal"},{"key":"PR","label":"Puerto Rico"},{"key":"QA","label":"Qatar"},{"key":"RE","label":"R\u00E9union"},{"key":"RO","label":"Romania"},{"key":"RU","label":"Russia"},{"key":"RW","label":"Rwanda"},{"key":"KN","label":"Saint Kitts and Nevis"},{"key":"LC","label":"Saint Lucia"},{"key":"MF","label":"Saint Martin"},{"key":"VC","label":"Saint Vincent and the Grenadines"},{"key":"WS","label":"Samoa"},{"key":"SM","label":"San Marino"},{"key":"ST","label":"S\u00E3o Tom\u00E9 and Pr\u00EDncipe"},{"key":"SA","label":"Saudi Arabia"},{"key":"SN","label":"Senegal"},{"key":"RS","label":"Serbia"},{"key":"SC","label":"Seychelles"},{"key":"SL","label":"Sierra Leone"},{"key":"SG","label":"Singapore"},{"key":"SX","label":"Sint Maarten"},{"key":"SK","label":"Slovakia"},{"key":"SI","label":"Slovenia"},{"key":"SB","label":"Solomon Islands"},{"key":"ZA","label":"South Africa"},{"key":"GS","label":"South Georgia and the South Sandwich Islands"},{"key":"SS","label":"South Sudan"},{"key":"ES","label":"Spain"},{"key":"LK","label":"Sri Lanka"},{"key":"BL","label":"Saint Barth\u00E9lemy"},{"key":"SH","label":"Saint Helena"},{"key":"PM","label":"Saint Pierre and Miquelon"},{"key":"SR","label":"Suriname"},{"key":"SJ","label":"Svalbard and Jan Mayen"},{"key":"SZ","label":"Swaziland"},{"key":"SE","label":"Sweden"},{"key":"CH","label":"Switzerland"},{"key":"TW","label":"Taiwan"},{"key":"TJ","label":"Tajikistan"},{"key":"TZ","label":"Tanzania"},{"key":"TH","label":"Thailand"},{"key":"TG","label":"Togo"},{"key":"TK","label":"Tokelau"},{"key":"TO","label":"Tonga"},{"key":"TT","label":"Trinidad and Tobago"},{"key":"TN","label":"Tunisia"},{"key":"TR","label":"Turkey"},{"key":"TM","label":"Turkmenistan"},{"key":"TC","label":"Turks and Caicos Islands"},{"key":"TV","label":"Tuvalu"},{"key":"UG","label":"Uganda"},{"key":"UA","label":"Ukraine"},{"key":"AE","label":"United Arab Emirates"},{"key":"GB","label":"United Kingdom"},{"key":"US","label":"United States"},{"key":"UM","label":"U.S. Outlying Islands"},{"key":"UY","label":"Uruguay"},{"key":"UZ","label":"Uzbekistan"},{"key":"VU","label":"Vanuatu"},{"key":"VA","label":"Vatican City"},{"key":"VE","label":"Venezuela"},{"key":"VN","label":"Vietnam"},{"key":"VG","label":"British Virgin Islands"},{"key":"VI","label":"U.S. Virgin Islands"},{"key":"WF","label":"Wallis and Futuna"},{"key":"EH","label":"Western Sahara"},{"key":"ZM","label":"Zambia"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "passportId","label": "Passport Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["US"],"currencies": ["USD"],"accountType": "WIRE_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "branchId","label": "Routing Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{9}", value)) {errors.push("is invalid");}if (value.trim().length < 9) {errors.push("The minimum length of this field is 9.");}if (value.trim().length > 9) {errors.push("The maximum length of this field is 9.");}return errors;}},{"key": "wireInstructions","label": "Additional Wire Instructions","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankId","label": "SWIFT Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"INTERMEDIARY_ACCOUNT": [{"key": "intermediaryBankId","label": "SWIFT Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "intermediaryBankAddressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankStateProvince","label": "State\/Province","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankName","label": "Bank Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "intermediaryBankCity","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankPostalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankCountry","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [{"key":"AF","label":"Afghanistan"},{"key":"AX","label":"\u00C5land Islands"},{"key":"AL","label":"Albania"},{"key":"DZ","label":"Algeria"},{"key":"AS","label":"American Samoa"},{"key":"AD","label":"Andorra"},{"key":"AO","label":"Angola"},{"key":"AI","label":"Anguilla"},{"key":"AQ","label":"Antarctica"},{"key":"AG","label":"Antigua and Barbuda"},{"key":"AR","label":"Argentina"},{"key":"AM","label":"Armenia"},{"key":"AW","label":"Aruba"},{"key":"AU","label":"Australia"},{"key":"AT","label":"Austria"},{"key":"AZ","label":"Azerbaijan"},{"key":"BS","label":"Bahamas"},{"key":"BH","label":"Bahrain"},{"key":"BD","label":"Bangladesh"},{"key":"BB","label":"Barbados"},{"key":"BE","label":"Belgium"},{"key":"BZ","label":"Belize"},{"key":"BJ","label":"Benin"},{"key":"BM","label":"Bermuda"},{"key":"BT","label":"Bhutan"},{"key":"BO","label":"Bolivia"},{"key":"BQ","label":"Caribbean Netherlands"},{"key":"BA","label":"Bosnia and Herzegovina"},{"key":"BW","label":"Botswana"},{"key":"BV","label":"Bouvet Island"},{"key":"BR","label":"Brazil"},{"key":"IO","label":"British Indian Ocean Territory"},{"key":"BN","label":"Brunei"},{"key":"BG","label":"Bulgaria"},{"key":"BF","label":"Burkina Faso"},{"key":"BI","label":"Burundi"},{"key":"KH","label":"Cambodia"},{"key":"CM","label":"Cameroon"},{"key":"CA","label":"Canada"},{"key":"CV","label":"Cape Verde"},{"key":"KY","label":"Cayman Islands"},{"key":"CF","label":"Central African Republic"},{"key":"TD","label":"Chad"},{"key":"CL","label":"Chile"},{"key":"CN","label":"China"},{"key":"CX","label":"Christmas Island"},{"key":"CC","label":"Cocos [Keeling] Islands"},{"key":"CO","label":"Colombia"},{"key":"KM","label":"Comoros"},{"key":"CG","label":"Congo - Brazzaville"},{"key":"CK","label":"Cook Islands"},{"key":"CR","label":"Costa Rica"},{"key":"HR","label":"Croatia"},{"key":"CW","label":"Cura\u00E7ao"},{"key":"CY","label":"Cyprus"},{"key":"CZ","label":"Czech Republic"},{"key":"DK","label":"Denmark"},{"key":"DJ","label":"Djibouti"},{"key":"DM","label":"Dominica"},{"key":"DO","label":"Dominican Republic"},{"key":"TL","label":"Timor-Leste"},{"key":"EC","label":"Ecuador"},{"key":"EG","label":"Egypt"},{"key":"SV","label":"El Salvador"},{"key":"GQ","label":"Equatorial Guinea"},{"key":"EE","label":"Estonia"},{"key":"ET","label":"Ethiopia"},{"key":"FK","label":"Falkland Islands"},{"key":"FO","label":"Faroe Islands"},{"key":"FJ","label":"Fiji"},{"key":"FI","label":"Finland"},{"key":"FR","label":"France"},{"key":"GF","label":"French Guiana"},{"key":"PF","label":"French Polynesia"},{"key":"TF","label":"French Southern Territories"},{"key":"GA","label":"Gabon"},{"key":"GM","label":"Gambia"},{"key":"GE","label":"Georgia"},{"key":"DE","label":"Germany"},{"key":"GH","label":"Ghana"},{"key":"GI","label":"Gibraltar"},{"key":"GR","label":"Greece"},{"key":"GL","label":"Greenland"},{"key":"GD","label":"Grenada"},{"key":"GP","label":"Guadeloupe"},{"key":"GU","label":"Guam"},{"key":"GT","label":"Guatemala"},{"key":"GG","label":"Guernsey"},{"key":"GN","label":"Guinea"},{"key":"GY","label":"Guyana"},{"key":"HT","label":"Haiti"},{"key":"HM","label":"Heard Island and McDonald Islands"},{"key":"HN","label":"Honduras"},{"key":"HK","label":"Hong Kong SAR China"},{"key":"HU","label":"Hungary"},{"key":"IS","label":"Iceland"},{"key":"IN","label":"India"},{"key":"ID","label":"Indonesia"},{"key":"IE","label":"Ireland"},{"key":"IM","label":"Isle of Man"},{"key":"IL","label":"Israel"},{"key":"IT","label":"Italy"},{"key":"JM","label":"Jamaica"},{"key":"JP","label":"Japan"},{"key":"JE","label":"Jersey"},{"key":"JO","label":"Jordan"},{"key":"KZ","label":"Kazakhstan"},{"key":"KE","label":"Kenya"},{"key":"KI","label":"Kiribati"},{"key":"KR","label":"South Korea"},{"key":"XK","label":"Kosovo"},{"key":"KW","label":"Kuwait"},{"key":"KG","label":"Kyrgyzstan"},{"key":"LA","label":"Laos"},{"key":"LV","label":"Latvia"},{"key":"LS","label":"Lesotho"},{"key":"LI","label":"Liechtenstein"},{"key":"LT","label":"Lithuania"},{"key":"LU","label":"Luxembourg"},{"key":"MO","label":"Macau SAR China"},{"key":"MK","label":"Macedonia"},{"key":"MG","label":"Madagascar"},{"key":"MW","label":"Malawi"},{"key":"MY","label":"Malaysia"},{"key":"MV","label":"Maldives"},{"key":"ML","label":"Mali"},{"key":"MT","label":"Malta"},{"key":"MH","label":"Marshall Islands"},{"key":"MQ","label":"Martinique"},{"key":"MR","label":"Mauritania"},{"key":"MU","label":"Mauritius"},{"key":"YT","label":"Mayotte"},{"key":"MX","label":"Mexico"},{"key":"FM","label":"Micronesia"},{"key":"MD","label":"Moldova"},{"key":"MC","label":"Monaco"},{"key":"MN","label":"Mongolia"},{"key":"ME","label":"Montenegro"},{"key":"MS","label":"Montserrat"},{"key":"MA","label":"Morocco"},{"key":"MZ","label":"Mozambique"},{"key":"NA","label":"Namibia"},{"key":"NR","label":"Nauru"},{"key":"NP","label":"Nepal"},{"key":"NL","label":"Netherlands"},{"key":"AN","label":"Netherlands Antilles"},{"key":"NC","label":"New Caledonia"},{"key":"NZ","label":"New Zealand"},{"key":"NI","label":"Nicaragua"},{"key":"NE","label":"Niger"},{"key":"NG","label":"Nigeria"},{"key":"NU","label":"Niue"},{"key":"NF","label":"Norfolk Island"},{"key":"MP","label":"Northern Mariana Islands"},{"key":"NO","label":"Norway"},{"key":"OM","label":"Oman"},{"key":"PK","label":"Pakistan"},{"key":"PW","label":"Palau"},{"key":"PA","label":"Panama"},{"key":"PG","label":"Papua New Guinea"},{"key":"PY","label":"Paraguay"},{"key":"PE","label":"Peru"},{"key":"PH","label":"Philippines"},{"key":"PN","label":"Pitcairn Islands"},{"key":"PL","label":"Poland"},{"key":"PT","label":"Portugal"},{"key":"PR","label":"Puerto Rico"},{"key":"QA","label":"Qatar"},{"key":"RE","label":"R\u00E9union"},{"key":"RO","label":"Romania"},{"key":"RU","label":"Russia"},{"key":"RW","label":"Rwanda"},{"key":"KN","label":"Saint Kitts and Nevis"},{"key":"LC","label":"Saint Lucia"},{"key":"MF","label":"Saint Martin"},{"key":"VC","label":"Saint Vincent and the Grenadines"},{"key":"WS","label":"Samoa"},{"key":"SM","label":"San Marino"},{"key":"ST","label":"S\u00E3o Tom\u00E9 and Pr\u00EDncipe"},{"key":"SA","label":"Saudi Arabia"},{"key":"SN","label":"Senegal"},{"key":"RS","label":"Serbia"},{"key":"SC","label":"Seychelles"},{"key":"SL","label":"Sierra Leone"},{"key":"SG","label":"Singapore"},{"key":"SX","label":"Sint Maarten"},{"key":"SK","label":"Slovakia"},{"key":"SI","label":"Slovenia"},{"key":"SB","label":"Solomon Islands"},{"key":"ZA","label":"South Africa"},{"key":"GS","label":"South Georgia and the South Sandwich Islands"},{"key":"SS","label":"South Sudan"},{"key":"ES","label":"Spain"},{"key":"LK","label":"Sri Lanka"},{"key":"BL","label":"Saint Barth\u00E9lemy"},{"key":"SH","label":"Saint Helena"},{"key":"PM","label":"Saint Pierre and Miquelon"},{"key":"SR","label":"Suriname"},{"key":"SJ","label":"Svalbard and Jan Mayen"},{"key":"SZ","label":"Swaziland"},{"key":"SE","label":"Sweden"},{"key":"CH","label":"Switzerland"},{"key":"TW","label":"Taiwan"},{"key":"TJ","label":"Tajikistan"},{"key":"TZ","label":"Tanzania"},{"key":"TH","label":"Thailand"},{"key":"TG","label":"Togo"},{"key":"TK","label":"Tokelau"},{"key":"TO","label":"Tonga"},{"key":"TT","label":"Trinidad and Tobago"},{"key":"TN","label":"Tunisia"},{"key":"TR","label":"Turkey"},{"key":"TM","label":"Turkmenistan"},{"key":"TC","label":"Turks and Caicos Islands"},{"key":"TV","label":"Tuvalu"},{"key":"UG","label":"Uganda"},{"key":"UA","label":"Ukraine"},{"key":"AE","label":"United Arab Emirates"},{"key":"GB","label":"United Kingdom"},{"key":"US","label":"United States"},{"key":"UM","label":"U.S. Outlying Islands"},{"key":"UY","label":"Uruguay"},{"key":"UZ","label":"Uzbekistan"},{"key":"VU","label":"Vanuatu"},{"key":"VA","label":"Vatican City"},{"key":"VE","label":"Venezuela"},{"key":"VN","label":"Vietnam"},{"key":"VG","label":"British Virgin Islands"},{"key":"VI","label":"U.S. Virgin Islands"},{"key":"WF","label":"Wallis and Futuna"},{"key":"EH","label":"Western Sahara"},{"key":"ZM","label":"Zambia"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AD","AE","AF","AG","AI","AL","AM","AN","AQ","AR","AS","AT","AU","AW","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BZ","CA","CC","CF","CH","CK","CL","CM","CN","CO","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EH","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GH","GL","GM","GN","GP","GQ","GR","GS","GU","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IS","IT","JM","JO","JP","KE","KG","KH","KI","KN","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MF","MG","MH","MK","ML","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PG","PH","PK","PL","PM","PN","PR","PT","PW","PY","RE","RO","RS","RU","RW","SB","SC","SE","SG","SH","SI","SJ","SK","SM","SN","SR","ST","SV","SX","SZ","TC","TD","TF","TG","TJ","TK","TL","TO","TR","TT","TV","TW","TZ","UA","UG","UM","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YT","ZM"],"currencies": ["USD"],"accountType": "WIRE_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "wireInstructions","label": "Additional Wire Instructions","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankId","label": "SWIFT Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"INTERMEDIARY_ACCOUNT": [{"key": "intermediaryBankId","label": "SWIFT Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "intermediaryBankAddressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankStateProvince","label": "State\/Province","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankName","label": "Bank Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "intermediaryBankCity","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankPostalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankCountry","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [{"key":"AF","label":"Afghanistan"},{"key":"AX","label":"\u00C5land Islands"},{"key":"AL","label":"Albania"},{"key":"DZ","label":"Algeria"},{"key":"AS","label":"American Samoa"},{"key":"AD","label":"Andorra"},{"key":"AO","label":"Angola"},{"key":"AI","label":"Anguilla"},{"key":"AQ","label":"Antarctica"},{"key":"AG","label":"Antigua and Barbuda"},{"key":"AR","label":"Argentina"},{"key":"AM","label":"Armenia"},{"key":"AW","label":"Aruba"},{"key":"AU","label":"Australia"},{"key":"AT","label":"Austria"},{"key":"AZ","label":"Azerbaijan"},{"key":"BS","label":"Bahamas"},{"key":"BH","label":"Bahrain"},{"key":"BD","label":"Bangladesh"},{"key":"BB","label":"Barbados"},{"key":"BE","label":"Belgium"},{"key":"BZ","label":"Belize"},{"key":"BJ","label":"Benin"},{"key":"BM","label":"Bermuda"},{"key":"BT","label":"Bhutan"},{"key":"BO","label":"Bolivia"},{"key":"BQ","label":"Caribbean Netherlands"},{"key":"BA","label":"Bosnia and Herzegovina"},{"key":"BW","label":"Botswana"},{"key":"BV","label":"Bouvet Island"},{"key":"BR","label":"Brazil"},{"key":"IO","label":"British Indian Ocean Territory"},{"key":"BN","label":"Brunei"},{"key":"BG","label":"Bulgaria"},{"key":"BF","label":"Burkina Faso"},{"key":"BI","label":"Burundi"},{"key":"KH","label":"Cambodia"},{"key":"CM","label":"Cameroon"},{"key":"CA","label":"Canada"},{"key":"CV","label":"Cape Verde"},{"key":"KY","label":"Cayman Islands"},{"key":"CF","label":"Central African Republic"},{"key":"TD","label":"Chad"},{"key":"CL","label":"Chile"},{"key":"CN","label":"China"},{"key":"CX","label":"Christmas Island"},{"key":"CC","label":"Cocos [Keeling] Islands"},{"key":"CO","label":"Colombia"},{"key":"KM","label":"Comoros"},{"key":"CG","label":"Congo - Brazzaville"},{"key":"CK","label":"Cook Islands"},{"key":"CR","label":"Costa Rica"},{"key":"HR","label":"Croatia"},{"key":"CW","label":"Cura\u00E7ao"},{"key":"CY","label":"Cyprus"},{"key":"CZ","label":"Czech Republic"},{"key":"DK","label":"Denmark"},{"key":"DJ","label":"Djibouti"},{"key":"DM","label":"Dominica"},{"key":"DO","label":"Dominican Republic"},{"key":"TL","label":"Timor-Leste"},{"key":"EC","label":"Ecuador"},{"key":"EG","label":"Egypt"},{"key":"SV","label":"El Salvador"},{"key":"GQ","label":"Equatorial Guinea"},{"key":"EE","label":"Estonia"},{"key":"ET","label":"Ethiopia"},{"key":"FK","label":"Falkland Islands"},{"key":"FO","label":"Faroe Islands"},{"key":"FJ","label":"Fiji"},{"key":"FI","label":"Finland"},{"key":"FR","label":"France"},{"key":"GF","label":"French Guiana"},{"key":"PF","label":"French Polynesia"},{"key":"TF","label":"French Southern Territories"},{"key":"GA","label":"Gabon"},{"key":"GM","label":"Gambia"},{"key":"GE","label":"Georgia"},{"key":"DE","label":"Germany"},{"key":"GH","label":"Ghana"},{"key":"GI","label":"Gibraltar"},{"key":"GR","label":"Greece"},{"key":"GL","label":"Greenland"},{"key":"GD","label":"Grenada"},{"key":"GP","label":"Guadeloupe"},{"key":"GU","label":"Guam"},{"key":"GT","label":"Guatemala"},{"key":"GG","label":"Guernsey"},{"key":"GN","label":"Guinea"},{"key":"GY","label":"Guyana"},{"key":"HT","label":"Haiti"},{"key":"HM","label":"Heard Island and McDonald Islands"},{"key":"HN","label":"Honduras"},{"key":"HK","label":"Hong Kong SAR China"},{"key":"HU","label":"Hungary"},{"key":"IS","label":"Iceland"},{"key":"IN","label":"India"},{"key":"ID","label":"Indonesia"},{"key":"IE","label":"Ireland"},{"key":"IM","label":"Isle of Man"},{"key":"IL","label":"Israel"},{"key":"IT","label":"Italy"},{"key":"JM","label":"Jamaica"},{"key":"JP","label":"Japan"},{"key":"JE","label":"Jersey"},{"key":"JO","label":"Jordan"},{"key":"KZ","label":"Kazakhstan"},{"key":"KE","label":"Kenya"},{"key":"KI","label":"Kiribati"},{"key":"KR","label":"South Korea"},{"key":"XK","label":"Kosovo"},{"key":"KW","label":"Kuwait"},{"key":"KG","label":"Kyrgyzstan"},{"key":"LA","label":"Laos"},{"key":"LV","label":"Latvia"},{"key":"LS","label":"Lesotho"},{"key":"LI","label":"Liechtenstein"},{"key":"LT","label":"Lithuania"},{"key":"LU","label":"Luxembourg"},{"key":"MO","label":"Macau SAR China"},{"key":"MK","label":"Macedonia"},{"key":"MG","label":"Madagascar"},{"key":"MW","label":"Malawi"},{"key":"MY","label":"Malaysia"},{"key":"MV","label":"Maldives"},{"key":"ML","label":"Mali"},{"key":"MT","label":"Malta"},{"key":"MH","label":"Marshall Islands"},{"key":"MQ","label":"Martinique"},{"key":"MR","label":"Mauritania"},{"key":"MU","label":"Mauritius"},{"key":"YT","label":"Mayotte"},{"key":"MX","label":"Mexico"},{"key":"FM","label":"Micronesia"},{"key":"MD","label":"Moldova"},{"key":"MC","label":"Monaco"},{"key":"MN","label":"Mongolia"},{"key":"ME","label":"Montenegro"},{"key":"MS","label":"Montserrat"},{"key":"MA","label":"Morocco"},{"key":"MZ","label":"Mozambique"},{"key":"NA","label":"Namibia"},{"key":"NR","label":"Nauru"},{"key":"NP","label":"Nepal"},{"key":"NL","label":"Netherlands"},{"key":"AN","label":"Netherlands Antilles"},{"key":"NC","label":"New Caledonia"},{"key":"NZ","label":"New Zealand"},{"key":"NI","label":"Nicaragua"},{"key":"NE","label":"Niger"},{"key":"NG","label":"Nigeria"},{"key":"NU","label":"Niue"},{"key":"NF","label":"Norfolk Island"},{"key":"MP","label":"Northern Mariana Islands"},{"key":"NO","label":"Norway"},{"key":"OM","label":"Oman"},{"key":"PK","label":"Pakistan"},{"key":"PW","label":"Palau"},{"key":"PA","label":"Panama"},{"key":"PG","label":"Papua New Guinea"},{"key":"PY","label":"Paraguay"},{"key":"PE","label":"Peru"},{"key":"PH","label":"Philippines"},{"key":"PN","label":"Pitcairn Islands"},{"key":"PL","label":"Poland"},{"key":"PT","label":"Portugal"},{"key":"PR","label":"Puerto Rico"},{"key":"QA","label":"Qatar"},{"key":"RE","label":"R\u00E9union"},{"key":"RO","label":"Romania"},{"key":"RU","label":"Russia"},{"key":"RW","label":"Rwanda"},{"key":"KN","label":"Saint Kitts and Nevis"},{"key":"LC","label":"Saint Lucia"},{"key":"MF","label":"Saint Martin"},{"key":"VC","label":"Saint Vincent and the Grenadines"},{"key":"WS","label":"Samoa"},{"key":"SM","label":"San Marino"},{"key":"ST","label":"S\u00E3o Tom\u00E9 and Pr\u00EDncipe"},{"key":"SA","label":"Saudi Arabia"},{"key":"SN","label":"Senegal"},{"key":"RS","label":"Serbia"},{"key":"SC","label":"Seychelles"},{"key":"SL","label":"Sierra Leone"},{"key":"SG","label":"Singapore"},{"key":"SX","label":"Sint Maarten"},{"key":"SK","label":"Slovakia"},{"key":"SI","label":"Slovenia"},{"key":"SB","label":"Solomon Islands"},{"key":"ZA","label":"South Africa"},{"key":"GS","label":"South Georgia and the South Sandwich Islands"},{"key":"SS","label":"South Sudan"},{"key":"ES","label":"Spain"},{"key":"LK","label":"Sri Lanka"},{"key":"BL","label":"Saint Barth\u00E9lemy"},{"key":"SH","label":"Saint Helena"},{"key":"PM","label":"Saint Pierre and Miquelon"},{"key":"SR","label":"Suriname"},{"key":"SJ","label":"Svalbard and Jan Mayen"},{"key":"SZ","label":"Swaziland"},{"key":"SE","label":"Sweden"},{"key":"CH","label":"Switzerland"},{"key":"TW","label":"Taiwan"},{"key":"TJ","label":"Tajikistan"},{"key":"TZ","label":"Tanzania"},{"key":"TH","label":"Thailand"},{"key":"TG","label":"Togo"},{"key":"TK","label":"Tokelau"},{"key":"TO","label":"Tonga"},{"key":"TT","label":"Trinidad and Tobago"},{"key":"TN","label":"Tunisia"},{"key":"TR","label":"Turkey"},{"key":"TM","label":"Turkmenistan"},{"key":"TC","label":"Turks and Caicos Islands"},{"key":"TV","label":"Tuvalu"},{"key":"UG","label":"Uganda"},{"key":"UA","label":"Ukraine"},{"key":"AE","label":"United Arab Emirates"},{"key":"GB","label":"United Kingdom"},{"key":"US","label":"United States"},{"key":"UM","label":"U.S. Outlying Islands"},{"key":"UY","label":"Uruguay"},{"key":"UZ","label":"Uzbekistan"},{"key":"VU","label":"Vanuatu"},{"key":"VA","label":"Vatican City"},{"key":"VE","label":"Venezuela"},{"key":"VN","label":"Vietnam"},{"key":"VG","label":"British Virgin Islands"},{"key":"VI","label":"U.S. Virgin Islands"},{"key":"WF","label":"Wallis and Futuna"},{"key":"EH","label":"Western Sahara"},{"key":"ZM","label":"Zambia"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}},{"key": "passportId","label": "Passport Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AD","AE","AF","AG","AI","AL","AM","AN","AQ","AR","AS","AT","AU","AW","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BZ","CA","CC","CF","CH","CK","CL","CM","CN","CO","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EH","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GH","GL","GM","GN","GP","GQ","GR","GS","GU","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IS","IT","JM","JO","JP","KE","KG","KH","KI","KN","KW","KY","KZ","LA","LC","LI","LK","LS","LT","LU","LV","MA","MC","MD","ME","MF","MG","MH","MK","ML","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PG","PH","PK","PL","PM","PN","PR","PT","PW","PY","RE","RO","RS","RU","RW","SB","SC","SE","SG","SH","SI","SJ","SK","SM","SN","SR","ST","SV","SX","SZ","TC","TD","TF","TG","TJ","TK","TL","TO","TR","TT","TV","TW","TZ","UA","UG","UM","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","YT","ZM"],"currencies": ["USD"],"accountType": "WIRE_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "wireInstructions","label": "Additional Wire Instructions","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 34) {errors.push("The maximum length of this field is 34.");}return errors;}},{"key": "bankId","label": "SWIFT Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"INTERMEDIARY_ACCOUNT": [{"key": "intermediaryBankId","label": "SWIFT Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})$", value)) {errors.push("is invalid");}if (value.trim().length < 11) {errors.push("The minimum length of this field is 11.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "intermediaryBankAddressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankStateProvince","label": "State\/Province","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankName","label": "Bank Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankAccountId","label": "Account Number OR IBAN","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^[\\sa-zA-Z_0-9]{1,31}$", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "intermediaryBankCity","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 35) {errors.push("The maximum length of this field is 35.");}return errors;}},{"key": "intermediaryBankPostalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}if (value.trim().length < 1) {errors.push("The minimum length of this field is 1.");}if (value.trim().length > 16) {errors.push("The maximum length of this field is 16.");}return errors;}},{"key": "intermediaryBankCountry","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [{"key":"AF","label":"Afghanistan"},{"key":"AX","label":"\u00C5land Islands"},{"key":"AL","label":"Albania"},{"key":"DZ","label":"Algeria"},{"key":"AS","label":"American Samoa"},{"key":"AD","label":"Andorra"},{"key":"AO","label":"Angola"},{"key":"AI","label":"Anguilla"},{"key":"AQ","label":"Antarctica"},{"key":"AG","label":"Antigua and Barbuda"},{"key":"AR","label":"Argentina"},{"key":"AM","label":"Armenia"},{"key":"AW","label":"Aruba"},{"key":"AU","label":"Australia"},{"key":"AT","label":"Austria"},{"key":"AZ","label":"Azerbaijan"},{"key":"BS","label":"Bahamas"},{"key":"BH","label":"Bahrain"},{"key":"BD","label":"Bangladesh"},{"key":"BB","label":"Barbados"},{"key":"BE","label":"Belgium"},{"key":"BZ","label":"Belize"},{"key":"BJ","label":"Benin"},{"key":"BM","label":"Bermuda"},{"key":"BT","label":"Bhutan"},{"key":"BO","label":"Bolivia"},{"key":"BQ","label":"Caribbean Netherlands"},{"key":"BA","label":"Bosnia and Herzegovina"},{"key":"BW","label":"Botswana"},{"key":"BV","label":"Bouvet Island"},{"key":"BR","label":"Brazil"},{"key":"IO","label":"British Indian Ocean Territory"},{"key":"BN","label":"Brunei"},{"key":"BG","label":"Bulgaria"},{"key":"BF","label":"Burkina Faso"},{"key":"BI","label":"Burundi"},{"key":"KH","label":"Cambodia"},{"key":"CM","label":"Cameroon"},{"key":"CA","label":"Canada"},{"key":"CV","label":"Cape Verde"},{"key":"KY","label":"Cayman Islands"},{"key":"CF","label":"Central African Republic"},{"key":"TD","label":"Chad"},{"key":"CL","label":"Chile"},{"key":"CN","label":"China"},{"key":"CX","label":"Christmas Island"},{"key":"CC","label":"Cocos [Keeling] Islands"},{"key":"CO","label":"Colombia"},{"key":"KM","label":"Comoros"},{"key":"CG","label":"Congo - Brazzaville"},{"key":"CK","label":"Cook Islands"},{"key":"CR","label":"Costa Rica"},{"key":"HR","label":"Croatia"},{"key":"CW","label":"Cura\u00E7ao"},{"key":"CY","label":"Cyprus"},{"key":"CZ","label":"Czech Republic"},{"key":"DK","label":"Denmark"},{"key":"DJ","label":"Djibouti"},{"key":"DM","label":"Dominica"},{"key":"DO","label":"Dominican Republic"},{"key":"TL","label":"Timor-Leste"},{"key":"EC","label":"Ecuador"},{"key":"EG","label":"Egypt"},{"key":"SV","label":"El Salvador"},{"key":"GQ","label":"Equatorial Guinea"},{"key":"EE","label":"Estonia"},{"key":"ET","label":"Ethiopia"},{"key":"FK","label":"Falkland Islands"},{"key":"FO","label":"Faroe Islands"},{"key":"FJ","label":"Fiji"},{"key":"FI","label":"Finland"},{"key":"FR","label":"France"},{"key":"GF","label":"French Guiana"},{"key":"PF","label":"French Polynesia"},{"key":"TF","label":"French Southern Territories"},{"key":"GA","label":"Gabon"},{"key":"GM","label":"Gambia"},{"key":"GE","label":"Georgia"},{"key":"DE","label":"Germany"},{"key":"GH","label":"Ghana"},{"key":"GI","label":"Gibraltar"},{"key":"GR","label":"Greece"},{"key":"GL","label":"Greenland"},{"key":"GD","label":"Grenada"},{"key":"GP","label":"Guadeloupe"},{"key":"GU","label":"Guam"},{"key":"GT","label":"Guatemala"},{"key":"GG","label":"Guernsey"},{"key":"GN","label":"Guinea"},{"key":"GY","label":"Guyana"},{"key":"HT","label":"Haiti"},{"key":"HM","label":"Heard Island and McDonald Islands"},{"key":"HN","label":"Honduras"},{"key":"HK","label":"Hong Kong SAR China"},{"key":"HU","label":"Hungary"},{"key":"IS","label":"Iceland"},{"key":"IN","label":"India"},{"key":"ID","label":"Indonesia"},{"key":"IE","label":"Ireland"},{"key":"IM","label":"Isle of Man"},{"key":"IL","label":"Israel"},{"key":"IT","label":"Italy"},{"key":"JM","label":"Jamaica"},{"key":"JP","label":"Japan"},{"key":"JE","label":"Jersey"},{"key":"JO","label":"Jordan"},{"key":"KZ","label":"Kazakhstan"},{"key":"KE","label":"Kenya"},{"key":"KI","label":"Kiribati"},{"key":"KR","label":"South Korea"},{"key":"XK","label":"Kosovo"},{"key":"KW","label":"Kuwait"},{"key":"KG","label":"Kyrgyzstan"},{"key":"LA","label":"Laos"},{"key":"LV","label":"Latvia"},{"key":"LS","label":"Lesotho"},{"key":"LI","label":"Liechtenstein"},{"key":"LT","label":"Lithuania"},{"key":"LU","label":"Luxembourg"},{"key":"MO","label":"Macau SAR China"},{"key":"MK","label":"Macedonia"},{"key":"MG","label":"Madagascar"},{"key":"MW","label":"Malawi"},{"key":"MY","label":"Malaysia"},{"key":"MV","label":"Maldives"},{"key":"ML","label":"Mali"},{"key":"MT","label":"Malta"},{"key":"MH","label":"Marshall Islands"},{"key":"MQ","label":"Martinique"},{"key":"MR","label":"Mauritania"},{"key":"MU","label":"Mauritius"},{"key":"YT","label":"Mayotte"},{"key":"MX","label":"Mexico"},{"key":"FM","label":"Micronesia"},{"key":"MD","label":"Moldova"},{"key":"MC","label":"Monaco"},{"key":"MN","label":"Mongolia"},{"key":"ME","label":"Montenegro"},{"key":"MS","label":"Montserrat"},{"key":"MA","label":"Morocco"},{"key":"MZ","label":"Mozambique"},{"key":"NA","label":"Namibia"},{"key":"NR","label":"Nauru"},{"key":"NP","label":"Nepal"},{"key":"NL","label":"Netherlands"},{"key":"AN","label":"Netherlands Antilles"},{"key":"NC","label":"New Caledonia"},{"key":"NZ","label":"New Zealand"},{"key":"NI","label":"Nicaragua"},{"key":"NE","label":"Niger"},{"key":"NG","label":"Nigeria"},{"key":"NU","label":"Niue"},{"key":"NF","label":"Norfolk Island"},{"key":"MP","label":"Northern Mariana Islands"},{"key":"NO","label":"Norway"},{"key":"OM","label":"Oman"},{"key":"PK","label":"Pakistan"},{"key":"PW","label":"Palau"},{"key":"PA","label":"Panama"},{"key":"PG","label":"Papua New Guinea"},{"key":"PY","label":"Paraguay"},{"key":"PE","label":"Peru"},{"key":"PH","label":"Philippines"},{"key":"PN","label":"Pitcairn Islands"},{"key":"PL","label":"Poland"},{"key":"PT","label":"Portugal"},{"key":"PR","label":"Puerto Rico"},{"key":"QA","label":"Qatar"},{"key":"RE","label":"R\u00E9union"},{"key":"RO","label":"Romania"},{"key":"RU","label":"Russia"},{"key":"RW","label":"Rwanda"},{"key":"KN","label":"Saint Kitts and Nevis"},{"key":"LC","label":"Saint Lucia"},{"key":"MF","label":"Saint Martin"},{"key":"VC","label":"Saint Vincent and the Grenadines"},{"key":"WS","label":"Samoa"},{"key":"SM","label":"San Marino"},{"key":"ST","label":"S\u00E3o Tom\u00E9 and Pr\u00EDncipe"},{"key":"SA","label":"Saudi Arabia"},{"key":"SN","label":"Senegal"},{"key":"RS","label":"Serbia"},{"key":"SC","label":"Seychelles"},{"key":"SL","label":"Sierra Leone"},{"key":"SG","label":"Singapore"},{"key":"SX","label":"Sint Maarten"},{"key":"SK","label":"Slovakia"},{"key":"SI","label":"Slovenia"},{"key":"SB","label":"Solomon Islands"},{"key":"ZA","label":"South Africa"},{"key":"GS","label":"South Georgia and the South Sandwich Islands"},{"key":"SS","label":"South Sudan"},{"key":"ES","label":"Spain"},{"key":"LK","label":"Sri Lanka"},{"key":"BL","label":"Saint Barth\u00E9lemy"},{"key":"SH","label":"Saint Helena"},{"key":"PM","label":"Saint Pierre and Miquelon"},{"key":"SR","label":"Suriname"},{"key":"SJ","label":"Svalbard and Jan Mayen"},{"key":"SZ","label":"Swaziland"},{"key":"SE","label":"Sweden"},{"key":"CH","label":"Switzerland"},{"key":"TW","label":"Taiwan"},{"key":"TJ","label":"Tajikistan"},{"key":"TZ","label":"Tanzania"},{"key":"TH","label":"Thailand"},{"key":"TG","label":"Togo"},{"key":"TK","label":"Tokelau"},{"key":"TO","label":"Tonga"},{"key":"TT","label":"Trinidad and Tobago"},{"key":"TN","label":"Tunisia"},{"key":"TR","label":"Turkey"},{"key":"TM","label":"Turkmenistan"},{"key":"TC","label":"Turks and Caicos Islands"},{"key":"TV","label":"Tuvalu"},{"key":"UG","label":"Uganda"},{"key":"UA","label":"Ukraine"},{"key":"AE","label":"United Arab Emirates"},{"key":"GB","label":"United Kingdom"},{"key":"US","label":"United States"},{"key":"UM","label":"U.S. Outlying Islands"},{"key":"UY","label":"Uruguay"},{"key":"UZ","label":"Uzbekistan"},{"key":"VU","label":"Vanuatu"},{"key":"VA","label":"Vatican City"},{"key":"VE","label":"Venezuela"},{"key":"VN","label":"Vietnam"},{"key":"VG","label":"British Virgin Islands"},{"key":"VI","label":"U.S. Virgin Islands"},{"key":"WF","label":"Wallis and Futuna"},{"key":"EH","label":"Western Sahara"},{"key":"ZM","label":"Zambia"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "businessRegistrationId","label": "Business Reg Number","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}-]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AD"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AD"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AX"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["AX"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BG"],"currencies": ["BGN","EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BG"],"currencies": ["BGN","EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BL"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["BL"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CH"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CH"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CY"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CY"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CZ"],"currencies": ["CZK","EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["CZ"],"currencies": ["CZK","EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["DE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["DE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["DK"],"currencies": ["DKK","EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["DK"],"currencies": ["DKK","EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["EE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["EE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["ES"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["ES"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["FI"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["FI"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["FR"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["FR"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GB"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GB"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GF"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GF"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GI"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GI"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GP"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GP"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GR"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["GR"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["HR"],"currencies": ["EUR","HRK"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["HR"],"currencies": ["EUR","HRK"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["HU"],"currencies": ["EUR","HUF"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["HU"],"currencies": ["EUR","HUF"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IS"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IS"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["IT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["LT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["LT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["LU"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["LU"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["LV"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["LV"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MC"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MC"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MF"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MF"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MQ"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MQ"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["MT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NL"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NL"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NO"],"currencies": ["EUR","NOK"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["NO"],"currencies": ["EUR","NOK"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PL"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PL"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PM"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PM"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["PT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["RE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["RE"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["RO"],"currencies": ["EUR","RON"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["RO"],"currencies": ["EUR","RON"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SE"],"currencies": ["EUR","SEK"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SE"],"currencies": ["EUR","SEK"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SI"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SI"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SK"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SK"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SM"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["SM"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["VA"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["VA"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["YT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"JOINT_ACCOUNT","label":"Joint bank account"},{"key":"SPOUSE","label":"Spouse"},{"key":"RELATIVE","label":"Relative"},{"key":"BUSINESS_PARTNER","label":"Business partner"},{"key":"UPLINE","label":"Upline"},{"key":"DOWNLINE","label":"Downline"},{"key":"SELF","label":"Self"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "firstName","label": "First Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "middleName","label": "Middle Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "lastName","label": "Last Name","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["YT"],"currencies": ["EUR"],"accountType": "BANK_ACCOUNT","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "bankId","label": "BIC Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^([a-zA-Z]){4}([a-zA-Z]){2}([0-9a-zA-Z]){2}([0-9a-zA-Z]{3})?$", value)) {errors.push("is invalid");}if (value.trim().length < 8) {errors.push("The minimum length of this field is 8.");}if (value.trim().length > 11) {errors.push("The maximum length of this field is 11.");}return errors;}},{"key": "bankAccountId","label": "IBAN Number","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[a-zA-Z]{2}[0-9]{2}[a-zA-Z0-9]{4}[0-9]{7}([a-zA-Z0-9]?){0,16}", value)) {errors.push("is invalid");}if (value.trim().length < 15) {errors.push("The minimum length of this field is 15.");}if (value.trim().length > 31) {errors.push("The maximum length of this field is 31.");}return errors;}},{"key": "bankAccountRelationship","label": "Relationship","type": "select","isRequired": true,"isVisible": true,"choices": [{"key":"OWN_COMPANY","label":"Own company"},{"key":"BILL_PAYMENT","label":"Bill payment"},{"key":"OTHER","label":"Other"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;}}],"PROFILE": [{"key": "businessName","label": "Business Name","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "phoneNumber","label": "Phone Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "mobileNumber","label": "Mobile Number","type": "text.number","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[\\d\\ -.()]{8,21}", value)) {errors.push("is invalid");}return errors;}},{"key": "dateOfBirth","label": "Date of Birth","type": "date","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": false,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": false,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[(\\p{L}\\p{M}*)\\p{Z}\\p{S}\\p{N}\\p{P}\\p{C}]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": false,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\p{Nd}\\p{L}\\p{Z}]+", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["US"],"currencies": ["USD"],"accountType": "CASH_PICKUP_MG","profileType": "INDIVIDUAL","fields": {}},{"countries": ["US"],"currencies": ["USD"],"accountType": "CASH_PICKUP_MG","profileType": "BUSINESS","fields": {}},{"countries": ["US"],"currencies": ["USD"],"accountType": "PAPER_CHECK","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "shippingMethod","label": "Shipping Method","type": "select","isRequired": false,"isVisible": true,"choices": [{"key":"STANDARD","label":"Standard Mail"},{"key":"EXPEDITED","label":"Expedited Delivery"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[A-Z]{2}", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[A-Z]{2}", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[A-Z]{2}", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\sa-zA-Z0-9\/\\-?:().,+]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\sa-zA-Z0-9\/\\-?:().,+]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[0-9]{5}||([0-9]{5}-[0-9]{4})", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["US"],"currencies": ["USD"],"accountType": "PAPER_CHECK","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "shippingMethod","label": "Shipping Method","type": "select","isRequired": false,"isVisible": true,"choices": [{"key":"STANDARD","label":"Standard Mail"},{"key":"EXPEDITED","label":"Expedited Delivery"}],"validate": function(value, state) {if (!value || value.trim().length === 0) {return;}var errors = [];return errors;}}],"ADDRESS": [{"key": "country","label": "Country","type": "select","isRequired": true,"isVisible": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];return errors;},"onSet": function (value, state) {state.set("stateProvince", undefined);},"unpack": "COUNTRY"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[A-Z]{2}", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "CA";},"keepStateIfInvisible": true,"unpack": "CA"},{"key": "stateProvince","label": "State\/Province","type": "select","isRequired": true,"choices": [],"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[A-Z]{2}", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country === "US";},"keepStateIfInvisible": true,"unpack": "US"},{"key": "stateProvince","label": "State\/Province","type": "text","isRequired": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[A-Z]{2}", value)) {errors.push("is invalid");}return errors;},"isVisible": function (value, state) {return state.country !== "CA" && state.country !== "US";},"keepStateIfInvisible": true},{"key": "addressLine1","label": "Street","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\sa-zA-Z0-9\/\\-?:().,+]+", value)) {errors.push("is invalid");}return errors;}},{"key": "city","label": "City","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[\\sa-zA-Z0-9\/\\-?:().,+]+", value)) {errors.push("is invalid");}return errors;}},{"key": "postalCode","label": "Zip\/Postal Code","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("^$||[0-9]{5}||([0-9]{5}-[0-9]{4})", value)) {errors.push("is invalid");}return errors;}}]}},{"countries": ["US"],"currencies": ["USD"],"accountType": "BANK_CARD","profileType": "INDIVIDUAL","fields": {"ACCOUNT": [{"key": "dateOfExpiry","label": "Expiry Date (YYYY-MM)","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}-(1[0-2]|0[1-9])", value)) {errors.push("is invalid");}if (value.trim().length < 7) {errors.push("The minimum length of this field is 7.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "cardNumber","label": "Card Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{13,19}", value)) {errors.push("is invalid");}if (value.trim().length < 13) {errors.push("The minimum length of this field is 13.");}if (value.trim().length > 19) {errors.push("The maximum length of this field is 19.");}return errors;}}]}},{"countries": ["US"],"currencies": ["USD"],"accountType": "BANK_CARD","profileType": "BUSINESS","fields": {"ACCOUNT": [{"key": "dateOfExpiry","label": "Expiry Date (YYYY-MM)","type": "text","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{4}-(1[0-2]|0[1-9])", value)) {errors.push("is invalid");}if (value.trim().length < 7) {errors.push("The minimum length of this field is 7.");}if (value.trim().length > 7) {errors.push("The maximum length of this field is 7.");}return errors;}},{"key": "cardNumber","label": "Card Number","type": "text.number","isRequired": true,"isVisible": true,"validate": function(value, state) {if (!value || value.trim().length === 0) {return "You must provide a value for this field";}var errors = [];if (!HWWidgets.Sdk.xRegExp.doMatchRegex("[0-9]{13,19}", value)) {errors.push("is invalid");}if (value.trim().length < 13) {errors.push("The minimum length of this field is 13.");}if (value.trim().length > 19) {errors.push("The maximum length of this field is 19.");}return errors;}}]}}];var countries = [{"key":"AF","label":"Afghanistan"},{"key":"AX","label":"\u00C5land Islands"},{"key":"AL","label":"Albania"},{"key":"DZ","label":"Algeria"},{"key":"AS","label":"American Samoa"},{"key":"AD","label":"Andorra"},{"key":"AO","label":"Angola"},{"key":"AI","label":"Anguilla"},{"key":"AQ","label":"Antarctica"},{"key":"AG","label":"Antigua and Barbuda"},{"key":"AR","label":"Argentina"},{"key":"AM","label":"Armenia"},{"key":"AW","label":"Aruba"},{"key":"AU","label":"Australia"},{"key":"AT","label":"Austria"},{"key":"AZ","label":"Azerbaijan"},{"key":"BS","label":"Bahamas"},{"key":"BH","label":"Bahrain"},{"key":"BD","label":"Bangladesh"},{"key":"BB","label":"Barbados"},{"key":"BE","label":"Belgium"},{"key":"BZ","label":"Belize"},{"key":"BJ","label":"Benin"},{"key":"BM","label":"Bermuda"},{"key":"BT","label":"Bhutan"},{"key":"BO","label":"Bolivia"},{"key":"BQ","label":"Caribbean Netherlands"},{"key":"BA","label":"Bosnia and Herzegovina"},{"key":"BW","label":"Botswana"},{"key":"BV","label":"Bouvet Island"},{"key":"BR","label":"Brazil"},{"key":"IO","label":"British Indian Ocean Territory"},{"key":"BN","label":"Brunei"},{"key":"BG","label":"Bulgaria"},{"key":"BF","label":"Burkina Faso"},{"key":"BI","label":"Burundi"},{"key":"KH","label":"Cambodia"},{"key":"CM","label":"Cameroon"},{"key":"CA","label":"Canada"},{"key":"CV","label":"Cape Verde"},{"key":"KY","label":"Cayman Islands"},{"key":"CF","label":"Central African Republic"},{"key":"TD","label":"Chad"},{"key":"CL","label":"Chile"},{"key":"CN","label":"China"},{"key":"CX","label":"Christmas Island"},{"key":"CC","label":"Cocos [Keeling] Islands"},{"key":"CO","label":"Colombia"},{"key":"KM","label":"Comoros"},{"key":"CG","label":"Congo - Brazzaville"},{"key":"CK","label":"Cook Islands"},{"key":"CR","label":"Costa Rica"},{"key":"HR","label":"Croatia"},{"key":"CW","label":"Cura\u00E7ao"},{"key":"CY","label":"Cyprus"},{"key":"CZ","label":"Czech Republic"},{"key":"DK","label":"Denmark"},{"key":"DJ","label":"Djibouti"},{"key":"DM","label":"Dominica"},{"key":"DO","label":"Dominican Republic"},{"key":"TL","label":"Timor-Leste"},{"key":"EC","label":"Ecuador"},{"key":"EG","label":"Egypt"},{"key":"SV","label":"El Salvador"},{"key":"GQ","label":"Equatorial Guinea"},{"key":"EE","label":"Estonia"},{"key":"ET","label":"Ethiopia"},{"key":"FK","label":"Falkland Islands"},{"key":"FO","label":"Faroe Islands"},{"key":"FJ","label":"Fiji"},{"key":"FI","label":"Finland"},{"key":"FR","label":"France"},{"key":"GF","label":"French Guiana"},{"key":"PF","label":"French Polynesia"},{"key":"TF","label":"French Southern Territories"},{"key":"GA","label":"Gabon"},{"key":"GM","label":"Gambia"},{"key":"GE","label":"Georgia"},{"key":"DE","label":"Germany"},{"key":"GH","label":"Ghana"},{"key":"GI","label":"Gibraltar"},{"key":"GR","label":"Greece"},{"key":"GL","label":"Greenland"},{"key":"GD","label":"Grenada"},{"key":"GP","label":"Guadeloupe"},{"key":"GU","label":"Guam"},{"key":"GT","label":"Guatemala"},{"key":"GG","label":"Guernsey"},{"key":"GN","label":"Guinea"},{"key":"GY","label":"Guyana"},{"key":"HT","label":"Haiti"},{"key":"HM","label":"Heard Island and McDonald Islands"},{"key":"HN","label":"Honduras"},{"key":"HK","label":"Hong Kong SAR China"},{"key":"HU","label":"Hungary"},{"key":"IS","label":"Iceland"},{"key":"IN","label":"India"},{"key":"ID","label":"Indonesia"},{"key":"IE","label":"Ireland"},{"key":"IM","label":"Isle of Man"},{"key":"IL","label":"Israel"},{"key":"IT","label":"Italy"},{"key":"JM","label":"Jamaica"},{"key":"JP","label":"Japan"},{"key":"JE","label":"Jersey"},{"key":"JO","label":"Jordan"},{"key":"KZ","label":"Kazakhstan"},{"key":"KE","label":"Kenya"},{"key":"KI","label":"Kiribati"},{"key":"KR","label":"South Korea"},{"key":"XK","label":"Kosovo"},{"key":"KW","label":"Kuwait"},{"key":"KG","label":"Kyrgyzstan"},{"key":"LA","label":"Laos"},{"key":"LV","label":"Latvia"},{"key":"LS","label":"Lesotho"},{"key":"LI","label":"Liechtenstein"},{"key":"LT","label":"Lithuania"},{"key":"LU","label":"Luxembourg"},{"key":"MO","label":"Macau SAR China"},{"key":"MK","label":"Macedonia"},{"key":"MG","label":"Madagascar"},{"key":"MW","label":"Malawi"},{"key":"MY","label":"Malaysia"},{"key":"MV","label":"Maldives"},{"key":"ML","label":"Mali"},{"key":"MT","label":"Malta"},{"key":"MH","label":"Marshall Islands"},{"key":"MQ","label":"Martinique"},{"key":"MR","label":"Mauritania"},{"key":"MU","label":"Mauritius"},{"key":"YT","label":"Mayotte"},{"key":"MX","label":"Mexico"},{"key":"FM","label":"Micronesia"},{"key":"MD","label":"Moldova"},{"key":"MC","label":"Monaco"},{"key":"MN","label":"Mongolia"},{"key":"ME","label":"Montenegro"},{"key":"MS","label":"Montserrat"},{"key":"MA","label":"Morocco"},{"key":"MZ","label":"Mozambique"},{"key":"NA","label":"Namibia"},{"key":"NR","label":"Nauru"},{"key":"NP","label":"Nepal"},{"key":"NL","label":"Netherlands"},{"key":"AN","label":"Netherlands Antilles"},{"key":"NC","label":"New Caledonia"},{"key":"NZ","label":"New Zealand"},{"key":"NI","label":"Nicaragua"},{"key":"NE","label":"Niger"},{"key":"NG","label":"Nigeria"},{"key":"NU","label":"Niue"},{"key":"NF","label":"Norfolk Island"},{"key":"MP","label":"Northern Mariana Islands"},{"key":"NO","label":"Norway"},{"key":"OM","label":"Oman"},{"key":"PK","label":"Pakistan"},{"key":"PW","label":"Palau"},{"key":"PA","label":"Panama"},{"key":"PG","label":"Papua New Guinea"},{"key":"PY","label":"Paraguay"},{"key":"PE","label":"Peru"},{"key":"PH","label":"Philippines"},{"key":"PN","label":"Pitcairn Islands"},{"key":"PL","label":"Poland"},{"key":"PT","label":"Portugal"},{"key":"PR","label":"Puerto Rico"},{"key":"QA","label":"Qatar"},{"key":"RE","label":"R\u00E9union"},{"key":"RO","label":"Romania"},{"key":"RU","label":"Russia"},{"key":"RW","label":"Rwanda"},{"key":"KN","label":"Saint Kitts and Nevis"},{"key":"LC","label":"Saint Lucia"},{"key":"MF","label":"Saint Martin"},{"key":"VC","label":"Saint Vincent and the Grenadines"},{"key":"WS","label":"Samoa"},{"key":"SM","label":"San Marino"},{"key":"ST","label":"S\u00E3o Tom\u00E9 and Pr\u00EDncipe"},{"key":"SA","label":"Saudi Arabia"},{"key":"SN","label":"Senegal"},{"key":"RS","label":"Serbia"},{"key":"SC","label":"Seychelles"},{"key":"SL","label":"Sierra Leone"},{"key":"SG","label":"Singapore"},{"key":"SX","label":"Sint Maarten"},{"key":"SK","label":"Slovakia"},{"key":"SI","label":"Slovenia"},{"key":"SB","label":"Solomon Islands"},{"key":"ZA","label":"South Africa"},{"key":"GS","label":"South Georgia and the South Sandwich Islands"},{"key":"SS","label":"South Sudan"},{"key":"ES","label":"Spain"},{"key":"LK","label":"Sri Lanka"},{"key":"BL","label":"Saint Barth\u00E9lemy"},{"key":"SH","label":"Saint Helena"},{"key":"PM","label":"Saint Pierre and Miquelon"},{"key":"SR","label":"Suriname"},{"key":"SJ","label":"Svalbard and Jan Mayen"},{"key":"SZ","label":"Swaziland"},{"key":"SE","label":"Sweden"},{"key":"CH","label":"Switzerland"},{"key":"TW","label":"Taiwan"},{"key":"TJ","label":"Tajikistan"},{"key":"TZ","label":"Tanzania"},{"key":"TH","label":"Thailand"},{"key":"TG","label":"Togo"},{"key":"TK","label":"Tokelau"},{"key":"TO","label":"Tonga"},{"key":"TT","label":"Trinidad and Tobago"},{"key":"TN","label":"Tunisia"},{"key":"TR","label":"Turkey"},{"key":"TM","label":"Turkmenistan"},{"key":"TC","label":"Turks and Caicos Islands"},{"key":"TV","label":"Tuvalu"},{"key":"UG","label":"Uganda"},{"key":"UA","label":"Ukraine"},{"key":"AE","label":"United Arab Emirates"},{"key":"GB","label":"United Kingdom"},{"key":"US","label":"United States"},{"key":"UM","label":"U.S. Outlying Islands"},{"key":"UY","label":"Uruguay"},{"key":"UZ","label":"Uzbekistan"},{"key":"VU","label":"Vanuatu"},{"key":"VA","label":"Vatican City"},{"key":"VE","label":"Venezuela"},{"key":"VN","label":"Vietnam"},{"key":"VG","label":"British Virgin Islands"},{"key":"VI","label":"U.S. Virgin Islands"},{"key":"WF","label":"Wallis and Futuna"},{"key":"EH","label":"Western Sahara"},{"key":"ZM","label":"Zambia"}];var stateProvUS=[{"key":"AL","label":"Alabama"},{"key":"AK","label":"Alaska"},{"key":"AS","label":"American Samoa"},{"key":"AZ","label":"Arizona"},{"key":"AR","label":"Arkansas"},{"key":"CA","label":"California"},{"key":"CO","label":"Colorado"},{"key":"CT","label":"Connecticut"},{"key":"DE","label":"Delaware"},{"key":"DC","label":"District of Columbia"},{"key":"FM","label":"Federated States of Micronesia"},{"key":"FL","label":"Florida"},{"key":"GA","label":"Georgia"},{"key":"GU","label":"Guam"},{"key":"HI","label":"Hawaii"},{"key":"ID","label":"Idaho"},{"key":"IL","label":"Illinois"},{"key":"IN","label":"Indiana"},{"key":"IA","label":"Iowa"},{"key":"KS","label":"Kansas"},{"key":"KY","label":"Kentucky"},{"key":"LA","label":"Louisiana"},{"key":"ME","label":"Maine"},{"key":"MH","label":"Marshall Islands"},{"key":"MD","label":"Maryland"},{"key":"MA","label":"Massachusetts"},{"key":"MI","label":"Michigan"},{"key":"MN","label":"Minnesota"},{"key":"MS","label":"Mississippi"},{"key":"MO","label":"Missouri"},{"key":"MT","label":"Montana"},{"key":"NE","label":"Nebraska"},{"key":"NV","label":"Nevada"},{"key":"NH","label":"New Hampshire"},{"key":"NJ","label":"New Jersey"},{"key":"NM","label":"New Mexico"},{"key":"NY","label":"New York"},{"key":"NC","label":"North Carolina"},{"key":"ND","label":"North Dakota"},{"key":"MP","label":"Northern Mariana Islands"},{"key":"OH","label":"Ohio"},{"key":"OK","label":"Oklahoma"},{"key":"OR","label":"Oregon"},{"key":"PW","label":"Palau"},{"key":"PA","label":"Pennsylvania"},{"key":"PR","label":"Puerto Rico"},{"key":"RI","label":"Rhode Island"},{"key":"SC","label":"South Carolina"},{"key":"SD","label":"South Dakota"},{"key":"TN","label":"Tennessee"},{"key":"TX","label":"Texas"},{"key":"UT","label":"Utah"},{"key":"VT","label":"Vermont"},{"key":"VI","label":"Virgin Islands"},{"key":"VA","label":"Virginia"},{"key":"WA","label":"Washington"},{"key":"WV","label":"West Virginia"},{"key":"WI","label":"Wisconsin"},{"key":"WY","label":"Wyoming"},{"key":"AA","label":"US Military Atlantic"},{"key":"AP","label":"US Military Pacific"},{"key":"AE","label":"US Military Europe"}];var stateProvCA=[{"key":"AB","label":"Alberta"},{"key":"BC","label":"British Columbia"},{"key":"MB","label":"Manitoba"},{"key":"NB","label":"New Brunswick"},{"key":"NL","label":"Newfoundland and Labrador"},{"key":"NT","label":"Northwest Territories"},{"key":"NS","label":"Nova Scotia"},{"key":"NU","label":"Nunavut"},{"key":"ON","label":"Ontario"},{"key":"PE","label":"Prince Edward Island"},{"key":"QC","label":"Quebec"},{"key":"SK","label":"Saskatchewan"},{"key":"YT","label":"Yukon"}];for (var c=0; c<configurations.length; c++) {for (var category in configurations[c].fields) {if (configurations[c].fields.hasOwnProperty(category)) {for (var f=0; f<configurations[c].fields[category].length; f++) {var field = configurations[c].fields[category][f];if (field.type === "select" && field.choices.length === 0 && field.unpack) {if (field.unpack === "CA") {field.choices = stateProvCA;}else if (field.unpack === "US") {field.choices = stateProvUS;}else if (field.unpack === "COUNTRY") {field.choices = countries;}}}}}}HWWidgets.Sdk.transferMethods.initConfigurations(configurations);}HWWidgets.Sdk.initTranslation({"submit": "Submit","pleaseSelect": "Please Select...","isRequired": "You must provide a value for this field","ROUTER": "Select Transfer Method","country": "Country","currency": "Currency","accountType": "Account Type","profileType": "Profile type","PR": "Puerto Rico","PT": "Portugal","PW": "Palau","PY": "Paraguay","AD": "Andorra","AE": "United Arab Emirates","AF": "Afghanistan","AG": "Antigua and Barbuda","AI": "Anguilla","AL": "Albania","AM": "Armenia","AN": "Netherlands Antilles","AQ": "Antarctica","AR": "Argentina","AS": "American Samoa","AT": "Austria","RE": "R\u00E9union","AU": "Australia","AW": "Aruba","AX": "\u00C5land Islands","AZ": "Azerbaijan","RO": "Romania","BA": "Bosnia and Herzegovina","BB": "Barbados","RS": "Serbia","BD": "Bangladesh","RU": "Russia","BE": "Belgium","BF": "Burkina Faso","BG": "Bulgaria","RW": "Rwanda","BH": "Bahrain","BI": "Burundi","BJ": "Benin","BL": "Saint Barth\u00E9lemy","BM": "Bermuda","BN": "Brunei","BO": "Bolivia","BQ": "Caribbean Netherlands","SB": "Solomon Islands","BR": "Brazil","SC": "Seychelles","BS": "Bahamas","BT": "Bhutan","SE": "Sweden","SG": "Singapore","BV": "Bouvet Island","BW": "Botswana","SH": "Saint Helena","SI": "Slovenia","SJ": "Svalbard and Jan Mayen","BZ": "Belize","SK": "Slovakia","SM": "San Marino","SN": "Senegal","CA": "Canada","SR": "Suriname","CC": "Cocos [Keeling] Islands","ST": "S\u00E3o Tom\u00E9 and Pr\u00EDncipe","CF": "Central African Republic","SV": "El Salvador","CH": "Switzerland","SX": "Sint Maarten","SZ": "Swaziland","CK": "Cook Islands","CL": "Chile","CM": "Cameroon","CN": "China","CO": "Colombia","TC": "Turks and Caicos Islands","TD": "Chad","TF": "French Southern Territories","CV": "Cape Verde","TG": "Togo","TH": "Thailand","CW": "Cura\u00E7ao","CX": "Christmas Island","CY": "Cyprus","TJ": "Tajikistan","CZ": "Czech Republic","TK": "Tokelau","TL": "Timor-Leste","TO": "Tonga","TR": "Turkey","TT": "Trinidad and Tobago","DE": "Germany","TV": "Tuvalu","TW": "Taiwan","DJ": "Djibouti","TZ": "Tanzania","DK": "Denmark","DM": "Dominica","DO": "Dominican Republic","UA": "Ukraine","UG": "Uganda","DZ": "Algeria","UM": "U.S. Outlying Islands","US": "United States","EC": "Ecuador","EE": "Estonia","EH": "Western Sahara","UZ": "Uzbekistan","VA": "Vatican City","VC": "Saint Vincent and the Grenadines","ES": "Spain","ET": "Ethiopia","VE": "Venezuela","VG": "British Virgin Islands","VI": "U.S. Virgin Islands","VN": "Vietnam","VU": "Vanuatu","FI": "Finland","FJ": "Fiji","FK": "Falkland Islands","FM": "Micronesia","FO": "Faroe Islands","FR": "France","WF": "Wallis and Futuna","GA": "Gabon","GB": "United Kingdom","WS": "Samoa","GD": "Grenada","GE": "Georgia","GF": "French Guiana","GH": "Ghana","GI": "Gibraltar","GL": "Greenland","GM": "Gambia","GN": "Guinea","GP": "Guadeloupe","GQ": "Equatorial Guinea","GR": "Greece","GS": "South Georgia and the South Sandwich Islands","GU": "Guam","GY": "Guyana","HK": "Hong Kong SAR China","HM": "Heard Island and McDonald Islands","HN": "Honduras","HR": "Croatia","HT": "Haiti","HU": "Hungary","ID": "Indonesia","YT": "Mayotte","IE": "Ireland","IL": "Israel","IM": "Isle of Man","IN": "India","IO": "British Indian Ocean Territory","IS": "Iceland","IT": "Italy","ZM": "Zambia","JM": "Jamaica","JO": "Jordan","JP": "Japan","KE": "Kenya","KG": "Kyrgyzstan","KH": "Cambodia","KI": "Kiribati","KN": "Saint Kitts and Nevis","KW": "Kuwait","KY": "Cayman Islands","KZ": "Kazakhstan","LA": "Laos","LC": "Saint Lucia","LI": "Liechtenstein","LK": "Sri Lanka","LS": "Lesotho","LT": "Lithuania","LU": "Luxembourg","LV": "Latvia","MA": "Morocco","MC": "Monaco","MD": "Moldova","ME": "Montenegro","MF": "Saint Martin","MG": "Madagascar","MH": "Marshall Islands","MK": "Macedonia","ML": "Mali","MN": "Mongolia","MO": "Macau SAR China","MP": "Northern Mariana Islands","MQ": "Martinique","MR": "Mauritania","MS": "Montserrat","MT": "Malta","MU": "Mauritius","MV": "Maldives","MW": "Malawi","MX": "Mexico","MY": "Malaysia","MZ": "Mozambique","NA": "Namibia","NC": "New Caledonia","NE": "Niger","NF": "Norfolk Island","NG": "Nigeria","NI": "Nicaragua","NL": "Netherlands","NO": "Norway","NP": "Nepal","NR": "Nauru","NU": "Niue","NZ": "New Zealand","OM": "Oman","PA": "Panama","PE": "Peru","PG": "Papua New Guinea","PH": "Philippines","PK": "Pakistan","PL": "Poland","PM": "Saint Pierre and Miquelon","PN": "Pitcairn Islands","BANK_ACCOUNT": "Bank Account","CASH_PICKUP_MG": "MoneyGram","PAPER_CHECK": "Paper Check","WIRE_ACCOUNT": "Wire Transfer","BANK_CARD": "Debit Card","BUSINESS": "Business","INDIVIDUAL": "Individual","INTERMEDIARY_ACCOUNT": "","ACCOUNT": "Account","PROFILE": "Profile","ADDRESS": "Address"});HWWidgets.Sdk.init("https://api.sandbox.hyperwallet.com","prg-cac1600c-18c9-4002-9413-aa67bbafbcd3");HWWidgets.init();